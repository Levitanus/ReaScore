{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"ti",
				"tie="
			],
			[
				"Bar",
				"BarCheck"
			],
			[
				"prea",
				"preambula="
			],
			[
				"tie",
				"tie="
			],
			[
				"from",
				"from_fraction"
			],
			[
				"final",
				"final_events"
			],
			[
				"appen",
				"append_part"
			],
			[
				"curr",
				"current_pos"
			],
			[
				"final_",
				"final_events"
			],
			[
				"Frac",
				"fraction"
			],
			[
				"stat",
				"staticmethod"
			],
			[
				"left",
				"left.length"
			],
			[
				"current_",
				"current_pos"
			],
			[
				"fina",
				"final_events"
			],
			[
				"en",
				"bar_end_distance"
			],
			[
				"_bar",
				"_bar_end_distance"
			],
			[
				"Eve",
				"EventPackager"
			],
			[
				"bar_e",
				"bar_end_distance.split"
			],
			[
				"b",
				"bar_end_distance"
			],
			[
				"self",
				"self) -> Fraction:"
			],
			[
				"Natu",
				"natural_number"
			],
			[
				"note_",
				"note_idx"
			],
			[
				"natura",
				"natural_note"
			],
			[
				"war",
				"warnings"
			],
			[
				"wh",
				"white"
			],
			[
				"acc",
				"accidental"
			],
			[
				"acci",
				"accidental else None"
			],
			[
				"maj",
				"major"
			],
			[
				"class",
				"classmethod"
			],
			[
				"dor",
				"dorian"
			],
			[
				"midi_",
				"midi_to_note"
			],
			[
				"ph",
				"phrygian"
			],
			[
				"Scla",
				"Scale"
			],
			[
				"get",
				"get_accidental_of_next_note"
			],
			[
				"scal",
				"optimized_scale"
			],
			[
				"ma",
				"match"
			],
			[
				"root",
				"root_idx"
			],
			[
				"cure",
				"current_note"
			],
			[
				"min",
				"minor"
			],
			[
				"midi",
				"midi_pitch"
			],
			[
				"Value",
				"ValueError"
			],
			[
				"searc",
				"search"
			],
			[
				"optimi",
				"optimized_scale"
			],
			[
				"used_acc",
				"used_acc_list"
			],
			[
				"Acci",
				"Accidental"
			],
			[
				"Accide",
				"Accidental"
			],
			[
				"ap",
				"append(next_note["
			],
			[
				"used_",
				"used_acc"
			],
			[
				"next",
				"next_note)"
			],
			[
				"note",
				"note_idx"
			],
			[
				"string",
				"string_scale"
			],
			[
				"natural",
				"natural_note"
			],
			[
				"note_o",
				"note_of_nr"
			],
			[
				"note_of",
				"note_of_nr"
			],
			[
				"nr_",
				"nr_of_note"
			],
			[
				"used_ac",
				"used_acc"
			],
			[
				"interval",
				"interval"
			],
			[
				"scla",
				"scale_structure"
			],
			[
				"midi_to_",
				"midi_to_note"
			],
			[
				"Pitchre",
				"PitchResolver"
			],
			[
				"Scale",
				"Scale"
			],
			[
				"ACCI",
				"ACCIDENTALS"
			],
			[
				"show",
				"show_message_box"
			],
			[
				"temp",
				"temp_pdf"
			],
			[
				"get_op",
				"get_open_command"
			],
			[
				"pop",
				"Popen"
			],
			[
				"sub",
				"subprocess."
			],
			[
				"tem",
				"temp_pdf"
			],
			[
				"Pro",
				"ProjectInspector"
			],
			[
				"trun",
				"truncate"
			],
			[
				"copy",
				"copyfile"
			],
			[
				"Po",
				"Popen"
			],
			[
				"picked",
				"picked=True"
			],
			[
				"EXT_SET",
				"EXT_SECTION"
			],
			[
				"set_ext",
				"set_ext_state"
			],
			[
				"po",
				"project"
			],
			[
				"sl",
				"sleep"
			],
			[
				"time",
				"time"
			],
			[
				"exi",
				"exists"
			],
			[
				"jo",
				"joinpath"
			],
			[
				"par",
				"parent"
			],
			[
				"is",
				"is_dir"
			],
			[
				"pro",
				"project"
			],
			[
				"Opti",
				"Optional"
			],
			[
				"Runti",
				"RuntimeError"
			],
			[
				"part",
				"part_name"
			],
			[
				"Path",
				"Path"
			],
			[
				"set_",
				"set_ext_state"
			],
			[
				"not",
				"not provided"
			],
			[
				"split",
				"split_by_voice"
			],
			[
				"render_staf",
				"render_staff"
			],
			[
				"split_by_",
				"split_by_voice"
			],
			[
				"active_ta",
				"active_take"
			],
			[
				"selected",
				"selected_tracks"
			],
			[
				"gui",
				"GUID"
			],
			[
				"guid",
				"getuid"
			],
			[
				"toni",
				"tonic_selected"
			],
			[
				"tonic",
				"tonic_selected"
			],
			[
				"Selec",
				"Selectable"
			],
			[
				"Treep",
				"TreePop"
			],
			[
				"Sele",
				"Selectable"
			],
			[
				"BeginC",
				"BeginCombo"
			],
			[
				"Tree",
				"TreeNode"
			],
			[
				"Img",
				"ImGui"
			],
			[
				"Bu",
				"Button"
			],
			[
				"ite",
				"item_nr"
			],
			[
				"main",
				"main_ctx,"
			],
			[
				"Co",
				"Combo"
			],
			[
				"Tre",
				"TreePop"
			],
			[
				"Colla",
				"CollapsingHeader"
			],
			[
				"def",
				"defer(loop)"
			],
			[
				"Des",
				"DestroyContext"
			],
			[
				"open",
				"opened:"
			],
			[
				"Im",
				"ImGui"
			],
			[
				"Be",
				"Begin"
			],
			[
				"mainId",
				"main_id"
			],
			[
				"Crea",
				"CreateContext"
			],
			[
				"genera",
				"generate_imgui"
			],
			[
				"click",
				"click_count"
			],
			[
				"version",
				"get_reaper_version"
			],
			[
				"Att",
				"AttachFont"
			],
			[
				"Pus",
				"PushFont"
			],
			[
				"Font",
				"CreateFont"
			],
			[
				"tonic_",
				"tonic_for_ly"
			],
			[
				"va",
				"value"
			],
			[
				"ren",
				"ly_render"
			],
			[
				"bar",
				"bar_nr == self.bar_nr:"
			],
			[
				"round",
				"round"
			]
		]
	},
	"buffers":
	[
		{
			"file": "rea_score/reascripts/ReaScore_render_selected_track.py",
			"settings":
			{
				"buffer_size": 209,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					3,
					1,
					"insert",
					{
						"characters": "rea_score."
					},
					"CgAAAEsAAAAAAAAATAAAAAAAAAAAAAAATAAAAAAAAABNAAAAAAAAAAAAAABNAAAAAAAAAE4AAAAAAAAAAAAAAE4AAAAAAAAATwAAAAAAAAAAAAAATwAAAAAAAABQAAAAAAAAAAAAAABQAAAAAAAAAFEAAAAAAAAAAAAAAFEAAAAAAAAAUgAAAAAAAAAAAAAAUgAAAAAAAABTAAAAAAAAAAAAAABTAAAAAAAAAFQAAAAAAAAAAAAAAFQAAAAAAAAAVQAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABLAAAAAAAAAEsAAAAAAAAAAAAAAAAA8L8"
				],
				[
					5,
					1,
					"yapf_document",
					null,
					"AQAAAAAAAAAAAAAAHgEAAAAAAAAeAQAAcHJpbnQoInRvcCBvZiBtb2R1bGUiKQppbXBvcnQgcmVhcHkgYXMgcnByCgpwcmludCgicmVhcHkgaW1wb3J0ZWQiKQppbXBvcnQgcmVhX3Njb3JlLmluc3BlY3RvciBhcyBpdAoKcHJpbnQoImluc3BlY3RvciBpbXBvcnRlZCIpCgoKZGVmIHJlbmRlcl9zZWxlY3RlZF90cmFjaygpIC0+IE5vbmU6CiAgICB0cmFjayA9IHJwci5Qcm9qZWN0KCkuc2VsZWN0ZWRfdHJhY2tzWzBdCiAgICBpdC5UcmFja0luc3BlY3RvcigpLnJlbmRlcigpCgoKcmVuZGVyX3NlbGVjdGVkX3RyYWNrKCkKcHJpbnQoImVuZCIpCg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABVAAAAAAAAAFUAAAAAAAAAAAAAAAAA8L8"
				],
				[
					11,
					1,
					"yapf_document",
					null,
					"AQAAAAAAAAAAAAAAHgEAAAAAAAAeAQAAcHJpbnQoInRvcCBvZiBtb2R1bGUiKQppbXBvcnQgcmVhcHkgYXMgcnByCgpwcmludCgicmVhcHkgaW1wb3J0ZWQiKQppbXBvcnQgcmVhX3Njb3JlLmluc3BlY3RvciBhcyBpdAoKcHJpbnQoImluc3BlY3RvciBpbXBvcnRlZCIpCgoKZGVmIHJlbmRlcl9zZWxlY3RlZF90cmFjaygpIC0+IE5vbmU6CiAgICB0cmFjayA9IHJwci5Qcm9qZWN0KCkuc2VsZWN0ZWRfdHJhY2tzWzBdCiAgICBpdC5UcmFja0luc3BlY3RvcigpLnJlbmRlcigpCgoKcmVuZGVyX3NlbGVjdGVkX3RyYWNrKCkKcHJpbnQoImVuZCIpCg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACDAAAAAAAAAIMAAAAAAAAAAAAAAAAA8L8"
				],
				[
					53,
					1,
					"yapf_document",
					null,
					"AQAAAAAAAAAAAAAAHgEAAAAAAAAeAQAAcHJpbnQoInRvcCBvZiBtb2R1bGUiKQppbXBvcnQgcmVhcHkgYXMgcnByCgpwcmludCgicmVhcHkgaW1wb3J0ZWQiKQppbXBvcnQgcmVhX3Njb3JlLmluc3BlY3RvciBhcyBpdAoKcHJpbnQoImluc3BlY3RvciBpbXBvcnRlZCIpCgoKZGVmIHJlbmRlcl9zZWxlY3RlZF90cmFjaygpIC0+IE5vbmU6CiAgICB0cmFjayA9IHJwci5Qcm9qZWN0KCkuc2VsZWN0ZWRfdHJhY2tzWzBdCiAgICBpdC5UcmFja0luc3BlY3RvcigpLnJlbmRlcigpCgoKcmVuZGVyX3NlbGVjdGVkX3RyYWNrKCkKcHJpbnQoImVuZCIpCg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAeAQAAAAAAAB4BAAAAAAAAAAAAAAAA8L8"
				],
				[
					77,
					3,
					"left_delete",
					null,
					"BwAAAGYAAAAAAAAAZgAAAAAAAAAbAAAAcHJpbnQoImluc3BlY3RvciBpbXBvcnRlZCIpLAAAAAAAAAAsAAAAAAAAABcAAABwcmludCgicmVhcHkgaW1wb3J0ZWQiKQAAAAAAAAAAAAAAAAAAAAAWAAAAcHJpbnQoInRvcCBvZiBtb2R1bGUiKTgAAAAAAAAAOAAAAAAAAAABAAAAChUAAAAAAAAAFQAAAAAAAAABAAAACjYAAAAAAAAANgAAAAAAAAABAAAAChQAAAAAAAAAFAAAAAAAAAABAAAACg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAMAAAAWAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABDAAAAAAAAACwAAAAAAAAAAAAAAAAAAACBAAAAAAAAAGYAAAAAAAAAAAAAAAAAAAA"
				],
				[
					79,
					1,
					"yapf_document",
					null,
					"AQAAAAAAAAAAAAAA0QAAAAAAAADSAAAACmltcG9ydCByZWFweSBhcyBycHIKaW1wb3J0IHJlYV9zY29yZS5pbnNwZWN0b3IgYXMgaXQKCgpkZWYgcmVuZGVyX3NlbGVjdGVkX3RyYWNrKCkgLT4gTm9uZToKICAgIHRyYWNrID0gcnByLlByb2plY3QoKS5zZWxlY3RlZF90cmFja3NbMF0KICAgIGl0LlRyYWNrSW5zcGVjdG9yKCkucmVuZGVyKCkKCgpyZW5kZXJfc2VsZWN0ZWRfdHJhY2soKQpwcmludCgiZW5kIikK",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8UAAAAAAAAABQAAAAAAAAAAAAAAAAA8L81AAAAAAAAADUAAAAAAAAAAAAAAAAA8L8"
				],
				[
					14,
					1,
					"yapf_document",
					null,
					"AQAAAAAAAAAAAAAA0QAAAAAAAADRAAAAaW1wb3J0IHJlYXB5IGFzIHJwcgppbXBvcnQgcmVhX3Njb3JlLmluc3BlY3RvciBhcyBpdAoKCmRlZiByZW5kZXJfc2VsZWN0ZWRfdHJhY2soKSAtPiBOb25lOgogICAgdHJhY2sgPSBycHIuUHJvamVjdCgpLnNlbGVjdGVkX3RyYWNrc1swXQogICAgaXQuVHJhY2tJbnNwZWN0b3IoKS5yZW5kZXIoKQoKCnJlbmRlcl9zZWxlY3RlZF90cmFjaygpCnByaW50KCJlbmQiKQo",
					"AQAAAAAAAAABAAAA0QAAAAAAAADRAAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "tests/test_dom.py",
			"settings":
			{
				"buffer_size": 1299,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					1,
					1,
					"yapf_document",
					null,
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					2,
					1,
					"insert",
					{
						"characters": "\ndef"
					},
					"BAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAQAAAAAAAAACAAAAAAAAAAAAAAACAAAAAAAAAAMAAAAAAAAAAAAAAAMAAAAAAAAABAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					3,
					1,
					"insert",
					{
						"characters": " test_even"
					},
					"CgAAAAQAAAAAAAAABQAAAAAAAAAAAAAABQAAAAAAAAAGAAAAAAAAAAAAAAAGAAAAAAAAAAcAAAAAAAAAAAAAAAcAAAAAAAAACAAAAAAAAAAAAAAACAAAAAAAAAAJAAAAAAAAAAAAAAAJAAAAAAAAAAoAAAAAAAAAAAAAAAoAAAAAAAAACwAAAAAAAAAAAAAACwAAAAAAAAAMAAAAAAAAAAAAAAAMAAAAAAAAAA0AAAAAAAAAAAAAAA0AAAAAAAAADgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABAAAAAAAAAAEAAAAAAAAAAAAAAAAAPC/"
				],
				[
					4,
					1,
					"insert",
					{
						"characters": "t_packa"
					},
					"BwAAAA4AAAAAAAAADwAAAAAAAAAAAAAADwAAAAAAAAAQAAAAAAAAAAAAAAAQAAAAAAAAABEAAAAAAAAAAAAAABEAAAAAAAAAEgAAAAAAAAAAAAAAEgAAAAAAAAATAAAAAAAAAAAAAAATAAAAAAAAABQAAAAAAAAAAAAAABQAAAAAAAAAFQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADgAAAAAAAAAOAAAAAAAAAAAAAAAAAPC/"
				],
				[
					5,
					1,
					"insert",
					{
						"characters": "ger"
					},
					"AwAAABUAAAAAAAAAFgAAAAAAAAAAAAAAFgAAAAAAAAAXAAAAAAAAAAAAAAAXAAAAAAAAABgAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFQAAAAAAAAAVAAAAAAAAAAAAAAAAAPC/"
				],
				[
					6,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAABgAAAAAAAAAGgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGAAAAAAAAAAYAAAAAAAAAAAAAAAAAPC/"
				],
				[
					8,
					1,
					"insert",
					{
						"characters": ":"
					},
					"AQAAABoAAAAAAAAAGwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGgAAAAAAAAAaAAAAAAAAAP///////+9/"
				],
				[
					9,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAABsAAAAAAAAAHAAAAAAAAAAAAAAAHAAAAAAAAAAgAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGwAAAAAAAAAbAAAAAAAAAAAAAAAAAPC/"
				],
				[
					12,
					1,
					"insert",
					{
						"characters": "Eve"
					},
					"AwAAACAAAAAAAAAAIQAAAAAAAAAAAAAAIQAAAAAAAAAiAAAAAAAAAAAAAAAiAAAAAAAAACMAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIAAAAAAAAAAgAAAAAAAAAAAAAAAAAPC/"
				],
				[
					14,
					1,
					"insert_completion",
					{
						"completion": "EventPackager$0",
						"format": "snippet",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "EventPackager"
					},
					"AgAAACAAAAAAAAAAIAAAAAAAAAADAAAARXZlIAAAAAAAAAAtAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIwAAAAAAAAAjAAAAAAAAAAAAAAAAAPC/"
				],
				[
					15,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAC0AAAAAAAAALwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALQAAAAAAAAAtAAAAAAAAAAAAAAAAAPC/"
				],
				[
					16,
					1,
					"insert",
					{
						"characters": "Voice"
					},
					"BQAAAC4AAAAAAAAALwAAAAAAAAAAAAAALwAAAAAAAAAwAAAAAAAAAAAAAAAwAAAAAAAAADEAAAAAAAAAAAAAADEAAAAAAAAAMgAAAAAAAAAAAAAAMgAAAAAAAAAzAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALgAAAAAAAAAuAAAAAAAAAAAAAAAAAPC/"
				],
				[
					17,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAADMAAAAAAAAANQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMwAAAAAAAAAzAAAAAAAAAAAAAAAAAPC/"
				],
				[
					19,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAADUAAAAAAAAANgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANQAAAAAAAAA1AAAAAAAAAAAAAAAAAPC/"
				],
				[
					20,
					1,
					"insert",
					{
						"characters": " Position"
					},
					"CQAAADYAAAAAAAAANwAAAAAAAAAAAAAANwAAAAAAAAA4AAAAAAAAAAAAAAA4AAAAAAAAADkAAAAAAAAAAAAAADkAAAAAAAAAOgAAAAAAAAAAAAAAOgAAAAAAAAA7AAAAAAAAAAAAAAA7AAAAAAAAADwAAAAAAAAAAAAAADwAAAAAAAAAPQAAAAAAAAAAAAAAPQAAAAAAAAA+AAAAAAAAAAAAAAA+AAAAAAAAAD8AAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANgAAAAAAAAA2AAAAAAAAAAAAAAAAAPC/"
				],
				[
					21,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAD8AAAAAAAAAQQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPwAAAAAAAAA/AAAAAAAAAAAAAAAAAPC/"
				],
				[
					22,
					1,
					"insert",
					{
						"characters": "1,5"
					},
					"AwAAAEAAAAAAAAAAQQAAAAAAAAAAAAAAQQAAAAAAAABCAAAAAAAAAAAAAABCAAAAAAAAAEMAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQAAAAAAAAABAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					23,
					2,
					"left_delete",
					null,
					"AgAAAEIAAAAAAAAAQgAAAAAAAAABAAAANUEAAAAAAAAAQQAAAAAAAAABAAAALA",
					"AQAAAAAAAAABAAAAQwAAAAAAAABDAAAAAAAAAAAAAAAAAPC/"
				],
				[
					24,
					1,
					"insert",
					{
						"characters": ".5"
					},
					"AgAAAEEAAAAAAAAAQgAAAAAAAAAAAAAAQgAAAAAAAABDAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQQAAAAAAAABBAAAAAAAAAAAAAAAAAPC/"
				],
				[
					26,
					1,
					"insert",
					{
						"characters": "a."
					},
					"AgAAAEUAAAAAAAAARgAAAAAAAAAAAAAARgAAAAAAAABHAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARQAAAAAAAABFAAAAAAAAAP///////+9/"
				],
				[
					27,
					2,
					"left_delete",
					null,
					"AgAAAEYAAAAAAAAARgAAAAAAAAABAAAALkUAAAAAAAAARQAAAAAAAAABAAAAYQ",
					"AQAAAAAAAAABAAAARwAAAAAAAABHAAAAAAAAAAAAAAAAAPC/"
				],
				[
					28,
					1,
					"insert",
					{
						"characters": ".append"
					},
					"BwAAAEUAAAAAAAAARgAAAAAAAAAAAAAARgAAAAAAAABHAAAAAAAAAAAAAABHAAAAAAAAAEgAAAAAAAAAAAAAAEgAAAAAAAAASQAAAAAAAAAAAAAASQAAAAAAAABKAAAAAAAAAAAAAABKAAAAAAAAAEsAAAAAAAAAAAAAAEsAAAAAAAAATAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARQAAAAAAAABFAAAAAAAAAAAAAAAAAPC/"
				],
				[
					29,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAEwAAAAAAAAATgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATAAAAAAAAABMAAAAAAAAAAAAAAAAAPC/"
				],
				[
					30,
					1,
					"insert",
					{
						"characters": "Event"
					},
					"BQAAAE0AAAAAAAAATgAAAAAAAAAAAAAATgAAAAAAAABPAAAAAAAAAAAAAABPAAAAAAAAAFAAAAAAAAAAAAAAAFAAAAAAAAAAUQAAAAAAAAAAAAAAUQAAAAAAAABSAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATQAAAAAAAABNAAAAAAAAAAAAAAAAAPC/"
				],
				[
					31,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAFIAAAAAAAAAVAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUgAAAAAAAABSAAAAAAAAAAAAAAAAAPC/"
				],
				[
					32,
					1,
					"insert",
					{
						"characters": "Pitch"
					},
					"BQAAAFMAAAAAAAAAVAAAAAAAAAAAAAAAVAAAAAAAAABVAAAAAAAAAAAAAABVAAAAAAAAAFYAAAAAAAAAAAAAAFYAAAAAAAAAVwAAAAAAAAAAAAAAVwAAAAAAAABYAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUwAAAAAAAABTAAAAAAAAAAAAAAAAAPC/"
				],
				[
					33,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAFgAAAAAAAAAWgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWAAAAAAAAABYAAAAAAAAAAAAAAAAAPC/"
				],
				[
					34,
					1,
					"insert",
					{
						"characters": "6"
					},
					"AQAAAFkAAAAAAAAAWgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWQAAAAAAAABZAAAAAAAAAAAAAAAAAPC/"
				],
				[
					35,
					1,
					"left_delete",
					null,
					"AQAAAFkAAAAAAAAAWQAAAAAAAAABAAAANg",
					"AQAAAAAAAAABAAAAWgAAAAAAAABaAAAAAAAAAAAAAAAAAPC/"
				],
				[
					36,
					1,
					"insert",
					{
						"characters": "60"
					},
					"AgAAAFkAAAAAAAAAWgAAAAAAAAAAAAAAWgAAAAAAAABbAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWQAAAAAAAABZAAAAAAAAAAAAAAAAAPC/"
				],
				[
					38,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAFwAAAAAAAAAXQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXAAAAAAAAABcAAAAAAAAAAAAAAAAAPC/"
				],
				[
					39,
					1,
					"insert",
					{
						"characters": " L"
					},
					"AgAAAF0AAAAAAAAAXgAAAAAAAAAAAAAAXgAAAAAAAABfAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXQAAAAAAAABdAAAAAAAAAAAAAAAAAPC/"
				],
				[
					40,
					3,
					"left_delete",
					null,
					"AwAAAF4AAAAAAAAAXgAAAAAAAAABAAAATF0AAAAAAAAAXQAAAAAAAAABAAAAIFwAAAAAAAAAXAAAAAAAAAABAAAALA",
					"AQAAAAAAAAABAAAAXwAAAAAAAABfAAAAAAAAAAAAAAAAAPC/"
				],
				[
					42,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAFMAAAAAAAAAVAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUwAAAAAAAABTAAAAAAAAAAAAAAAAAPC/"
				],
				[
					45,
					1,
					"insert",
					{
						"characters": "Length("
					},
					"BwAAAFMAAAAAAAAAVAAAAAAAAAAAAAAAVAAAAAAAAABVAAAAAAAAAAAAAABVAAAAAAAAAFYAAAAAAAAAAAAAAFYAAAAAAAAAVwAAAAAAAAAAAAAAVwAAAAAAAABYAAAAAAAAAAAAAABYAAAAAAAAAFkAAAAAAAAAAAAAAFkAAAAAAAAAWgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUwAAAAAAAABTAAAAAAAAAAAAAAAAAPC/"
				],
				[
					46,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAAFoAAAAAAAAAWwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWgAAAAAAAABaAAAAAAAAAAAAAAAAAPC/"
				],
				[
					48,
					1,
					"insert",
					{
						"characters": "6"
					},
					"AQAAAFoAAAAAAAAAWwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWgAAAAAAAABaAAAAAAAAAAAAAAAAAPC/"
				],
				[
					51,
					1,
					"yapf_document",
					null,
					"AQAAAAAAAAAAAAAAaAAAAAAAAABoAAAACmRlZiB0ZXN0X2V2ZW50X3BhY2thZ2VyKCk6CiAgICBFdmVudFBhY2thZ2VyKFZvaWNlKCksIFBvc2l0aW9uKDEuNSkpLmFwcGVuZChFdmVudChMZW5ndGgoNiksUGl0Y2goNjApKSk",
					"AQAAAAAAAAABAAAAaAAAAAAAAABoAAAAAAAAAP///////+9/"
				],
				[
					54,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion_item {\"session_name\":\"LSP-pyright\",\"item\":{\"textEdit\":{\"range\":{\"end\":{\"character\":17,\"line\":1},\"start\":{\"character\":4,\"line\":1}},\"newText\":\"EventPackager\"},\"label\":\"EventPackager\",\"detail\":\"Auto-import\",\"data\":{\"workspacePath\":\"/home/levitanus/gits/ReaScore\",\"filePath\":\"/home/levitanus/gits/ReaScore/tests/test_dom.py\",\"symbolLabel\":\"EventPackager\",\"autoImportText\":\"```\\nfrom rea_score.dom import EventPackager\\n```\",\"position\":{\"character\":17,\"line\":1}},\"documentation\":{\"value\":\"```\\nfrom rea_score.dom import EventPackager\\n```\",\"kind\":\"markdown\"},\"kind\":7,\"sortText\":\"12.9999.EventPackager\"}}",
						"format": "command",
						"keep_prefix": true,
						"must_insert": false,
						"query_change_id":
						[
							48,
							53,
							0
						],
						"trigger": "EventPackager"
					},
					"AgAAAB8AAAAAAAAAHwAAAAAAAAANAAAARXZlbnRQYWNrYWdlch8AAAAAAAAALAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALAAAAAAAAAAsAAAAAAAAAAAAAAAAAPC/"
				],
				[
					55,
					1,
					"lsp_apply_document_edit",
					{
						"changes":
						[
							[
								[
									0,
									0
								],
								[
									0,
									0
								],
								"from rea_score.dom import EventPackager\n\n\n",
								null
							]
						]
					},
					"AQAAAAAAAAAAAAAAKgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALAAAAAAAAAAsAAAAAAAAAAAAAAAAAPC/"
				],
				[
					57,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion_item {\"session_name\":\"LSP-pyright\",\"item\":{\"textEdit\":{\"range\":{\"end\":{\"character\":35,\"line\":4},\"start\":{\"character\":27,\"line\":4}},\"newText\":\"Position\"},\"label\":\"Position\",\"detail\":\"Auto-import\",\"data\":{\"workspacePath\":\"/home/levitanus/gits/ReaScore\",\"filePath\":\"/home/levitanus/gits/ReaScore/tests/test_dom.py\",\"symbolLabel\":\"Position\",\"autoImportText\":\"```\\nfrom rea_score.primitives import Position\\n```\",\"position\":{\"character\":35,\"line\":4}},\"documentation\":{\"value\":\"```\\nfrom rea_score.primitives import Position\\n```\",\"kind\":\"markdown\"},\"kind\":7,\"sortText\":\"12.9999.Position\"}}",
						"format": "command",
						"keep_prefix": true,
						"must_insert": false,
						"query_change_id":
						[
							51,
							56,
							0
						],
						"trigger": "Position"
					},
					"AgAAAGAAAAAAAAAAYAAAAAAAAAAIAAAAUG9zaXRpb25gAAAAAAAAAGgAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAaAAAAAAAAABoAAAAAAAAAAAAAAAAAPC/"
				],
				[
					58,
					1,
					"lsp_apply_document_edit",
					{
						"changes":
						[
							[
								[
									0,
									39
								],
								[
									0,
									39
								],
								"\nfrom rea_score.primitives import Position",
								null
							]
						]
					},
					"AQAAACcAAAAAAAAAUQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAaAAAAAAAAABoAAAAAAAAAAAAAAAAAPC/"
				],
				[
					60,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion_item {\"session_name\":\"LSP-pyright\",\"item\":{\"textEdit\":{\"range\":{\"end\":{\"character\":23,\"line\":5},\"start\":{\"character\":18,\"line\":5}},\"newText\":\"Voice\"},\"label\":\"Voice\",\"detail\":\"Auto-import\",\"data\":{\"workspacePath\":\"/home/levitanus/gits/ReaScore\",\"filePath\":\"/home/levitanus/gits/ReaScore/tests/test_dom.py\",\"symbolLabel\":\"Voice\",\"autoImportText\":\"```\\nfrom rea_score.dom import Voice\\n```\",\"position\":{\"character\":23,\"line\":5}},\"documentation\":{\"value\":\"```\\nfrom rea_score.dom import Voice\\n```\",\"kind\":\"markdown\"},\"kind\":7,\"sortText\":\"12.9999.Voice\"}}",
						"format": "command",
						"keep_prefix": true,
						"must_insert": false,
						"query_change_id":
						[
							54,
							59,
							0
						],
						"trigger": "Voice"
					},
					"AgAAAIEAAAAAAAAAgQAAAAAAAAAFAAAAVm9pY2WBAAAAAAAAAIYAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhgAAAAAAAACGAAAAAAAAAAAAAAAAAPC/"
				],
				[
					61,
					1,
					"lsp_apply_document_edit",
					{
						"changes":
						[
							[
								[
									0,
									39
								],
								[
									0,
									39
								],
								", Voice",
								null
							]
						]
					},
					"AQAAACcAAAAAAAAALgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhgAAAAAAAACGAAAAAAAAAAAAAAAAAPC/"
				],
				[
					63,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion_item {\"session_name\":\"LSP-pyright\",\"item\":{\"textEdit\":{\"range\":{\"end\":{\"character\":54,\"line\":5},\"start\":{\"character\":49,\"line\":5}},\"newText\":\"Event\"},\"label\":\"Event\",\"detail\":\"Auto-import\",\"data\":{\"workspacePath\":\"/home/levitanus/gits/ReaScore\",\"filePath\":\"/home/levitanus/gits/ReaScore/tests/test_dom.py\",\"symbolLabel\":\"Event\",\"autoImportText\":\"```\\nfrom rea_score.primitives import Event\\n```\",\"position\":{\"character\":54,\"line\":5}},\"documentation\":{\"value\":\"```\\nfrom rea_score.primitives import Event\\n```\",\"kind\":\"markdown\"},\"kind\":7,\"sortText\":\"12.9999.Event\"}}",
						"format": "command",
						"keep_prefix": true,
						"must_insert": false,
						"query_change_id":
						[
							57,
							62,
							0
						],
						"trigger": "Event"
					},
					"AgAAAKcAAAAAAAAApwAAAAAAAAAFAAAARXZlbnSnAAAAAAAAAKwAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArAAAAAAAAACsAAAAAAAAAAAAAAAAAPC/"
				],
				[
					64,
					1,
					"lsp_apply_document_edit",
					{
						"changes":
						[
							[
								[
									1,
									33
								],
								[
									1,
									33
								],
								"Event, ",
								null
							]
						]
					},
					"AQAAAFAAAAAAAAAAVwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArAAAAAAAAACsAAAAAAAAAAAAAAAAAPC/"
				],
				[
					68,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion_item {\"session_name\":\"LSP-pyright\",\"item\":{\"textEdit\":{\"range\":{\"end\":{\"character\":61,\"line\":5},\"start\":{\"character\":55,\"line\":5}},\"newText\":\"Length\"},\"label\":\"Length\",\"detail\":\"Auto-import\",\"data\":{\"workspacePath\":\"/home/levitanus/gits/ReaScore\",\"filePath\":\"/home/levitanus/gits/ReaScore/tests/test_dom.py\",\"symbolLabel\":\"Length\",\"autoImportText\":\"```\\nfrom rea_score.primitives import Length\\n```\",\"position\":{\"character\":61,\"line\":5}},\"documentation\":{\"value\":\"```\\nfrom rea_score.primitives import Length\\n```\",\"kind\":\"markdown\"},\"kind\":7,\"sortText\":\"12.9999.Length\"}}",
						"format": "command",
						"keep_prefix": true,
						"must_insert": false,
						"query_change_id":
						[
							62,
							67,
							0
						],
						"trigger": "Length"
					},
					"AgAAALQAAAAAAAAAtAAAAAAAAAAGAAAATGVuZ3RotAAAAAAAAAC6AAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAugAAAAAAAAC6AAAAAAAAAAAAAAAAAPC/"
				],
				[
					69,
					1,
					"lsp_apply_document_edit",
					{
						"changes":
						[
							[
								[
									1,
									38
								],
								[
									1,
									38
								],
								", Length",
								null
							]
						]
					},
					"AQAAAFUAAAAAAAAAXQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAugAAAAAAAAC6AAAAAAAAAAAAAAAAAPC/"
				],
				[
					71,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion_item {\"session_name\":\"LSP-pyright\",\"item\":{\"textEdit\":{\"range\":{\"end\":{\"character\":71,\"line\":5},\"start\":{\"character\":66,\"line\":5}},\"newText\":\"Pitch\"},\"label\":\"Pitch\",\"detail\":\"Auto-import\",\"data\":{\"workspacePath\":\"/home/levitanus/gits/ReaScore\",\"filePath\":\"/home/levitanus/gits/ReaScore/tests/test_dom.py\",\"symbolLabel\":\"Pitch\",\"autoImportText\":\"```\\nfrom rea_score.primitives import Pitch\\n```\",\"position\":{\"character\":71,\"line\":5}},\"documentation\":{\"value\":\"```\\nfrom rea_score.primitives import Pitch\\n```\",\"kind\":\"markdown\"},\"kind\":7,\"sortText\":\"12.9999.Pitch\"}}",
						"format": "command",
						"keep_prefix": true,
						"must_insert": false,
						"query_change_id":
						[
							65,
							70,
							0
						],
						"trigger": "Pitch"
					},
					"AgAAAMcAAAAAAAAAxwAAAAAAAAAFAAAAUGl0Y2jHAAAAAAAAAMwAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzAAAAAAAAADMAAAAAAAAAAAAAAAAAPC/"
				],
				[
					72,
					1,
					"lsp_apply_document_edit",
					{
						"changes":
						[
							[
								[
									1,
									46
								],
								[
									1,
									46
								],
								", Pitch",
								null
							]
						]
					},
					"AQAAAF0AAAAAAAAAZAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzAAAAAAAAADMAAAAAAAAAAAAAAAAAPC/"
				],
				[
					74,
					1,
					"yapf_document",
					null,
					"AQAAAAAAAAAAAAAA2QAAAAAAAADZAAAAZnJvbSByZWFfc2NvcmUuZG9tIGltcG9ydCBFdmVudFBhY2thZ2VyLCBWb2ljZQpmcm9tIHJlYV9zY29yZS5wcmltaXRpdmVzIGltcG9ydCBFdmVudCwgTGVuZ3RoLCBQaXRjaCwgUG9zaXRpb24KCgpkZWYgdGVzdF9ldmVudF9wYWNrYWdlcigpOgogICAgRXZlbnRQYWNrYWdlcihWb2ljZSgpLCBQb3NpdGlvbigxLjUpKS5hcHBlbmQoRXZlbnQoTGVuZ3RoKDYpLCBQaXRjaCg2MCkpKQ",
					"AQAAAAAAAAABAAAA0wAAAAAAAADTAAAAAAAAAAAAAAAAAPC/"
				],
				[
					76,
					1,
					"insert",
					{
						"characters": "\nvoice"
					},
					"BwAAAIsAAAAAAAAAjAAAAAAAAAAAAAAAjAAAAAAAAACQAAAAAAAAAAAAAACQAAAAAAAAAJEAAAAAAAAAAAAAAJEAAAAAAAAAkgAAAAAAAAAAAAAAkgAAAAAAAACTAAAAAAAAAAAAAACTAAAAAAAAAJQAAAAAAAAAAAAAAJQAAAAAAAAAlQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiwAAAAAAAACLAAAAAAAAAAAAAAAAwIFA"
				],
				[
					77,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAJUAAAAAAAAAlgAAAAAAAAAAAAAAlgAAAAAAAACXAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlQAAAAAAAACVAAAAAAAAAAAAAAAAAPC/"
				],
				[
					78,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAJcAAAAAAAAAmAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlwAAAAAAAACXAAAAAAAAAAAAAAAAAPC/"
				],
				[
					83,
					1,
					"cut",
					null,
					"AQAAAKsAAAAAAAAAqwAAAAAAAAAHAAAAVm9pY2UoKQ",
					"AQAAAAAAAAABAAAAqwAAAAAAAACyAAAAAAAAAAAAAAAAAPC/"
				],
				[
					85,
					1,
					"paste",
					null,
					"AQAAAJgAAAAAAAAAnwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmAAAAAAAAACYAAAAAAAAAAAAAAAAAGJA"
				],
				[
					88,
					1,
					"insert",
					{
						"characters": "voice"
					},
					"BQAAALIAAAAAAAAAswAAAAAAAAAAAAAAswAAAAAAAAC0AAAAAAAAAAAAAAC0AAAAAAAAALUAAAAAAAAAAAAAALUAAAAAAAAAtgAAAAAAAAAAAAAAtgAAAAAAAAC3AAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsgAAAAAAAACyAAAAAAAAAAAAAAAAAPC/"
				],
				[
					91,
					1,
					"yapf_document",
					null,
					"AQAAAAAAAAAAAAAA6wAAAAAAAADrAAAAZnJvbSByZWFfc2NvcmUuZG9tIGltcG9ydCBFdmVudFBhY2thZ2VyLCBWb2ljZQpmcm9tIHJlYV9zY29yZS5wcmltaXRpdmVzIGltcG9ydCBFdmVudCwgTGVuZ3RoLCBQaXRjaCwgUG9zaXRpb24KCgpkZWYgdGVzdF9ldmVudF9wYWNrYWdlcigpOgogICAgdm9pY2UgPSBWb2ljZSgpCiAgICBFdmVudFBhY2thZ2VyKHZvaWNlLCBQb3NpdGlvbigxLjUpKS5hcHBlbmQoRXZlbnQoTGVuZ3RoKDYpLCBQaXRjaCg2MCkpKQ",
					"AQAAAAAAAAABAAAA6wAAAAAAAADrAAAAAAAAAP///////+9/"
				],
				[
					92,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAOsAAAAAAAAA7AAAAAAAAAAAAAAA7AAAAAAAAADwAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6wAAAAAAAADrAAAAAAAAAP///////+9/"
				],
				[
					93,
					1,
					"insert",
					{
						"characters": "assert"
					},
					"BgAAAPAAAAAAAAAA8QAAAAAAAAAAAAAA8QAAAAAAAADyAAAAAAAAAAAAAADyAAAAAAAAAPMAAAAAAAAAAAAAAPMAAAAAAAAA9AAAAAAAAAAAAAAA9AAAAAAAAAD1AAAAAAAAAAAAAAD1AAAAAAAAAPYAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8AAAAAAAAADwAAAAAAAAAAAAAAAAAPC/"
				],
				[
					94,
					1,
					"insert",
					{
						"characters": " Voice"
					},
					"BgAAAPYAAAAAAAAA9wAAAAAAAAAAAAAA9wAAAAAAAAD4AAAAAAAAAAAAAAD4AAAAAAAAAPkAAAAAAAAAAAAAAPkAAAAAAAAA+gAAAAAAAAAAAAAA+gAAAAAAAAD7AAAAAAAAAAAAAAD7AAAAAAAAAPwAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9gAAAAAAAAD2AAAAAAAAAAAAAAAAAPC/"
				],
				[
					96,
					1,
					"right_delete",
					null,
					"AQAAAPcAAAAAAAAA9wAAAAAAAAABAAAAVg",
					"AQAAAAAAAAABAAAA9wAAAAAAAAD3AAAAAAAAAAAAAAAAAPC/"
				],
				[
					97,
					1,
					"insert",
					{
						"characters": "v"
					},
					"AQAAAPcAAAAAAAAA+AAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9wAAAAAAAAD3AAAAAAAAAAAAAAAAAPC/"
				],
				[
					99,
					1,
					"insert",
					{
						"characters": " is"
					},
					"AwAAAPwAAAAAAAAA/QAAAAAAAAAAAAAA/QAAAAAAAAD+AAAAAAAAAAAAAAD+AAAAAAAAAP8AAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/AAAAAAAAAD8AAAAAAAAAP///////+9/"
				],
				[
					100,
					1,
					"insert",
					{
						"characters": " Tr"
					},
					"AwAAAP8AAAAAAAAAAAEAAAAAAAAAAAAAAAEAAAAAAAABAQAAAAAAAAAAAAABAQAAAAAAAAIBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/wAAAAAAAAD/AAAAAAAAAAAAAAAAAPC/"
				],
				[
					101,
					2,
					"left_delete",
					null,
					"AgAAAAEBAAAAAAAAAQEAAAAAAAABAAAAcgABAAAAAAAAAAEAAAAAAAABAAAAVA",
					"AQAAAAAAAAABAAAAAgEAAAAAAAACAQAAAAAAAAAAAAAAAPC/"
				],
				[
					102,
					1,
					"insert",
					{
						"characters": "False"
					},
					"BQAAAAABAAAAAAAAAQEAAAAAAAAAAAAAAQEAAAAAAAACAQAAAAAAAAAAAAACAQAAAAAAAAMBAAAAAAAAAAAAAAMBAAAAAAAABAEAAAAAAAAAAAAABAEAAAAAAAAFAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAEAAAAAAAAAAQAAAAAAAAAAAAAAAPC/"
				],
				[
					104,
					1,
					"yapf_document",
					null,
					"AQAAAAAAAAAAAAAABQEAAAAAAAAFAQAAZnJvbSByZWFfc2NvcmUuZG9tIGltcG9ydCBFdmVudFBhY2thZ2VyLCBWb2ljZQpmcm9tIHJlYV9zY29yZS5wcmltaXRpdmVzIGltcG9ydCBFdmVudCwgTGVuZ3RoLCBQaXRjaCwgUG9zaXRpb24KCgpkZWYgdGVzdF9ldmVudF9wYWNrYWdlcigpOgogICAgdm9pY2UgPSBWb2ljZSgpCiAgICBFdmVudFBhY2thZ2VyKHZvaWNlLCBQb3NpdGlvbigxLjUpKS5hcHBlbmQoRXZlbnQoTGVuZ3RoKDYpLCBQaXRjaCg2MCkpKQogICAgYXNzZXJ0IHZvaWNlIGlzIEZhbHNl",
					"AQAAAAAAAAABAAAABQEAAAAAAAAFAQAAAAAAAAAAAAAAAPC/"
				],
				[
					125,
					1,
					"yapf_document",
					null,
					"AQAAAAAAAAAAAAAABQEAAAAAAAAFAQAAZnJvbSByZWFfc2NvcmUuZG9tIGltcG9ydCBFdmVudFBhY2thZ2VyLCBWb2ljZQpmcm9tIHJlYV9zY29yZS5wcmltaXRpdmVzIGltcG9ydCBFdmVudCwgTGVuZ3RoLCBQaXRjaCwgUG9zaXRpb24KCgpkZWYgdGVzdF9ldmVudF9wYWNrYWdlcigpOgogICAgdm9pY2UgPSBWb2ljZSgpCiAgICBFdmVudFBhY2thZ2VyKHZvaWNlLCBQb3NpdGlvbigxLjUpKS5hcHBlbmQoRXZlbnQoTGVuZ3RoKDYpLCBQaXRjaCg2MCkpKQogICAgYXNzZXJ0IHZvaWNlIGlzIEZhbHNl",
					"AQAAAAAAAAABAAAAnwAAAAAAAACfAAAAAAAAAAAAAAAAAPC/"
				],
				[
					158,
					1,
					"insert",
					{
						"characters": "\nlength"
					},
					"CAAAAJ8AAAAAAAAAoAAAAAAAAAAAAAAAoAAAAAAAAACkAAAAAAAAAAAAAACkAAAAAAAAAKUAAAAAAAAAAAAAAKUAAAAAAAAApgAAAAAAAAAAAAAApgAAAAAAAACnAAAAAAAAAAAAAACnAAAAAAAAAKgAAAAAAAAAAAAAAKgAAAAAAAAAqQAAAAAAAAAAAAAAqQAAAAAAAACqAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnwAAAAAAAACfAAAAAAAAAAAAAAAAAPC/"
				],
				[
					159,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAKoAAAAAAAAAqwAAAAAAAAAAAAAAqwAAAAAAAACsAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqgAAAAAAAACqAAAAAAAAAAAAAAAAAPC/"
				],
				[
					160,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAKwAAAAAAAAArQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArAAAAAAAAACsAAAAAAAAAAAAAAAAAPC/"
				],
				[
					166,
					1,
					"cut",
					null,
					"AQAAAOMAAAAAAAAA4wAAAAAAAAAJAAAATGVuZ3RoKDYp",
					"AQAAAAAAAAABAAAA4wAAAAAAAADsAAAAAAAAAAAAAAAAAPC/"
				],
				[
					167,
					1,
					"insert",
					{
						"characters": "length"
					},
					"BgAAAOMAAAAAAAAA5AAAAAAAAAAAAAAA5AAAAAAAAADlAAAAAAAAAAAAAADlAAAAAAAAAOYAAAAAAAAAAAAAAOYAAAAAAAAA5wAAAAAAAAAAAAAA5wAAAAAAAADoAAAAAAAAAAAAAADoAAAAAAAAAOkAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4wAAAAAAAADjAAAAAAAAAAAAAAAAAPC/"
				],
				[
					169,
					1,
					"paste",
					null,
					"AQAAAK0AAAAAAAAAtgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArQAAAAAAAACtAAAAAAAAAAAAAAAAgH1A"
				],
				[
					175,
					1,
					"cut",
					null,
					"AQAAANAAAAAAAAAA0AAAAAAAAAANAAAAUG9zaXRpb24oMS41KQ",
					"AQAAAAAAAAABAAAA0AAAAAAAAADdAAAAAAAAAAAAAAAAAPC/"
				],
				[
					176,
					1,
					"insert",
					{
						"characters": "position"
					},
					"CAAAANAAAAAAAAAA0QAAAAAAAAAAAAAA0QAAAAAAAADSAAAAAAAAAAAAAADSAAAAAAAAANMAAAAAAAAAAAAAANMAAAAAAAAA1AAAAAAAAAAAAAAA1AAAAAAAAADVAAAAAAAAAAAAAADVAAAAAAAAANYAAAAAAAAAAAAAANYAAAAAAAAA1wAAAAAAAAAAAAAA1wAAAAAAAADYAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0AAAAAAAAADQAAAAAAAAAAAAAAAAAPC/"
				],
				[
					178,
					1,
					"insert",
					{
						"characters": "\nposition"
					},
					"CgAAALYAAAAAAAAAtwAAAAAAAAAAAAAAtwAAAAAAAAC7AAAAAAAAAAAAAAC7AAAAAAAAALwAAAAAAAAAAAAAALwAAAAAAAAAvQAAAAAAAAAAAAAAvQAAAAAAAAC+AAAAAAAAAAAAAAC+AAAAAAAAAL8AAAAAAAAAAAAAAL8AAAAAAAAAwAAAAAAAAAAAAAAAwAAAAAAAAADBAAAAAAAAAAAAAADBAAAAAAAAAMIAAAAAAAAAAAAAAMIAAAAAAAAAwwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtgAAAAAAAAC2AAAAAAAAAAAAAAAAgHBA"
				],
				[
					179,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAMMAAAAAAAAAxAAAAAAAAAAAAAAAxAAAAAAAAADFAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwwAAAAAAAADDAAAAAAAAAAAAAAAAAPC/"
				],
				[
					180,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAMUAAAAAAAAAxgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxQAAAAAAAADFAAAAAAAAAAAAAAAAAPC/"
				],
				[
					181,
					1,
					"paste",
					null,
					"AQAAAMYAAAAAAAAA0wAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxgAAAAAAAADGAAAAAAAAAAAAAAAAAPC/"
				],
				[
					184,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAABcBAAAAAAAAGAEAAAAAAAAAAAAAGAEAAAAAAAAcAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFwEAAAAAAAAXAQAAAAAAAP///////+9/"
				],
				[
					187,
					1,
					"insert",
					{
						"characters": "\nassert"
					},
					"CQAAANMAAAAAAAAA1AAAAAAAAAAAAAAA1AAAAAAAAADYAAAAAAAAAAAAAAAdAQAAAAAAAB0BAAAAAAAABAAAACAgICDYAAAAAAAAANkAAAAAAAAAAAAAANkAAAAAAAAA2gAAAAAAAAAAAAAA2gAAAAAAAADbAAAAAAAAAAAAAADbAAAAAAAAANwAAAAAAAAAAAAAANwAAAAAAAAA3QAAAAAAAAAAAAAA3QAAAAAAAADeAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0wAAAAAAAADTAAAAAAAAAP///////+9/"
				],
				[
					188,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAN4AAAAAAAAA3wAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3gAAAAAAAADeAAAAAAAAAAAAAAAAAPC/"
				],
				[
					189,
					1,
					"insert",
					{
						"characters": "position"
					},
					"CAAAAN8AAAAAAAAA4AAAAAAAAAAAAAAA4AAAAAAAAADhAAAAAAAAAAAAAADhAAAAAAAAAOIAAAAAAAAAAAAAAOIAAAAAAAAA4wAAAAAAAAAAAAAA4wAAAAAAAADkAAAAAAAAAAAAAADkAAAAAAAAAOUAAAAAAAAAAAAAAOUAAAAAAAAA5gAAAAAAAAAAAAAA5gAAAAAAAADnAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3wAAAAAAAADfAAAAAAAAAAAAAAAAAPC/"
				],
				[
					190,
					1,
					"insert",
					{
						"characters": " <"
					},
					"AgAAAOcAAAAAAAAA6AAAAAAAAAAAAAAA6AAAAAAAAADpAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5wAAAAAAAADnAAAAAAAAAAAAAAAAAPC/"
				],
				[
					191,
					1,
					"insert",
					{
						"characters": " length"
					},
					"BwAAAOkAAAAAAAAA6gAAAAAAAAAAAAAA6gAAAAAAAADrAAAAAAAAAAAAAADrAAAAAAAAAOwAAAAAAAAAAAAAAOwAAAAAAAAA7QAAAAAAAAAAAAAA7QAAAAAAAADuAAAAAAAAAAAAAADuAAAAAAAAAO8AAAAAAAAAAAAAAO8AAAAAAAAA8AAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6QAAAAAAAADpAAAAAAAAAAAAAAAAAPC/"
				],
				[
					193,
					1,
					"yapf_document",
					null,
					"AQAAAAAAAAAAAAAATwEAAAAAAABPAQAAZnJvbSByZWFfc2NvcmUuZG9tIGltcG9ydCBFdmVudFBhY2thZ2VyLCBWb2ljZQpmcm9tIHJlYV9zY29yZS5wcmltaXRpdmVzIGltcG9ydCBFdmVudCwgTGVuZ3RoLCBQaXRjaCwgUG9zaXRpb24KCgpkZWYgdGVzdF9ldmVudF9wYWNrYWdlcigpOgogICAgdm9pY2UgPSBWb2ljZSgpCiAgICBsZW5ndGggPSBMZW5ndGgoNikKICAgIHBvc2l0aW9uID0gUG9zaXRpb24oMS41KQogICAgYXNzZXJ0IHBvc2l0aW9uIDwgbGVuZ3RoCiAgICBFdmVudFBhY2thZ2VyKHZvaWNlLCBwb3NpdGlvbikuYXBwZW5kKEV2ZW50KGxlbmd0aCwgUGl0Y2goNjApKSkKCiAgICBhc3NlcnQgdm9pY2UgaXMgRmFsc2U",
					"AQAAAAAAAAABAAAA8AAAAAAAAADwAAAAAAAAAAAAAAAAAPC/"
				],
				[
					199,
					1,
					"insert",
					{
						"characters": ".en"
					},
					"AwAAAOcAAAAAAAAA6AAAAAAAAAAAAAAA6AAAAAAAAADpAAAAAAAAAAAAAADpAAAAAAAAAOoAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5wAAAAAAAADnAAAAAAAAAAAAAAAAAPC/"
				],
				[
					204,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion_item {\"session_name\":\"LSP-pyright\",\"item\":{\"label\":\"bar_end_distance\",\"data\":{\"workspacePath\":\"/home/levitanus/gits/ReaScore\",\"filePath\":\"/home/levitanus/gits/ReaScore/tests/test_dom.py\",\"symbolLabel\":\"bar_end_distance\",\"position\":{\"character\":22,\"line\":8}},\"kind\":10,\"sortText\":\"05.0008.bar_end_distance\"}}",
						"format": "command",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "bar_end_distance"
					},
					"AgAAAOgAAAAAAAAA6AAAAAAAAAACAAAAZW7oAAAAAAAAAPgAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6gAAAAAAAADqAAAAAAAAAAAAAAAAAPC/"
				],
				[
					205,
					1,
					"insert",
					{
						"characters": "_q"
					},
					"AgAAAPgAAAAAAAAA+QAAAAAAAAAAAAAA+QAAAAAAAAD6AAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+AAAAAAAAAD4AAAAAAAAAAAAAAAAAPC/"
				],
				[
					206,
					1,
					"insert_completion",
					{
						"completion": "bar_end_distance_qn$0",
						"format": "snippet",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "bar_end_distance_qn"
					},
					"AgAAAOgAAAAAAAAA6AAAAAAAAAASAAAAYmFyX2VuZF9kaXN0YW5jZV9x6AAAAAAAAAD7AAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+gAAAAAAAAD6AAAAAAAAAAAAAAAAAPC/"
				],
				[
					245,
					1,
					"cut",
					null,
					"AQAAAC8BAAAAAAAALwEAAAAAAAAYAAAARXZlbnQobGVuZ3RoLCBQaXRjaCg2MCkp",
					"AQAAAAAAAAABAAAALwEAAAAAAABHAQAAAAAAAAAAAAAAAPC/"
				],
				[
					246,
					1,
					"insert",
					{
						"characters": "event"
					},
					"BQAAAC8BAAAAAAAAMAEAAAAAAAAAAAAAMAEAAAAAAAAxAQAAAAAAAAAAAAAxAQAAAAAAADIBAAAAAAAAAAAAADIBAAAAAAAAMwEAAAAAAAAAAAAAMwEAAAAAAAA0AQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALwEAAAAAAAAvAQAAAAAAAAAAAAAAAPC/"
				],
				[
					248,
					1,
					"insert",
					{
						"characters": "\nevent"
					},
					"BwAAANMAAAAAAAAA1AAAAAAAAAAAAAAA1AAAAAAAAADYAAAAAAAAAAAAAADYAAAAAAAAANkAAAAAAAAAAAAAANkAAAAAAAAA2gAAAAAAAAAAAAAA2gAAAAAAAADbAAAAAAAAAAAAAADbAAAAAAAAANwAAAAAAAAAAAAAANwAAAAAAAAA3QAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0wAAAAAAAADTAAAAAAAAAAAAAAAAgHdA"
				],
				[
					249,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAN0AAAAAAAAA3gAAAAAAAAAAAAAA3gAAAAAAAADfAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3QAAAAAAAADdAAAAAAAAAAAAAAAAAPC/"
				],
				[
					250,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAN8AAAAAAAAA4AAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3wAAAAAAAADfAAAAAAAAAAAAAAAAAPC/"
				],
				[
					251,
					1,
					"paste",
					null,
					"AQAAAOAAAAAAAAAA+AAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4AAAAAAAAADgAAAAAAAAAAAAAAAAAPC/"
				],
				[
					255,
					1,
					"insert",
					{
						"characters": "event."
					},
					"BgAAACMBAAAAAAAAJAEAAAAAAAAAAAAAJAEAAAAAAAAlAQAAAAAAAAAAAAAlAQAAAAAAACYBAAAAAAAAAAAAACYBAAAAAAAAJwEAAAAAAAAAAAAAJwEAAAAAAAAoAQAAAAAAAAAAAAAoAQAAAAAAACkBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIwEAAAAAAAAjAQAAAAAAAAAAAAAAAPC/"
				],
				[
					257,
					1,
					"yapf_document",
					null,
					"AQAAAAAAAAAAAAAAewEAAAAAAAB7AQAAZnJvbSByZWFfc2NvcmUuZG9tIGltcG9ydCBFdmVudFBhY2thZ2VyLCBWb2ljZQpmcm9tIHJlYV9zY29yZS5wcmltaXRpdmVzIGltcG9ydCBFdmVudCwgTGVuZ3RoLCBQaXRjaCwgUG9zaXRpb24KCgpkZWYgdGVzdF9ldmVudF9wYWNrYWdlcigpOgogICAgdm9pY2UgPSBWb2ljZSgpCiAgICBsZW5ndGggPSBMZW5ndGgoNikKICAgIHBvc2l0aW9uID0gUG9zaXRpb24oMS41KQogICAgZXZlbnQgPSBFdmVudChsZW5ndGgsIFBpdGNoKDYwKSkKICAgIGFzc2VydCBwb3NpdGlvbi5iYXJfZW5kX2Rpc3RhbmNlX3FuIDwgZXZlbnQubGVuZ3RoCiAgICBFdmVudFBhY2thZ2VyKHZvaWNlLCBwb3NpdGlvbikuYXBwZW5kKGV2ZW50KQoKICAgIGFzc2VydCB2b2ljZSBpcyBGYWxzZQ",
					"AQAAAAAAAAABAAAAKQEAAAAAAAApAQAAAAAAAAAAAAAAAPC/"
				],
				[
					261,
					3,
					"left_delete",
					null,
					"AwAAAB8BAAAAAAAAHwEAAAAAAAABAAAAbh4BAAAAAAAAHgEAAAAAAAABAAAAcR0BAAAAAAAAHQEAAAAAAAABAAAAXw",
					"AQAAAAAAAAABAAAAIAEAAAAAAAAgAQAAAAAAAAAAAAAAAPC/"
				],
				[
					263,
					1,
					"yapf_document",
					null,
					"AQAAAAAAAAAAAAAAeAEAAAAAAAB4AQAAZnJvbSByZWFfc2NvcmUuZG9tIGltcG9ydCBFdmVudFBhY2thZ2VyLCBWb2ljZQpmcm9tIHJlYV9zY29yZS5wcmltaXRpdmVzIGltcG9ydCBFdmVudCwgTGVuZ3RoLCBQaXRjaCwgUG9zaXRpb24KCgpkZWYgdGVzdF9ldmVudF9wYWNrYWdlcigpOgogICAgdm9pY2UgPSBWb2ljZSgpCiAgICBsZW5ndGggPSBMZW5ndGgoNikKICAgIHBvc2l0aW9uID0gUG9zaXRpb24oMS41KQogICAgZXZlbnQgPSBFdmVudChsZW5ndGgsIFBpdGNoKDYwKSkKICAgIGFzc2VydCBwb3NpdGlvbi5iYXJfZW5kX2Rpc3RhbmNlIDwgZXZlbnQubGVuZ3RoCiAgICBFdmVudFBhY2thZ2VyKHZvaWNlLCBwb3NpdGlvbikuYXBwZW5kKGV2ZW50KQoKICAgIGFzc2VydCB2b2ljZSBpcyBGYWxzZQ",
					"AQAAAAAAAAABAAAAHQEAAAAAAAAdAQAAAAAAAAAAAAAAAPC/"
				],
				[
					288,
					1,
					"yapf_document",
					null,
					"AQAAAAAAAAAAAAAAeAEAAAAAAAB4AQAAZnJvbSByZWFfc2NvcmUuZG9tIGltcG9ydCBFdmVudFBhY2thZ2VyLCBWb2ljZQpmcm9tIHJlYV9zY29yZS5wcmltaXRpdmVzIGltcG9ydCBFdmVudCwgTGVuZ3RoLCBQaXRjaCwgUG9zaXRpb24KCgpkZWYgdGVzdF9ldmVudF9wYWNrYWdlcigpOgogICAgdm9pY2UgPSBWb2ljZSgpCiAgICBsZW5ndGggPSBMZW5ndGgoNikKICAgIHBvc2l0aW9uID0gUG9zaXRpb24oMS41KQogICAgZXZlbnQgPSBFdmVudChsZW5ndGgsIFBpdGNoKDYwKSkKICAgIGFzc2VydCBwb3NpdGlvbi5iYXJfZW5kX2Rpc3RhbmNlIDwgZXZlbnQubGVuZ3RoCiAgICBFdmVudFBhY2thZ2VyKHZvaWNlLCBwb3NpdGlvbikuYXBwZW5kKGV2ZW50KQoKICAgIGFzc2VydCB2b2ljZSBpcyBGYWxzZQ",
					"AQAAAAAAAAABAAAA0wAAAAAAAADTAAAAAAAAAAAAAAAAAPC/"
				],
				[
					320,
					2,
					"right_delete",
					null,
					"AgAAALQAAAAAAAAAtAAAAAAAAAABAAAANrQAAAAAAAAAtAAAAAAAAAABAAAAKQ",
					"AQAAAAAAAAABAAAAtAAAAAAAAAC0AAAAAAAAAAAAAAAAAPC/"
				],
				[
					321,
					1,
					"insert",
					{
						"characters": "9)"
					},
					"AgAAALQAAAAAAAAAtQAAAAAAAAAAAAAAtQAAAAAAAAC2AAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtAAAAAAAAAC0AAAAAAAAAAAAAAAAAPC/"
				],
				[
					323,
					1,
					"yapf_document",
					null,
					"AQAAAAAAAAAAAAAAeAEAAAAAAAB4AQAAZnJvbSByZWFfc2NvcmUuZG9tIGltcG9ydCBFdmVudFBhY2thZ2VyLCBWb2ljZQpmcm9tIHJlYV9zY29yZS5wcmltaXRpdmVzIGltcG9ydCBFdmVudCwgTGVuZ3RoLCBQaXRjaCwgUG9zaXRpb24KCgpkZWYgdGVzdF9ldmVudF9wYWNrYWdlcigpOgogICAgdm9pY2UgPSBWb2ljZSgpCiAgICBsZW5ndGggPSBMZW5ndGgoOSkKICAgIHBvc2l0aW9uID0gUG9zaXRpb24oMS41KQogICAgZXZlbnQgPSBFdmVudChsZW5ndGgsIFBpdGNoKDYwKSkKICAgIGFzc2VydCBwb3NpdGlvbi5iYXJfZW5kX2Rpc3RhbmNlIDwgZXZlbnQubGVuZ3RoCiAgICBFdmVudFBhY2thZ2VyKHZvaWNlLCBwb3NpdGlvbikuYXBwZW5kKGV2ZW50KQoKICAgIGFzc2VydCB2b2ljZSBpcyBGYWxzZQ",
					"AQAAAAAAAAABAAAAtgAAAAAAAAC2AAAAAAAAAAAAAAAAAPC/"
				],
				[
					337,
					1,
					"insert",
					{
						"characters": ".events"
					},
					"BwAAAG8BAAAAAAAAcAEAAAAAAAAAAAAAcAEAAAAAAABxAQAAAAAAAAAAAABxAQAAAAAAAHIBAAAAAAAAAAAAAHIBAAAAAAAAcwEAAAAAAAAAAAAAcwEAAAAAAAB0AQAAAAAAAAAAAAB0AQAAAAAAAHUBAAAAAAAAAAAAAHUBAAAAAAAAdgEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbwEAAAAAAABvAQAAAAAAAAAAAAAAAPC/"
				],
				[
					340,
					2,
					"right_delete",
					null,
					"AgAAAHcBAAAAAAAAdwEAAAAAAAABAAAAaXcBAAAAAAAAdwEAAAAAAAABAAAAcw",
					"AQAAAAAAAAABAAAAdwEAAAAAAAB3AQAAAAAAAAAAAAAAAPC/"
				],
				[
					341,
					1,
					"insert",
					{
						"characters": "=="
					},
					"AgAAAHcBAAAAAAAAeAEAAAAAAAAAAAAAeAEAAAAAAAB5AQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdwEAAAAAAAB3AQAAAAAAAAAAAAAAAPC/"
				],
				[
					344,
					1,
					"left_delete",
					null,
					"AQAAAHoBAAAAAAAAegEAAAAAAAAFAAAARmFsc2U",
					"AQAAAAAAAAABAAAAfwEAAAAAAAB6AQAAAAAAAAAAAAAAAPC/"
				],
				[
					345,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAAHoBAAAAAAAAfAEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAegEAAAAAAAB6AQAAAAAAAAAAAAAAAPC/"
				],
				[
					346,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAHsBAAAAAAAAfAEAAAAAAAAAAAAAfAEAAAAAAACAAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAewEAAAAAAAB7AQAAAAAAAAAAAAAAAPC/"
				],
				[
					349,
					1,
					"insert",
					{
						"characters": "\n\t"
					},
					"AwAAAHsBAAAAAAAAfAEAAAAAAAAAAAAAfAEAAAAAAACAAQAAAAAAAAAAAACAAQAAAAAAAIQBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAewEAAAAAAAB7AQAAAAAAAP///////+9/"
				],
				[
					353,
					2,
					"left_delete",
					null,
					"AgAAAHsBAAAAAAAAewEAAAAAAAAPAAAACiAgICAgICAgCiAgICBdegEAAAAAAAB6AQAAAAAAAAEAAABb",
					"AQAAAAAAAAABAAAAigEAAAAAAAB7AQAAAAAAAP///////+9/"
				],
				[
					354,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAHoBAAAAAAAAfAEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAegEAAAAAAAB6AQAAAAAAAAAAAAAAAPC/"
				],
				[
					355,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"BgAAAHsBAAAAAAAAfAEAAAAAAAAAAAAAfAEAAAAAAACAAQAAAAAAAAAAAACAAQAAAAAAAIEBAAAAAAAAAAAAAIEBAAAAAAAAhQEAAAAAAAAAAAAAfAEAAAAAAAB8AQAAAAAAAAQAAAAgICAgfAEAAAAAAACAAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAewEAAAAAAAB7AQAAAAAAAAAAAAAAAPC/"
				],
				[
					356,
					1,
					"insert",
					{
						"characters": "Position"
					},
					"CAAAAIABAAAAAAAAgQEAAAAAAAAAAAAAgQEAAAAAAACCAQAAAAAAAAAAAACCAQAAAAAAAIMBAAAAAAAAAAAAAIMBAAAAAAAAhAEAAAAAAAAAAAAAhAEAAAAAAACFAQAAAAAAAAAAAACFAQAAAAAAAIYBAAAAAAAAAAAAAIYBAAAAAAAAhwEAAAAAAAAAAAAAhwEAAAAAAACIAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAgAEAAAAAAACAAQAAAAAAAAAAAAAAAPC/"
				],
				[
					357,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAIgBAAAAAAAAigEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiAEAAAAAAACIAQAAAAAAAAAAAAAAAPC/"
				],
				[
					358,
					1,
					"insert",
					{
						"characters": "3/8"
					},
					"AwAAAIkBAAAAAAAAigEAAAAAAAAAAAAAigEAAAAAAACLAQAAAAAAAAAAAACLAQAAAAAAAIwBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiQEAAAAAAACJAQAAAAAAAAAAAAAAAPC/"
				],
				[
					363,
					2,
					"left_delete",
					null,
					"AgAAAIoBAAAAAAAAigEAAAAAAAACAAAALziJAQAAAAAAAIkBAAAAAAAAAQAAADM",
					"AQAAAAAAAAABAAAAjAEAAAAAAACKAQAAAAAAAAAAAAAAAPC/"
				],
				[
					365,
					2,
					"left_delete",
					null,
					"AgAAAIkBAAAAAAAAiQEAAAAAAAABAAAAKYgBAAAAAAAAiAEAAAAAAAABAAAAKA",
					"AQAAAAAAAAABAAAAigEAAAAAAACKAQAAAAAAAP///////+9/"
				],
				[
					366,
					1,
					"insert",
					{
						"characters": ".from"
					},
					"BQAAAIgBAAAAAAAAiQEAAAAAAAAAAAAAiQEAAAAAAACKAQAAAAAAAAAAAACKAQAAAAAAAIsBAAAAAAAAAAAAAIsBAAAAAAAAjAEAAAAAAAAAAAAAjAEAAAAAAACNAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiAEAAAAAAACIAQAAAAAAAAAAAAAAAPC/"
				],
				[
					368,
					1,
					"insert_completion",
					{
						"completion": "from_fraction$0",
						"format": "snippet",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "from_fraction"
					},
					"AgAAAIkBAAAAAAAAiQEAAAAAAAAEAAAAZnJvbYkBAAAAAAAAlgEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjQEAAAAAAACNAQAAAAAAAAAAAAAAAPC/"
				],
				[
					369,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAJYBAAAAAAAAmAEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlgEAAAAAAACWAQAAAAAAAAAAAAAAAPC/"
				],
				[
					370,
					1,
					"insert",
					{
						"characters": "3/87"
					},
					"BAAAAJcBAAAAAAAAmAEAAAAAAAAAAAAAmAEAAAAAAACZAQAAAAAAAAAAAACZAQAAAAAAAJoBAAAAAAAAAAAAAJoBAAAAAAAAmwEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlwEAAAAAAACXAQAAAAAAAAAAAAAAAPC/"
				],
				[
					371,
					1,
					"left_delete",
					null,
					"AQAAAJoBAAAAAAAAmgEAAAAAAAABAAAANw",
					"AQAAAAAAAAABAAAAmwEAAAAAAACbAQAAAAAAAAAAAAAAAPC/"
				],
				[
					375,
					1,
					"insert",
					{
						"characters": ":"
					},
					"AQAAAJsBAAAAAAAAnAEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmwEAAAAAAACbAQAAAAAAAAAAAAAAAPC/"
				],
				[
					376,
					1,
					"insert",
					{
						"characters": "Event"
					},
					"BQAAAJwBAAAAAAAAnQEAAAAAAAAAAAAAnQEAAAAAAACeAQAAAAAAAAAAAACeAQAAAAAAAJ8BAAAAAAAAAAAAAJ8BAAAAAAAAoAEAAAAAAAAAAAAAoAEAAAAAAAChAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnAEAAAAAAACcAQAAAAAAAAAAAAAAAPC/"
				],
				[
					377,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAKEBAAAAAAAAowEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAoQEAAAAAAAChAQAAAAAAAAAAAAAAAPC/"
				],
				[
					378,
					1,
					"insert",
					{
						"characters": "Length.from"
					},
					"CwAAAKIBAAAAAAAAowEAAAAAAAAAAAAAowEAAAAAAACkAQAAAAAAAAAAAACkAQAAAAAAAKUBAAAAAAAAAAAAAKUBAAAAAAAApgEAAAAAAAAAAAAApgEAAAAAAACnAQAAAAAAAAAAAACnAQAAAAAAAKgBAAAAAAAAAAAAAKgBAAAAAAAAqQEAAAAAAAAAAAAAqQEAAAAAAACqAQAAAAAAAAAAAACqAQAAAAAAAKsBAAAAAAAAAAAAAKsBAAAAAAAArAEAAAAAAAAAAAAArAEAAAAAAACtAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAogEAAAAAAACiAQAAAAAAAAAAAAAAAPC/"
				],
				[
					379,
					1,
					"insert_completion",
					{
						"completion": "from_fraction($0)",
						"format": "snippet",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "from_fraction("
					},
					"AgAAAKkBAAAAAAAAqQEAAAAAAAAEAAAAZnJvbakBAAAAAAAAuAEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArQEAAAAAAACtAQAAAAAAAAAAAAAAAPC/"
				],
				[
					380,
					1,
					"insert",
					{
						"characters": "1/8"
					},
					"AwAAALcBAAAAAAAAuAEAAAAAAAAAAAAAuAEAAAAAAAC5AQAAAAAAAAAAAAC5AQAAAAAAALoBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtwEAAAAAAAC3AQAAAAAAAAAAAAAAAPC/"
				],
				[
					382,
					1,
					"insert",
					{
						"characters": ",Pit"
					},
					"BAAAALsBAAAAAAAAvAEAAAAAAAAAAAAAvAEAAAAAAAC9AQAAAAAAAAAAAAC9AQAAAAAAAL4BAAAAAAAAAAAAAL4BAAAAAAAAvwEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuwEAAAAAAAC7AQAAAAAAAAAAAAAAAPC/"
				],
				[
					383,
					1,
					"insert_completion",
					{
						"completion": "Pitch$0",
						"format": "snippet",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "Pitch"
					},
					"AgAAALwBAAAAAAAAvAEAAAAAAAADAAAAUGl0vAEAAAAAAADBAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvwEAAAAAAAC/AQAAAAAAAAAAAAAAAPC/"
				],
				[
					384,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAMEBAAAAAAAAwwEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwQEAAAAAAADBAQAAAAAAAAAAAAAAAPC/"
				],
				[
					385,
					1,
					"insert",
					{
						"characters": "60"
					},
					"AgAAAMIBAAAAAAAAwwEAAAAAAAAAAAAAwwEAAAAAAADEAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwgEAAAAAAADCAQAAAAAAAAAAAAAAAPC/"
				],
				[
					386,
					1,
					"insert",
					{
						"characters": ",tie"
					},
					"BAAAAMQBAAAAAAAAxQEAAAAAAAAAAAAAxQEAAAAAAADGAQAAAAAAAAAAAADGAQAAAAAAAMcBAAAAAAAAAAAAAMcBAAAAAAAAyAEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxAEAAAAAAADEAQAAAAAAAAAAAAAAAPC/"
				],
				[
					388,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion_item {\"session_name\":\"LSP-pyright\",\"item\":{\"label\":\"tie=\",\"data\":{\"workspacePath\":\"/home/levitanus/gits/ReaScore\",\"filePath\":\"/home/levitanus/gits/ReaScore/tests/test_dom.py\",\"position\":{\"character\":76,\"line\":13}},\"kind\":6,\"sortText\":\"04.9999.tie\"}}",
						"format": "command",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "tie="
					},
					"AgAAAMUBAAAAAAAAxQEAAAAAAAADAAAAdGllxQEAAAAAAADJAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAyAEAAAAAAADIAQAAAAAAAAAAAAAAAPC/"
				],
				[
					389,
					1,
					"insert",
					{
						"characters": "True"
					},
					"BAAAAMkBAAAAAAAAygEAAAAAAAAAAAAAygEAAAAAAADLAQAAAAAAAAAAAADLAQAAAAAAAMwBAAAAAAAAAAAAAMwBAAAAAAAAzQEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAyQEAAAAAAADJAQAAAAAAAAAAAAAAAPC/"
				],
				[
					395,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAM8BAAAAAAAA0AEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzwEAAAAAAADPAQAAAAAAAP///////+9/"
				],
				[
					396,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAANABAAAAAAAA0QEAAAAAAAAAAAAA0QEAAAAAAADVAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0AEAAAAAAADQAQAAAAAAAAAAAAAAAPC/"
				],
				[
					401,
					1,
					"paste",
					null,
					"AQAAANUBAAAAAAAAJQIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1QEAAAAAAADVAQAAAAAAAAAAAAAAAPC/"
				],
				[
					405,
					3,
					"right_delete",
					null,
					"AwAAAOwBAAAAAAAA7AEAAAAAAAABAAAAM+wBAAAAAAAA7AEAAAAAAAABAAAAL+wBAAAAAAAA7AEAAAAAAAABAAAAOA",
					"AQAAAAAAAAABAAAA7AEAAAAAAADsAQAAAAAAAAAAAAAAAPC/"
				],
				[
					406,
					1,
					"insert",
					{
						"characters": "1/2"
					},
					"AwAAAOwBAAAAAAAA7QEAAAAAAAAAAAAA7QEAAAAAAADuAQAAAAAAAAAAAADuAQAAAAAAAO8BAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7AEAAAAAAADsAQAAAAAAAAAAAAAAAPC/"
				],
				[
					409,
					1,
					"right_delete",
					null,
					"AQAAAA4CAAAAAAAADgIAAAAAAAABAAAAOA",
					"AQAAAAAAAAABAAAADgIAAAAAAAAOAgAAAAAAAAAAAAAAAPC/"
				],
				[
					410,
					1,
					"insert",
					{
						"characters": "2"
					},
					"AQAAAA4CAAAAAAAADwIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADgIAAAAAAAAOAgAAAAAAAAAAAAAAAPC/"
				],
				[
					415,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAACUCAAAAAAAAJgIAAAAAAAAAAAAAJgIAAAAAAAAqAgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJQIAAAAAAAAlAgAAAAAAAP///////+9/"
				],
				[
					416,
					1,
					"paste",
					null,
					"AQAAACoCAAAAAAAAegIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKgIAAAAAAAAqAgAAAAAAAAAAAAAAAPC/"
				],
				[
					418,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAHcCAAAAAAAAeAIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdwIAAAAAAAB3AgAAAAAAAAAAAAAAAPC/"
				],
				[
					419,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAHgCAAAAAAAAeQIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAeAIAAAAAAAB4AgAAAAAAAAAAAAAAAPC/"
				],
				[
					420,
					2,
					"left_delete",
					null,
					"AgAAAHgCAAAAAAAAeAIAAAAAAAABAAAAIHcCAAAAAAAAdwIAAAAAAAABAAAALA",
					"AQAAAAAAAAABAAAAeQIAAAAAAAB5AgAAAAAAAAAAAAAAAPC/"
				],
				[
					422,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAHgCAAAAAAAAeQIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAeAIAAAAAAAB4AgAAAAAAAAAAAAAAAPC/"
				],
				[
					423,
					1,
					"insert",
					{
						"characters": "prea"
					},
					"BAAAAHkCAAAAAAAAegIAAAAAAAAAAAAAegIAAAAAAAB7AgAAAAAAAAAAAAB7AgAAAAAAAHwCAAAAAAAAAAAAAHwCAAAAAAAAfQIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAeQIAAAAAAAB5AgAAAAAAAAAAAAAAAPC/"
				],
				[
					425,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion_item {\"session_name\":\"LSP-pyright\",\"item\":{\"label\":\"preambula=\",\"data\":{\"workspacePath\":\"/home/levitanus/gits/ReaScore\",\"filePath\":\"/home/levitanus/gits/ReaScore/tests/test_dom.py\",\"position\":{\"character\":87,\"line\":15}},\"kind\":6,\"sortText\":\"04.9999.preambula\"}}",
						"format": "command",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "preambula="
					},
					"AgAAAHkCAAAAAAAAeQIAAAAAAAAEAAAAcHJlYXkCAAAAAAAAgwIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfQIAAAAAAAB9AgAAAAAAAAAAAAAAAPC/"
				],
				[
					426,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAAIMCAAAAAAAAhQIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAgwIAAAAAAACDAgAAAAAAAAAAAAAAAPC/"
				],
				[
					427,
					1,
					"insert",
					{
						"characters": "Bar"
					},
					"AwAAAIQCAAAAAAAAhQIAAAAAAAAAAAAAhQIAAAAAAACGAgAAAAAAAAAAAACGAgAAAAAAAIcCAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhAIAAAAAAACEAgAAAAAAAAAAAAAAAPC/"
				],
				[
					433,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion_item {\"session_name\":\"LSP-pyright\",\"item\":{\"textEdit\":{\"range\":{\"end\":{\"character\":97,\"line\":15},\"start\":{\"character\":94,\"line\":15}},\"newText\":\"BarCheck\"},\"label\":\"BarCheck\",\"detail\":\"Auto-import\",\"data\":{\"workspacePath\":\"/home/levitanus/gits/ReaScore\",\"filePath\":\"/home/levitanus/gits/ReaScore/tests/test_dom.py\",\"symbolLabel\":\"BarCheck\",\"autoImportText\":\"```\\nfrom rea_score.dom import BarCheck\\n```\",\"position\":{\"character\":97,\"line\":15}},\"documentation\":{\"value\":\"```\\nfrom rea_score.dom import BarCheck\\n```\",\"kind\":\"markdown\"},\"kind\":7,\"sortText\":\"12.9999.BarCheck\"}}",
						"format": "command",
						"keep_prefix": true,
						"must_insert": false,
						"query_change_id":
						[
							302,
							427,
							3
						],
						"trigger": "BarCheck"
					},
					"AgAAAIQCAAAAAAAAhAIAAAAAAAADAAAAQmFyhAIAAAAAAACMAgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhwIAAAAAAACHAgAAAAAAAAAAAAAAAPC/"
				],
				[
					434,
					1,
					"lsp_apply_document_edit",
					{
						"changes":
						[
							[
								[
									0,
									26
								],
								[
									0,
									26
								],
								"BarCheck, ",
								null
							]
						]
					},
					"AQAAABoAAAAAAAAAJAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjAIAAAAAAACMAgAAAAAAAAAAAAAAAPC/"
				],
				[
					435,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAJYCAAAAAAAAmAIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlgIAAAAAAACWAgAAAAAAAAAAAAAAAPC/"
				],
				[
					436,
					1,
					"insert",
					{
						"characters": "2"
					},
					"AQAAAJcCAAAAAAAAmAIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlwIAAAAAAACXAgAAAAAAAAAAAAAAAPC/"
				],
				[
					440,
					2,
					"right_delete",
					null,
					"AgAAAEwCAAAAAAAATAIAAAAAAAABAAAAL0wCAAAAAAAATAIAAAAAAAABAAAAMg",
					"AQAAAAAAAAABAAAATAIAAAAAAABMAgAAAAAAAAAAAAAAAPC/"
				],
				[
					444,
					2,
					"right_delete",
					null,
					"AgAAAGoCAAAAAAAAagIAAAAAAAABAAAAL2oCAAAAAAAAagIAAAAAAAABAAAAMg",
					"AQAAAAAAAAABAAAAagIAAAAAAABqAgAAAAAAAAAAAAAAAPC/"
				],
				[
					454,
					1,
					"left_delete",
					null,
					"AQAAAEsCAAAAAAAASwIAAAAAAAABAAAAMQ",
					"AQAAAAAAAAABAAAATAIAAAAAAABMAgAAAAAAAAAAAAAAAPC/"
				],
				[
					455,
					1,
					"insert",
					{
						"characters": "2"
					},
					"AQAAAEsCAAAAAAAATAIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASwIAAAAAAABLAgAAAAAAAAAAAAAAAPC/"
				],
				[
					457,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAJgCAAAAAAAAmQIAAAAAAAAAAAAAmQIAAAAAAACdAgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmAIAAAAAAACYAgAAAAAAAP///////+9/"
				],
				[
					458,
					1,
					"paste",
					null,
					"AQAAAJ0CAAAAAAAA7QIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnQIAAAAAAACdAgAAAAAAAAAAAAAAAPC/"
				],
				[
					462,
					3,
					"right_delete",
					null,
					"AwAAALQCAAAAAAAAtAIAAAAAAAABAAAAMbQCAAAAAAAAtAIAAAAAAAABAAAAL7QCAAAAAAAAtAIAAAAAAAABAAAAMg",
					"AQAAAAAAAAABAAAAtAIAAAAAAAC0AgAAAAAAAAAAAAAAAPC/"
				],
				[
					463,
					1,
					"insert",
					{
						"characters": "3"
					},
					"AQAAALQCAAAAAAAAtQIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtAIAAAAAAAC0AgAAAAAAAAAAAAAAAPC/"
				],
				[
					471,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAOsCAAAAAAAA7AIAAAAAAAAAAAAA7AIAAAAAAADwAgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6wIAAAAAAADrAgAAAAAAAP///////+9/"
				],
				[
					472,
					1,
					"paste",
					null,
					"AQAAAPACAAAAAAAAPgMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8AIAAAAAAADwAgAAAAAAAAAAAAAAAPC/"
				],
				[
					475,
					1,
					"insert",
					{
						"characters": "+1/"
					},
					"AwAAAAgDAAAAAAAACQMAAAAAAAAAAAAACQMAAAAAAAAKAwAAAAAAAAAAAAAKAwAAAAAAAAsDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACAMAAAAAAAAIAwAAAAAAAAAAAAAAAPC/"
				],
				[
					476,
					1,
					"insert",
					{
						"characters": "2"
					},
					"AQAAAAsDAAAAAAAADAMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACwMAAAAAAAALAwAAAAAAAAAAAAAAAPC/"
				],
				[
					480,
					1,
					"right_delete",
					null,
					"AQAAACsDAAAAAAAAKwMAAAAAAAABAAAAMg",
					"AQAAAAAAAAABAAAAKwMAAAAAAAArAwAAAAAAAAAAAAAAAPC/"
				],
				[
					481,
					1,
					"insert",
					{
						"characters": "8"
					},
					"AQAAACsDAAAAAAAALAMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKwMAAAAAAAArAwAAAAAAAAAAAAAAAPC/"
				],
				[
					486,
					2,
					"left_delete",
					null,
					"AgAAADcDAAAAAAAANwMAAAAAAAAIAAAAdGllPVRydWU2AwAAAAAAADYDAAAAAAAAAQAAACw",
					"AQAAAAAAAAABAAAAPwMAAAAAAAA3AwAAAAAAAAAAAAAAAPC/"
				],
				[
					494,
					1,
					"paste",
					null,
					"AQAAAOkCAAAAAAAAAAMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6QIAAAAAAADpAgAAAAAAAAAAAAAAAPC/"
				],
				[
					496,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAOkCAAAAAAAA6gIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6QIAAAAAAADpAgAAAAAAAAAAAAAAAPC/"
				],
				[
					499,
					1,
					"left_delete",
					null,
					"AQAAAP4CAAAAAAAA/gIAAAAAAAABAAAAMg",
					"AQAAAAAAAAABAAAA/wIAAAAAAAD/AgAAAAAAAAAAAAAAAPC/"
				],
				[
					500,
					1,
					"insert",
					{
						"characters": "3"
					},
					"AQAAAP4CAAAAAAAA/wIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/gIAAAAAAAD+AgAAAAAAAAAAAAAAAPC/"
				],
				[
					502,
					1,
					"yapf_document",
					null,
					"AQAAAAAAAAAAAAAAQwQAAAAAAABXAwAAZnJvbSByZWFfc2NvcmUuZG9tIGltcG9ydCBCYXJDaGVjaywgRXZlbnRQYWNrYWdlciwgVm9pY2UKZnJvbSByZWFfc2NvcmUucHJpbWl0aXZlcyBpbXBvcnQgRXZlbnQsIExlbmd0aCwgUGl0Y2gsIFBvc2l0aW9uCgoKZGVmIHRlc3RfZXZlbnRfcGFja2FnZXIoKToKICAgIHZvaWNlID0gVm9pY2UoKQogICAgbGVuZ3RoID0gTGVuZ3RoKDkpCiAgICBwb3NpdGlvbiA9IFBvc2l0aW9uKDEuNSkKICAgIGV2ZW50ID0gRXZlbnQobGVuZ3RoLCBQaXRjaCg2MCkpCiAgICBhc3NlcnQgcG9zaXRpb24uYmFyX2VuZF9kaXN0YW5jZSA8IGV2ZW50Lmxlbmd0aAogICAgRXZlbnRQYWNrYWdlcih2b2ljZSwgcG9zaXRpb24pLmFwcGVuZChldmVudCkKCiAgICBhc3NlcnQgdm9pY2UuZXZlbnRzID09IHsKICAgIFBvc2l0aW9uLmZyb21fZnJhY3Rpb24oMy84KTpFdmVudChMZW5ndGguZnJvbV9mcmFjdGlvbigxLzgpLFBpdGNoKDYwLHRpZT1UcnVlKSksCiAgICBQb3NpdGlvbi5mcm9tX2ZyYWN0aW9uKDEvMik6RXZlbnQoTGVuZ3RoLmZyb21fZnJhY3Rpb24oMS8yKSxQaXRjaCg2MCx0aWU9VHJ1ZSkpLAogICAgUG9zaXRpb24uZnJvbV9mcmFjdGlvbigyKTpFdmVudChMZW5ndGguZnJvbV9mcmFjdGlvbigxKSxQaXRjaCg2MCx0aWU9VHJ1ZSkscHJlYW1idWxhPVtCYXJDaGVjaygyKV0pLAogICAgUG9zaXRpb24uZnJvbV9mcmFjdGlvbigzKTpFdmVudChMZW5ndGguZnJvbV9mcmFjdGlvbigxLzIpLFBpdGNoKDYwLHRpZT1UcnVlKSxwcmVhbWJ1bGE9W0JhckNoZWNrKDMpXSksCiAgICBQb3NpdGlvbi5mcm9tX2ZyYWN0aW9uKDMrMS8yKTpFdmVudChMZW5ndGguZnJvbV9mcmFjdGlvbigxLzgpLFBpdGNoKDYwKSksCiAgICB9",
					"AQAAAAAAAAABAAAA/wIAAAAAAAD/AgAAAAAAAAAAAAAAAPC/"
				],
				[
					510,
					1,
					"yapf_document",
					null,
					"AQAAAAAAAAAAAAAAQwQAAAAAAABDBAAAZnJvbSByZWFfc2NvcmUuZG9tIGltcG9ydCBCYXJDaGVjaywgRXZlbnRQYWNrYWdlciwgVm9pY2UKZnJvbSByZWFfc2NvcmUucHJpbWl0aXZlcyBpbXBvcnQgRXZlbnQsIExlbmd0aCwgUGl0Y2gsIFBvc2l0aW9uCgoKZGVmIHRlc3RfZXZlbnRfcGFja2FnZXIoKToKICAgIHZvaWNlID0gVm9pY2UoKQogICAgbGVuZ3RoID0gTGVuZ3RoKDkpCiAgICBwb3NpdGlvbiA9IFBvc2l0aW9uKDEuNSkKICAgIGV2ZW50ID0gRXZlbnQobGVuZ3RoLCBQaXRjaCg2MCkpCiAgICBhc3NlcnQgcG9zaXRpb24uYmFyX2VuZF9kaXN0YW5jZSA8IGV2ZW50Lmxlbmd0aAogICAgRXZlbnRQYWNrYWdlcih2b2ljZSwgcG9zaXRpb24pLmFwcGVuZChldmVudCkKCiAgICBhc3NlcnQgdm9pY2UuZXZlbnRzID09IHsKICAgICAgICBQb3NpdGlvbi5mcm9tX2ZyYWN0aW9uKDMgLyA4KToKICAgICAgICAgICAgRXZlbnQoTGVuZ3RoLmZyb21fZnJhY3Rpb24oMSAvIDgpLCBQaXRjaCg2MCwgdGllPVRydWUpKSwKICAgICAgICBQb3NpdGlvbi5mcm9tX2ZyYWN0aW9uKDEgLyAyKToKICAgICAgICAgICAgRXZlbnQoTGVuZ3RoLmZyb21fZnJhY3Rpb24oMSAvIDIpLCBQaXRjaCg2MCwgdGllPVRydWUpKSwKICAgICAgICBQb3NpdGlvbi5mcm9tX2ZyYWN0aW9uKDIpOgogICAgICAgICAgICBFdmVudCgKICAgICAgICAgICAgICAgIExlbmd0aC5mcm9tX2ZyYWN0aW9uKDEpLAogICAgICAgICAgICAgICAgUGl0Y2goNjAsIHRpZT1UcnVlKSwKICAgICAgICAgICAgICAgIHByZWFtYnVsYT1bQmFyQ2hlY2soMildCiAgICAgICAgICAgICksCiAgICAgICAgUG9zaXRpb24uZnJvbV9mcmFjdGlvbigzKToKICAgICAgICAgICAgRXZlbnQoCiAgICAgICAgICAgICAgICBMZW5ndGguZnJvbV9mcmFjdGlvbigxIC8gMiksCiAgICAgICAgICAgICAgICBQaXRjaCg2MCwgdGllPVRydWUpLAogICAgICAgICAgICAgICAgcHJlYW1idWxhPVtCYXJDaGVjaygzKV0KICAgICAgICAgICAgKSwKICAgICAgICBQb3NpdGlvbi5mcm9tX2ZyYWN0aW9uKDMgKyAxIC8gMik6CiAgICAgICAgICAgIEV2ZW50KExlbmd0aC5mcm9tX2ZyYWN0aW9uKDEgLyA4KSwgUGl0Y2goNjApKSwKICAgIH0",
					"AQAAAAAAAAABAAAANgEAAAAAAAA2AQAAAAAAAAAAAAAAAPC/"
				],
				[
					516,
					1,
					"toggle_comment",
					{
						"block": false
					},
					"CAAAAAsEAAAAAAAADQQAAAAAAAAAAAAA4AMAAAAAAADiAwAAAAAAAAAAAADRAwAAAAAAANMDAAAAAAAAAAAAAKkDAAAAAAAAqwMAAAAAAAAAAAAAhAMAAAAAAACGAwAAAAAAAAAAAABXAwAAAAAAAFkDAAAAAAAAAAAAAEQDAAAAAAAARgMAAAAAAAAAAAAAIQMAAAAAAAAjAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPQQAAAAAAAAhAwAAAAAAAAAAAAAAAPC/"
				],
				[
					518,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAE0EAAAAAAAATgQAAAAAAAAAAAAATgQAAAAAAABWBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATQQAAAAAAABNBAAAAAAAAAAAAAAAAPC/"
				],
				[
					524,
					1,
					"paste",
					null,
					"AQAAAFYEAAAAAAAABwUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVgQAAAAAAABWBAAAAAAAAAAAAAAAAPC/"
				],
				[
					527,
					1,
					"toggle_comment",
					{
						"block": false
					},
					"BQAAAOYEAAAAAAAA5gQAAAAAAAACAAAAIyC/BAAAAAAAAL8EAAAAAAAAAgAAACMgkAQAAAAAAACQBAAAAAAAAAIAAAAjIHsEAAAAAAAAewQAAAAAAAACAAAAIyBWBAAAAAAAAFYEAAAAAAAAAgAAACMg",
					"AQAAAAAAAAABAAAABwUAAAAAAABVBAAAAAAAAAAAAAAAAPC/"
				],
				[
					535,
					1,
					"insert",
					{
						"characters": "),"
					},
					"AgAAAP0EAAAAAAAA/gQAAAAAAAAAAAAA/gQAAAAAAAD/BAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/QQAAAAAAAD9BAAAAAAAAAAAAAAAAPC/"
				],
				[
					538,
					1,
					"insert",
					{
						"characters": "5"
					},
					"AgAAAKkEAAAAAAAAqgQAAAAAAAAAAAAAqgQAAAAAAACqBAAAAAAAAAEAAAAx",
					"AQAAAAAAAAABAAAAqQQAAAAAAACqBAAAAAAAAAAAAAAAAPC/"
				],
				[
					541,
					1,
					"insert",
					{
						"characters": "8"
					},
					"AgAAAK0EAAAAAAAArgQAAAAAAAAAAAAArgQAAAAAAACuBAAAAAAAAAEAAAAy",
					"AQAAAAAAAAABAAAArQQAAAAAAACuBAAAAAAAAAAAAAAAAPC/"
				],
				[
					543,
					1,
					"yapf_document",
					null,
					"AQAAAAAAAAAAAAAAEgUAAAAAAAAFBQAAZnJvbSByZWFfc2NvcmUuZG9tIGltcG9ydCBCYXJDaGVjaywgRXZlbnRQYWNrYWdlciwgVm9pY2UKZnJvbSByZWFfc2NvcmUucHJpbWl0aXZlcyBpbXBvcnQgRXZlbnQsIExlbmd0aCwgUGl0Y2gsIFBvc2l0aW9uCgoKZGVmIHRlc3RfZXZlbnRfcGFja2FnZXIoKToKICAgIHZvaWNlID0gVm9pY2UoKQogICAgbGVuZ3RoID0gTGVuZ3RoKDkpCiAgICBwb3NpdGlvbiA9IFBvc2l0aW9uKDEuNSkKICAgIGV2ZW50ID0gRXZlbnQobGVuZ3RoLCBQaXRjaCg2MCkpCiAgICBhc3NlcnQgcG9zaXRpb24uYmFyX2VuZF9kaXN0YW5jZSA8IGV2ZW50Lmxlbmd0aAogICAgRXZlbnRQYWNrYWdlcih2b2ljZSwgcG9zaXRpb24pLmFwcGVuZChldmVudCkKCiAgICBhc3NlcnQgdm9pY2UuZXZlbnRzID09IHsKICAgICAgICBQb3NpdGlvbi5mcm9tX2ZyYWN0aW9uKDMgLyA4KToKICAgICAgICAgICAgRXZlbnQoTGVuZ3RoLmZyb21fZnJhY3Rpb24oMSAvIDgpLCBQaXRjaCg2MCwgdGllPVRydWUpKSwKICAgICAgICBQb3NpdGlvbi5mcm9tX2ZyYWN0aW9uKDEgLyAyKToKICAgICAgICAgICAgRXZlbnQoTGVuZ3RoLmZyb21fZnJhY3Rpb24oMSAvIDIpLCBQaXRjaCg2MCwgdGllPVRydWUpKSwKICAgICAgICBQb3NpdGlvbi5mcm9tX2ZyYWN0aW9uKDIpOgogICAgICAgICAgICBFdmVudCgKICAgICAgICAgICAgICAgIExlbmd0aC5mcm9tX2ZyYWN0aW9uKDEpLAogICAgICAgICAgICAgICAgUGl0Y2goNjAsIHRpZT1UcnVlKSwKICAgICAgICAgICAgICAgIHByZWFtYnVsYT1bQmFyQ2hlY2soMildCiAgICAgICAgICAgICksCiAgICAgICAgIyBQb3NpdGlvbi5mcm9tX2ZyYWN0aW9uKDMpOgogICAgICAgICMgICAgIEV2ZW50KAogICAgICAgICMgICAgICAgICBMZW5ndGguZnJvbV9mcmFjdGlvbigxIC8gMiksCiAgICAgICAgIyAgICAgICAgIFBpdGNoKDYwLCB0aWU9VHJ1ZSksCiAgICAgICAgIyAgICAgICAgIHByZWFtYnVsYT1bQmFyQ2hlY2soMyldCiAgICAgICAgIyAgICAgKSwKICAgICAgICAjIFBvc2l0aW9uLmZyb21fZnJhY3Rpb24oMyArIDEgLyAyKToKICAgICAgICAjICAgICBFdmVudChMZW5ndGguZnJvbV9mcmFjdGlvbigxIC8gOCksIFBpdGNoKDYwKSksCiAgICAgICAgUG9zaXRpb24uZnJvbV9mcmFjdGlvbigzKToKICAgICAgICAgICAgRXZlbnQoCiAgICAgICAgICAgICAgICBMZW5ndGguZnJvbV9mcmFjdGlvbig1IC8gOCksCiAgICAgICAgICAgICAgICBQaXRjaCg2MCwgdGllPVRydWUpLAogICAgICAgICAgICAgICAgcHJlYW1idWxhPVtCYXJDaGVjaygzKV0pLAogICAgfQ",
					"AQAAAAAAAAABAAAArgQAAAAAAACuBAAAAAAAAAAAAAAAAPC/"
				],
				[
					548,
					1,
					"insert",
					{
						"characters": "false"
					},
					"BgAAAM8EAAAAAAAA0AQAAAAAAAAAAAAA0AQAAAAAAADQBAAAAAAAAAQAAABUcnVl0AQAAAAAAADRBAAAAAAAAAAAAADRBAAAAAAAANIEAAAAAAAAAAAAANIEAAAAAAAA0wQAAAAAAAAAAAAA0wQAAAAAAADUBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzwQAAAAAAADTBAAAAAAAAAAAAAAAAPC/"
				],
				[
					550,
					1,
					"yapf_document",
					null,
					"AQAAAAAAAAAAAAAAEwUAAAAAAAATBQAAZnJvbSByZWFfc2NvcmUuZG9tIGltcG9ydCBCYXJDaGVjaywgRXZlbnRQYWNrYWdlciwgVm9pY2UKZnJvbSByZWFfc2NvcmUucHJpbWl0aXZlcyBpbXBvcnQgRXZlbnQsIExlbmd0aCwgUGl0Y2gsIFBvc2l0aW9uCgoKZGVmIHRlc3RfZXZlbnRfcGFja2FnZXIoKToKICAgIHZvaWNlID0gVm9pY2UoKQogICAgbGVuZ3RoID0gTGVuZ3RoKDkpCiAgICBwb3NpdGlvbiA9IFBvc2l0aW9uKDEuNSkKICAgIGV2ZW50ID0gRXZlbnQobGVuZ3RoLCBQaXRjaCg2MCkpCiAgICBhc3NlcnQgcG9zaXRpb24uYmFyX2VuZF9kaXN0YW5jZSA8IGV2ZW50Lmxlbmd0aAogICAgRXZlbnRQYWNrYWdlcih2b2ljZSwgcG9zaXRpb24pLmFwcGVuZChldmVudCkKCiAgICBhc3NlcnQgdm9pY2UuZXZlbnRzID09IHsKICAgICAgICBQb3NpdGlvbi5mcm9tX2ZyYWN0aW9uKDMgLyA4KToKICAgICAgICAgICAgRXZlbnQoTGVuZ3RoLmZyb21fZnJhY3Rpb24oMSAvIDgpLCBQaXRjaCg2MCwgdGllPVRydWUpKSwKICAgICAgICBQb3NpdGlvbi5mcm9tX2ZyYWN0aW9uKDEgLyAyKToKICAgICAgICAgICAgRXZlbnQoTGVuZ3RoLmZyb21fZnJhY3Rpb24oMSAvIDIpLCBQaXRjaCg2MCwgdGllPVRydWUpKSwKICAgICAgICBQb3NpdGlvbi5mcm9tX2ZyYWN0aW9uKDIpOgogICAgICAgICAgICBFdmVudCgKICAgICAgICAgICAgICAgIExlbmd0aC5mcm9tX2ZyYWN0aW9uKDEpLAogICAgICAgICAgICAgICAgUGl0Y2goNjAsIHRpZT1UcnVlKSwKICAgICAgICAgICAgICAgIHByZWFtYnVsYT1bQmFyQ2hlY2soMildCiAgICAgICAgICAgICksCiAgICAgICAgIyBQb3NpdGlvbi5mcm9tX2ZyYWN0aW9uKDMpOgogICAgICAgICMgICAgIEV2ZW50KAogICAgICAgICMgICAgICAgICBMZW5ndGguZnJvbV9mcmFjdGlvbigxIC8gMiksCiAgICAgICAgIyAgICAgICAgIFBpdGNoKDYwLCB0aWU9VHJ1ZSksCiAgICAgICAgIyAgICAgICAgIHByZWFtYnVsYT1bQmFyQ2hlY2soMyldCiAgICAgICAgIyAgICAgKSwKICAgICAgICAjIFBvc2l0aW9uLmZyb21fZnJhY3Rpb24oMyArIDEgLyAyKToKICAgICAgICAjICAgICBFdmVudChMZW5ndGguZnJvbV9mcmFjdGlvbigxIC8gOCksIFBpdGNoKDYwKSksCiAgICAgICAgUG9zaXRpb24uZnJvbV9mcmFjdGlvbigzKToKICAgICAgICAgICAgRXZlbnQoCiAgICAgICAgICAgICAgICBMZW5ndGguZnJvbV9mcmFjdGlvbig1IC8gOCksCiAgICAgICAgICAgICAgICBQaXRjaCg2MCwgdGllPWZhbHNlKSwKICAgICAgICAgICAgICAgIHByZWFtYnVsYT1bQmFyQ2hlY2soMyldCiAgICAgICAgICAgICksCiAgICB9",
					"AQAAAAAAAAABAAAA1AQAAAAAAADUBAAAAAAAAAAAAAAAAPC/"
				],
				[
					553,
					1,
					"insert",
					{
						"characters": "F"
					},
					"AgAAAM8EAAAAAAAA0AQAAAAAAAAAAAAA0AQAAAAAAADQBAAAAAAAAAEAAABm",
					"AQAAAAAAAAABAAAAzwQAAAAAAADQBAAAAAAAAAAAAAAAAPC/"
				],
				[
					555,
					1,
					"yapf_document",
					null,
					"AQAAAAAAAAAAAAAAEwUAAAAAAAATBQAAZnJvbSByZWFfc2NvcmUuZG9tIGltcG9ydCBCYXJDaGVjaywgRXZlbnRQYWNrYWdlciwgVm9pY2UKZnJvbSByZWFfc2NvcmUucHJpbWl0aXZlcyBpbXBvcnQgRXZlbnQsIExlbmd0aCwgUGl0Y2gsIFBvc2l0aW9uCgoKZGVmIHRlc3RfZXZlbnRfcGFja2FnZXIoKToKICAgIHZvaWNlID0gVm9pY2UoKQogICAgbGVuZ3RoID0gTGVuZ3RoKDkpCiAgICBwb3NpdGlvbiA9IFBvc2l0aW9uKDEuNSkKICAgIGV2ZW50ID0gRXZlbnQobGVuZ3RoLCBQaXRjaCg2MCkpCiAgICBhc3NlcnQgcG9zaXRpb24uYmFyX2VuZF9kaXN0YW5jZSA8IGV2ZW50Lmxlbmd0aAogICAgRXZlbnRQYWNrYWdlcih2b2ljZSwgcG9zaXRpb24pLmFwcGVuZChldmVudCkKCiAgICBhc3NlcnQgdm9pY2UuZXZlbnRzID09IHsKICAgICAgICBQb3NpdGlvbi5mcm9tX2ZyYWN0aW9uKDMgLyA4KToKICAgICAgICAgICAgRXZlbnQoTGVuZ3RoLmZyb21fZnJhY3Rpb24oMSAvIDgpLCBQaXRjaCg2MCwgdGllPVRydWUpKSwKICAgICAgICBQb3NpdGlvbi5mcm9tX2ZyYWN0aW9uKDEgLyAyKToKICAgICAgICAgICAgRXZlbnQoTGVuZ3RoLmZyb21fZnJhY3Rpb24oMSAvIDIpLCBQaXRjaCg2MCwgdGllPVRydWUpKSwKICAgICAgICBQb3NpdGlvbi5mcm9tX2ZyYWN0aW9uKDIpOgogICAgICAgICAgICBFdmVudCgKICAgICAgICAgICAgICAgIExlbmd0aC5mcm9tX2ZyYWN0aW9uKDEpLAogICAgICAgICAgICAgICAgUGl0Y2goNjAsIHRpZT1UcnVlKSwKICAgICAgICAgICAgICAgIHByZWFtYnVsYT1bQmFyQ2hlY2soMildCiAgICAgICAgICAgICksCiAgICAgICAgIyBQb3NpdGlvbi5mcm9tX2ZyYWN0aW9uKDMpOgogICAgICAgICMgICAgIEV2ZW50KAogICAgICAgICMgICAgICAgICBMZW5ndGguZnJvbV9mcmFjdGlvbigxIC8gMiksCiAgICAgICAgIyAgICAgICAgIFBpdGNoKDYwLCB0aWU9VHJ1ZSksCiAgICAgICAgIyAgICAgICAgIHByZWFtYnVsYT1bQmFyQ2hlY2soMyldCiAgICAgICAgIyAgICAgKSwKICAgICAgICAjIFBvc2l0aW9uLmZyb21fZnJhY3Rpb24oMyArIDEgLyAyKToKICAgICAgICAjICAgICBFdmVudChMZW5ndGguZnJvbV9mcmFjdGlvbigxIC8gOCksIFBpdGNoKDYwKSksCiAgICAgICAgUG9zaXRpb24uZnJvbV9mcmFjdGlvbigzKToKICAgICAgICAgICAgRXZlbnQoCiAgICAgICAgICAgICAgICBMZW5ndGguZnJvbV9mcmFjdGlvbig1IC8gOCksCiAgICAgICAgICAgICAgICBQaXRjaCg2MCwgdGllPUZhbHNlKSwKICAgICAgICAgICAgICAgIHByZWFtYnVsYT1bQmFyQ2hlY2soMyldCiAgICAgICAgICAgICksCiAgICB9",
					"AQAAAAAAAAABAAAA0AQAAAAAAADQBAAAAAAAAAAAAAAAAPC/"
				],
				[
					566,
					1,
					"yapf_document",
					null,
					"AQAAAAAAAAAAAAAAEwUAAAAAAAATBQAAZnJvbSByZWFfc2NvcmUuZG9tIGltcG9ydCBCYXJDaGVjaywgRXZlbnRQYWNrYWdlciwgVm9pY2UKZnJvbSByZWFfc2NvcmUucHJpbWl0aXZlcyBpbXBvcnQgRXZlbnQsIExlbmd0aCwgUGl0Y2gsIFBvc2l0aW9uCgoKZGVmIHRlc3RfZXZlbnRfcGFja2FnZXIoKToKICAgIHZvaWNlID0gVm9pY2UoKQogICAgbGVuZ3RoID0gTGVuZ3RoKDkpCiAgICBwb3NpdGlvbiA9IFBvc2l0aW9uKDEuNSkKICAgIGV2ZW50ID0gRXZlbnQobGVuZ3RoLCBQaXRjaCg2MCkpCiAgICBhc3NlcnQgcG9zaXRpb24uYmFyX2VuZF9kaXN0YW5jZSA8IGV2ZW50Lmxlbmd0aAogICAgRXZlbnRQYWNrYWdlcih2b2ljZSwgcG9zaXRpb24pLmFwcGVuZChldmVudCkKCiAgICBhc3NlcnQgdm9pY2UuZXZlbnRzID09IHsKICAgICAgICBQb3NpdGlvbi5mcm9tX2ZyYWN0aW9uKDMgLyA4KToKICAgICAgICAgICAgRXZlbnQoTGVuZ3RoLmZyb21fZnJhY3Rpb24oMSAvIDgpLCBQaXRjaCg2MCwgdGllPVRydWUpKSwKICAgICAgICBQb3NpdGlvbi5mcm9tX2ZyYWN0aW9uKDEgLyAyKToKICAgICAgICAgICAgRXZlbnQoTGVuZ3RoLmZyb21fZnJhY3Rpb24oMSAvIDIpLCBQaXRjaCg2MCwgdGllPVRydWUpKSwKICAgICAgICBQb3NpdGlvbi5mcm9tX2ZyYWN0aW9uKDIpOgogICAgICAgICAgICBFdmVudCgKICAgICAgICAgICAgICAgIExlbmd0aC5mcm9tX2ZyYWN0aW9uKDEpLAogICAgICAgICAgICAgICAgUGl0Y2goNjAsIHRpZT1UcnVlKSwKICAgICAgICAgICAgICAgIHByZWFtYnVsYT1bQmFyQ2hlY2soMildCiAgICAgICAgICAgICksCiAgICAgICAgIyBQb3NpdGlvbi5mcm9tX2ZyYWN0aW9uKDMpOgogICAgICAgICMgICAgIEV2ZW50KAogICAgICAgICMgICAgICAgICBMZW5ndGguZnJvbV9mcmFjdGlvbigxIC8gMiksCiAgICAgICAgIyAgICAgICAgIFBpdGNoKDYwLCB0aWU9VHJ1ZSksCiAgICAgICAgIyAgICAgICAgIHByZWFtYnVsYT1bQmFyQ2hlY2soMyldCiAgICAgICAgIyAgICAgKSwKICAgICAgICAjIFBvc2l0aW9uLmZyb21fZnJhY3Rpb24oMyArIDEgLyAyKToKICAgICAgICAjICAgICBFdmVudChMZW5ndGguZnJvbV9mcmFjdGlvbigxIC8gOCksIFBpdGNoKDYwKSksCiAgICAgICAgUG9zaXRpb24uZnJvbV9mcmFjdGlvbigzKToKICAgICAgICAgICAgRXZlbnQoCiAgICAgICAgICAgICAgICBMZW5ndGguZnJvbV9mcmFjdGlvbig1IC8gOCksCiAgICAgICAgICAgICAgICBQaXRjaCg2MCwgdGllPUZhbHNlKSwKICAgICAgICAgICAgICAgIHByZWFtYnVsYT1bQmFyQ2hlY2soMyldCiAgICAgICAgICAgICksCiAgICB9",
					"AQAAAAAAAAABAAAAkwIAAAAAAACTAgAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "tests/test_primitives.py",
			"settings":
			{
				"buffer_size": 3719,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					5,
					1,
					"insert",
					{
						"characters": "\nasser"
					},
					"BwAAANUHAAAAAAAA1gcAAAAAAAAAAAAA1gcAAAAAAADaBwAAAAAAAAAAAADaBwAAAAAAANsHAAAAAAAAAAAAANsHAAAAAAAA3AcAAAAAAAAAAAAA3AcAAAAAAADdBwAAAAAAAAAAAADdBwAAAAAAAN4HAAAAAAAAAAAAAN4HAAAAAAAA3wcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1QcAAAAAAADVBwAAAAAAAAAAAAAAAPC/"
				],
				[
					7,
					2,
					"left_delete",
					null,
					"AgAAANYHAAAAAAAA1gcAAAAAAAAJAAAAICAgIGFzc2Vy1QcAAAAAAADVBwAAAAAAAAEAAAAK",
					"AQAAAAAAAAABAAAA3wcAAAAAAADWBwAAAAAAAAAAAAAAAAAA"
				],
				[
					14,
					1,
					"insert",
					{
						"characters": "\nassert"
					},
					"CAAAACIEAAAAAAAAIwQAAAAAAAAAAAAAIwQAAAAAAAAnBAAAAAAAAAAAAAAnBAAAAAAAACgEAAAAAAAAAAAAACgEAAAAAAAAKQQAAAAAAAAAAAAAKQQAAAAAAAAqBAAAAAAAAAAAAAAqBAAAAAAAACsEAAAAAAAAAAAAACsEAAAAAAAALAQAAAAAAAAAAAAALAQAAAAAAAAtBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIgQAAAAAAAAiBAAAAAAAAAAAAAAAAPC/"
				],
				[
					15,
					1,
					"insert",
					{
						"characters": " pos1."
					},
					"BgAAAC0EAAAAAAAALgQAAAAAAAAAAAAALgQAAAAAAAAvBAAAAAAAAAAAAAAvBAAAAAAAADAEAAAAAAAAAAAAADAEAAAAAAAAMQQAAAAAAAAAAAAAMQQAAAAAAAAyBAAAAAAAAAAAAAAyBAAAAAAAADMEAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALQQAAAAAAAAtBAAAAAAAAAAAAAAAAPC/"
				],
				[
					16,
					1,
					"insert",
					{
						"characters": "bar_"
					},
					"BAAAADMEAAAAAAAANAQAAAAAAAAAAAAANAQAAAAAAAA1BAAAAAAAAAAAAAA1BAAAAAAAADYEAAAAAAAAAAAAADYEAAAAAAAANwQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMwQAAAAAAAAzBAAAAAAAAAAAAAAAAPC/"
				],
				[
					17,
					1,
					"insert",
					{
						"characters": "end_"
					},
					"BAAAADcEAAAAAAAAOAQAAAAAAAAAAAAAOAQAAAAAAAA5BAAAAAAAAAAAAAA5BAAAAAAAADoEAAAAAAAAAAAAADoEAAAAAAAAOwQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANwQAAAAAAAA3BAAAAAAAAAAAAAAAAPC/"
				],
				[
					18,
					1,
					"insert_completion",
					{
						"completion": "bar_end_distance$0",
						"format": "snippet",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "bar_end_distance"
					},
					"AgAAADMEAAAAAAAAMwQAAAAAAAAIAAAAYmFyX2VuZF8zBAAAAAAAAEMEAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOwQAAAAAAAA7BAAAAAAAAAAAAAAAAPC/"
				],
				[
					19,
					1,
					"insert",
					{
						"characters": " =="
					},
					"AwAAAEMEAAAAAAAARAQAAAAAAAAAAAAARAQAAAAAAABFBAAAAAAAAAAAAABFBAAAAAAAAEYEAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQwQAAAAAAABDBAAAAAAAAAAAAAAAAPC/"
				],
				[
					20,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAEYEAAAAAAAARwQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARgQAAAAAAABGBAAAAAAAAAAAAAAAAPC/"
				],
				[
					21,
					1,
					"insert",
					{
						"characters": "1/4"
					},
					"AwAAAEcEAAAAAAAASAQAAAAAAAAAAAAASAQAAAAAAABJBAAAAAAAAAAAAABJBAAAAAAAAEoEAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARwQAAAAAAABHBAAAAAAAAAAAAAAAAPC/"
				],
				[
					23,
					1,
					"yapf_document",
					null,
					"AQAAAAAAAAAAAAAAhw4AAAAAAACLDgAAZnJvbSBmcmFjdGlvbnMgaW1wb3J0IEZyYWN0aW9uCgppbXBvcnQgcmVhX3Njb3JlLnByaW1pdGl2ZXMgYXMgcHIKCmZyb20gY29weSBpbXBvcnQgZGVlcGNvcHkKCmZyb20gcmVhX3Njb3JlLnNjYWxlIGltcG9ydCBBY2NpZGVudGFsCgoKY2xhc3MgRnJhY3R1cmVkQ29uY3JldGUocHIuRnJhY3R1cmVkKToKCiAgICBkZWYgX19pbml0X18oc2VsZiwgbnVtZXJhdG9yOiBpbnQsIGRlbm9taW5hdG9yOiBpbnQpIC0+IE5vbmU6CiAgICAgICAgc2VsZi5fZnJhY3Rpb24gPSBGcmFjdGlvbihudW1lcmF0b3I9bnVtZXJhdG9yLCBkZW5vbWluYXRvcj1kZW5vbWluYXRvcikKICAgICAgICBzZWxmLm51bWVyYXRvciA9IG51bWVyYXRvcgogICAgICAgIHNlbGYuZGVub21pbmF0b3IgPSBkZW5vbWluYXRvcgoKICAgIEBwcm9wZXJ0eQogICAgZGVmIGZyYWN0aW9uKHNlbGYpIC0+IEZyYWN0aW9uOgogICAgICAgIHJldHVybiBzZWxmLl9mcmFjdGlvbgoKCmRlZiB0ZXN0X3NpbXBsZSgpIC0+IE5vbmU6CiAgICBmcjEgPSBGcmFjdHVyZWRDb25jcmV0ZSgxLCA0KQogICAgZnIyID0gRnJhY3R1cmVkQ29uY3JldGUoMSwgOCkKICAgIGFzc2VydCBmcjEgPiBmcjIKICAgIGFzc2VydCBmcjIgKiAyID09IEZyYWN0aW9uKDEgLyA0KQogICAgYXNzZXJ0IGZyMiAqIDIgPT0gZnIxLmZyYWN0aW9uCiAgICBhc3NlcnQgRnJhY3Rpb24oMSAvIDQpIC8gMiA9PSBGcmFjdGlvbigxIC8gOCkKICAgIHByaW50KGZyMSAvIDIpCiAgICBhc3NlcnQgZnIxIC8gMiA9PSBmcjIKCgpkZWYgdGVzdF9ub3RtYWxpemVkKCkgLT4gTm9uZToKICAgIGZyMSA9IEZyYWN0dXJlZENvbmNyZXRlKDksIDE2KQogICAgYXNzZXJ0IGZyMS5ub3JtYWxpemVkKGZyMS5mcmFjdGlvbikgPT0gKEZyYWN0aW9uKDEgLyAxNiksIEZyYWN0aW9uKDEgLyAyKSkKCgpkZWYgdGVzdF9wb3NpdGlvbigpIC0+IE5vbmU6CiAgICBwb3MxID0gcHIuUG9zaXRpb24oMykKICAgIGFzc2VydCBwb3MxLmJhciA9PSAxCiAgICBhc3NlcnQgcG9zMS5iYXJfcG9zaXRpb24gPT0gMyAvIDQKICAgIGFzc2VydCBwb3MxLnBvc2l0aW9uID09IDMKICAgIGFzc2VydCBwb3MxLmJhcl9lbmRfZGlzdGFuY2UgPT0gMS80CgogICAgcG9zMiA9IHByLlBvc2l0aW9uKDYuNSkKICAgIGFzc2VydCBwb3MyLmJhciA9PSAyCiAgICBhc3NlcnQgcG9zMi5iYXJfcG9zaXRpb24gPT0gNSAvIDgKICAgIGFzc2VydCBwb3MyLnBvc2l0aW9uID09IDYuNQogICAgYXNzZXJ0IHBvczEgPCBwb3MyCiAgICBhc3NlcnQgc3RyKHBvczIpID09ICc8UG9zaXRpb24gYmFyOjIsIGJlYXQ6NS84LCBmcm9tIHN0YXJ0OjYuNT4nCgogICAgYXNzZXJ0IHBvczIuYmFyX3Bvc2l0aW9uX25vcm0gPT0gKDEgLyAyLCAxIC8gOCkgICMgdHlwZTppZ25vcmUKICAgIHBvczMgPSBwci5Qb3NpdGlvbig0ICsgMiArIDEgKyAxIC8gMiArIDEgLyA0KQogICAgYXNzZXJ0IHBvczMuYmFyX3Bvc2l0aW9uX25vcm0gPT0gKDEgLyAyLCAxIC8gNCwgMyAvIDE2KSAgIyB0eXBlOmlnbm9yZQoKICAgIGFzc2VydCBwb3MxLnBlcmNpemVfZGlzdGFuY2UocHIuUG9zaXRpb24oMykpIGlzIE5vbmUKICAgIGFzc2VydCBwb3MxLnBlcmNpemVfZGlzdGFuY2UocG9zMikgPT0gcG9zMi5wZXJjaXplX2Rpc3RhbmNlKHBvczEpCiAgICBhc3NlcnQgcHIuUG9zaXRpb24oMykucGVyY2l6ZV9kaXN0YW5jZShwb3MyKSA9PSAoCiAgICAgICAgcHIuTGVuZ3RoKDEpLCAxLCBwci5MZW5ndGgoMi41KQogICAgKQogICAgYXNzZXJ0IHByLlBvc2l0aW9uKDMpLnBlcmNpemVfZGlzdGFuY2UoCiAgICAgICAgcHIuUG9zaXRpb24oMjEuNSkKICAgICkgPT0gKHByLkxlbmd0aCgxKSwgNSwgcHIuTGVuZ3RoKDEuNSkpCgoKZGVmIHRlc3RfbGVuZ3RoKCkgLT4gTm9uZToKICAgIGxlbjEgPSBwci5MZW5ndGgoMTcgLyA4ICogNCkKICAgIGFzc2VydCBsZW4xID4gMQogICAgYXNzZXJ0IGxlbjEgPiAyCiAgICBhc3NlcnQgbGVuMSAvLyAxID09IDIKICAgIGFzc2VydCBsZW4xICUgMSA9PSAxIC8gOAogICAgYXNzZXJ0IHN0cihsZW4xKSA9PSAnPExlbmd0aCAxNy84PicKCgpkZWYgdGVzdF9waXRjaCgpIC0+IE5vbmU6CiAgICBwMSA9IHByLlBpdGNoKCkKICAgIGFzc2VydCBwMS5uYW1lZF9waXRjaCgpID09ICdyJwogICAgYXNzZXJ0IHN0cihwMSkgPT0gJzxQaXRjaCBpcyByZXN0PicKCiAgICBwMiA9IHByLlBpdGNoKDYwKQogICAgYXNzZXJ0IHAxICE9IHAyCiAgICBhc3NlcnQgcDIubmFtZWRfcGl0Y2goKSA9PSAnYzQnCiAgICBwMi5hY2NpZGVudGFsID0gQWNjaWRlbnRhbC5lcwogICAgYXNzZXJ0IHAyLm5hbWVkX3BpdGNoKCkgPT0gJ2M0JwogICAgcDIuYWNjaWRlbnRhbCA9IEFjY2lkZW50YWwuaXNfCiAgICBhc3NlcnQgcDIubmFtZWRfcGl0Y2goKSA9PSAnYuKZrzMnCgogICAgcDMgPSBwci5QaXRjaCg2MSwgYWNjaWRlbnRhbD1BY2NpZGVudGFsLmVzKQogICAgcDMzID0gcHIuUGl0Y2goNjEsIGFjY2lkZW50YWw9QWNjaWRlbnRhbC5lcykKICAgIGFzc2VydCBwMyA9PSBwMzMKICAgIHA0ID0gcHIuUGl0Y2goNjEsIGFjY2lkZW50YWw9QWNjaWRlbnRhbC5pc18pCiAgICBhc3NlcnQgcDMgaW4gcDQKICAgIGFzc2VydCBzdHIocDMpID09ICc8UGl0Y2ggbWlkaTo2MSwgZOKZrTQgKGluIGM6bWFqb3IpLCB0aWU9RmFsc2U+JwoKCmRlZiB0ZXN0X2V2ZW50KCkgLT4gTm9uZToKICAgIGFzc2VydCBzdHIocHIuRXZlbnQocHIuTGVuZ3RoKDE1IC8gMTYgKiA0KSwgcHIuUGl0Y2goNTgpKSkgPT0gKAogICAgICAgICc8RXZlbnQgKDxMZW5ndGggMTUvMTY+LCA8UGl0Y2ggbWlkaTo1OCwgYeKZrzMnICsKICAgICAgICAnIChpbiBjOm1ham9yKSwgdGllPUZhbHNlPiwgMSwgW10pPicKICAgICkKCiAgICBldiA9IHByLkV2ZW50KHByLkxlbmd0aCgyKSwgcHIuUGl0Y2goNjAsIHRpZT1UcnVlKSkKICAgIGFzc2VydCBldiBpcyBub3QgZGVlcGNvcHkoZXYpCiAgICBjb3B5ID0gZGVlcGNvcHkoZXYpCiAgICBjb3B5LnBpdGNoLnRpZSA9IEZhbHNlCiAgICBhc3NlcnQgZXYucGl0Y2ggIT0gY29weS5waXRjaAogICAgbGVmdCA9IHByLkV2ZW50KHByLkxlbmd0aCgxLjUpLCBwci5QaXRjaCg2MCwgdGllPVRydWUpKQogICAgcmlnaHQgPSBwci5FdmVudChwci5MZW5ndGgoMC41KSwgcHIuUGl0Y2goNjAsIHRpZT1UcnVlKSkKICAgIHNwbGl0ID0gZXYuc3BsaXQocHIuTGVuZ3RoKDEuNSkpCiAgICBhc3NlcnQgc3BsaXQgPT0gKGxlZnQsIHJpZ2h0KQoKCmRlZiB0ZXN0X2Nob3JkKCkgLT4gTm9uZToKICAgIGNob3JkID0gcHIuQ2hvcmQoCiAgICAgICAgcHIuTGVuZ3RoKDEgLyAyICogNCksIHBpdGNoZXM9W3ByLlBpdGNoKDYwKSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcHIuUGl0Y2goNjQpXQogICAgKQogICAgbGVmdCwgcmlnaHQgPSBjaG9yZC5zcGxpdChwci5MZW5ndGgoMSAvIDggKiA0KSkKICAgIGFzc2VydCBsZWZ0Lmxlbmd0aCA9PSBGcmFjdGlvbigxIC8gOCkKICAgIGFzc2VydCByaWdodC5sZW5ndGggPT0gRnJhY3Rpb24oMyAvIDgpCiAgICBhc3NlcnQgbGVmdC5waXRjaGVzID09IHJpZ2h0LnBpdGNoZXMgPT0gY2hvcmQucGl0Y2hlcwogICAgbGVmdCwgcmlnaHQgPSBjaG9yZC5zcGxpdChwci5MZW5ndGgoMSAvIDggKiA0KSwgdGllPVRydWUpCiAgICBhc3NlcnQgbGVmdC5waXRjaGVzICE9IHJpZ2h0LnBpdGNoZXMKICAgIGFzc2VydCBsZWZ0LnBpdGNoZXNbMF0udGllIGlzIFRydWUK",
					"AQAAAAAAAAABAAAASgQAAAAAAABKBAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "tests/simple_test.py",
			"settings":
			{
				"buffer_size": 931,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					4,
					1,
					"toggle_comment",
					{
						"block": false
					},
					"HQAAAFwDAAAAAAAAXgMAAAAAAAAAAAAAOAMAAAAAAAA6AwAAAAAAAAAAAAAuAwAAAAAAADADAAAAAAAAAAAAABYDAAAAAAAAGAMAAAAAAAAAAAAACAMAAAAAAAAKAwAAAAAAAAAAAADwAgAAAAAAAPICAAAAAAAAAAAAAOECAAAAAAAA4wIAAAAAAAAAAAAAuQIAAAAAAAC7AgAAAAAAAAAAAACpAgAAAAAAAKsCAAAAAAAAAAAAAGcCAAAAAAAAaQIAAAAAAAAAAAAAWwIAAAAAAABdAgAAAAAAAAAAAAA+AgAAAAAAAEACAAAAAAAAAAAAAB4CAAAAAAAAIAIAAAAAAAAAAAAA9AEAAAAAAAD2AQAAAAAAAAAAAADXAQAAAAAAANkBAAAAAAAAAAAAAMUBAAAAAAAAxwEAAAAAAAAAAAAAiQEAAAAAAACLAQAAAAAAAAAAAABZAQAAAAAAAFsBAAAAAAAAAAAAACgBAAAAAAAAKgEAAAAAAAAAAAAA5QAAAAAAAADnAAAAAAAAAAAAAADHAAAAAAAAAMkAAAAAAAAAAAAAAKMAAAAAAAAApQAAAAAAAAAAAAAAlwAAAAAAAACZAAAAAAAAAAAAAACCAAAAAAAAAIQAAAAAAAAAAAAAAGAAAAAAAAAAYgAAAAAAAAAAAAAAOQAAAAAAAAA7AAAAAAAAAAAAAAAtAAAAAAAAAC8AAAAAAAAAAAAAABQAAAAAAAAAFgAAAAAAAAAAAAAAAAAAAAAAAAACAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAABsAwAAAAAAAAAAAAAAAPC/"
				],
				[
					6,
					1,
					"yapf_document",
					null,
					"AQAAAAAAAAAAAAAAowMAAAAAAACmAwAAIyBpbXBvcnQgcmVhcHkgYXMgcnByCiMgZnJvbSByZWFweSBpbXBvcnQgSW1HdWkKCiMgIyBycHIuZ2V0XwoKIyBjdHggPSBJbUd1aS5DcmVhdGVDb250ZXh0KCdSZWFTY29yZScpCgojIHRvbmljcyA9IFsnYycsICdjaXMnLCAnZCcsICdkaXMnXQojIHRvbmljX3NlbGVjdGVkID0gMAoKCiMgZGVmIG1haW4oKToKIyAgICAgaWYgSW1HdWkuVHJlZU5vZGUoY3R4LCAnbWFpbicpOgojICAgICAgICAgZ2xvYmFsIHRvbmljX3NlbGVjdGVkCiMgICAgICAgICBpZiBJbUd1aS5CZWdpbkNvbWJvKGN0eCwgJ3RvbmljJywgdG9uaWNzW3RvbmljX3NlbGVjdGVkXSk6CiMgICAgICAgICAgICAgZm9yIGlkeCwgdG9uaWMgaW4gZW51bWVyYXRlKHRvbmljcyk6CiMgICAgICAgICAgICAgICAgIF8sIHNlbGVjdGVkID0gSW1HdWkuU2VsZWN0YWJsZSgKIyAgICAgICAgICAgICAgICAgICAgIGN0eCwgdG9uaWNzW2lkeF0sIHRvbmljX3NlbGVjdGVkID09IGlkeAojICAgICAgICAgICAgICAgICApCiMgICAgICAgICAgICAgICAgIGlmIHNlbGVjdGVkOgojICAgICAgICAgICAgICAgICAgICAgdG9uaWNfc2VsZWN0ZWQgPSBpZHgKCiMgICAgICAgICAgICAgSW1HdWkuRW5kQ29tYm8oY3R4KQojICAgICAgICAgSW1HdWkuVHJlZVBvcChjdHgpCgoKIyBkZWYgbG9vcCgpOgojICAgICB2aXNpYmxlLCBvcGVuXyA9IEltR3VpLkJlZ2luKGN0eCwgJ1JlYVNjb3JlIEluc3BlY3RvcicsIFRydWUpCiMgICAgIGlmIHZpc2libGU6CiMgICAgICAgICBJbUd1aS5UZXh0KGN0eCwgJ0hlbGxvIFdvcmxkIScpCiMgICAgICAgICBtYWluKCkKIyAgICAgICAgIEltR3VpLkVuZChjdHgpCgojICAgICBpZiBvcGVuXzoKIyAgICAgICAgIHJwci5kZWZlcihsb29wKQojICAgICBlbHNlOgojICAgICAgICAgSW1HdWkuRGVzdHJveUNvbnRleHQoY3R4KQoKCiMgcnByLmRlZmVyKGxvb3ApCg",
					"AQAAAAAAAAABAAAAAgAAAAAAAACmAwAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "rea_score/scale.py",
			"settings":
			{
				"buffer_size": 8027,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					4790,
					1,
					"left_delete",
					null,
					"AQAAAJoRAAAAAAAAmhEAAAAAAAABAAAAOQ",
					"AQAAAAAAAAABAAAAmxEAAAAAAACbEQAAAAAAAAAAAAAAAPC/"
				],
				[
					4791,
					1,
					"insert",
					{
						"characters": "8"
					},
					"AQAAAJoRAAAAAAAAmxEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmhEAAAAAAACaEQAAAAAAAAAAAAAAAPC/"
				],
				[
					4793,
					1,
					"yapf_document",
					null,
					"",
					"AQAAAAAAAAABAAAAmxEAAAAAAACbEQAAAAAAAAAAAAAAAPC/"
				],
				[
					4802,
					1,
					"insert",
					{
						"characters": "5"
					},
					"AgAAADwSAAAAAAAAPRIAAAAAAAAAAAAAPRIAAAAAAAA9EgAAAAAAAAEAAAA0",
					"AQAAAAAAAAABAAAAPBIAAAAAAAA9EgAAAAAAAAAAAAAAAPC/"
				],
				[
					4804,
					1,
					"yapf_document",
					null,
					"",
					"AQAAAAAAAAABAAAAPRIAAAAAAAA9EgAAAAAAAAAAAAAAAPC/"
				],
				[
					4807,
					1,
					"insert",
					{
						"characters": "6"
					},
					"AgAAAAIYAAAAAAAAAxgAAAAAAAAAAAAAAxgAAAAAAAADGAAAAAAAAAMAAAA9IDc",
					"AQAAAAAAAAABAAAAAhgAAAAAAAAFGAAAAAAAAAAAAAAAAPC/"
				],
				[
					4818,
					1,
					"yapf_document",
					null,
					"",
					"AQAAAAAAAAABAAAA0hgAAAAAAADSGAAAAAAAAAAAAAAAAPC/"
				],
				[
					4827,
					1,
					"left_delete",
					null,
					"AQAAADwSAAAAAAAAPBIAAAAAAAABAAAANQ",
					"AQAAAAAAAAABAAAAPRIAAAAAAAA9EgAAAAAAAAAAAAAAAPC/"
				],
				[
					4828,
					1,
					"insert",
					{
						"characters": "4"
					},
					"AQAAADwSAAAAAAAAPRIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPBIAAAAAAAA8EgAAAAAAAAAAAAAAAPC/"
				],
				[
					4830,
					1,
					"yapf_document",
					null,
					"",
					"AQAAAAAAAAABAAAAPRIAAAAAAAA9EgAAAAAAAAAAAAAAAPC/"
				],
				[
					4836,
					1,
					"insert",
					{
						"characters": "\nprint"
					},
					"CAAAAMwXAAAAAAAAzRcAAAAAAAAAAAAAzRcAAAAAAADRFwAAAAAAAAAAAADRFwAAAAAAANUXAAAAAAAAAAAAANUXAAAAAAAA1hcAAAAAAAAAAAAA1hcAAAAAAADXFwAAAAAAAAAAAADXFwAAAAAAANgXAAAAAAAAAAAAANgXAAAAAAAA2RcAAAAAAAAAAAAA2RcAAAAAAADaFwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzBcAAAAAAADMFwAAAAAAAAAAAAAAAPC/"
				],
				[
					4837,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAANoXAAAAAAAA3BcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2hcAAAAAAADaFwAAAAAAAAAAAAAAAPC/"
				],
				[
					4838,
					1,
					"swap_line_down",
					null,
					"AgAAAP0XAAAAAAAADRgAAAAAAAAAAAAAzRcAAAAAAADNFwAAAAAAABAAAAAgICAgICAgIHByaW50KCkK",
					"AQAAAAAAAAABAAAA2xcAAAAAAADbFwAAAAAAAAAAAAAAAPC/"
				],
				[
					4842,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAAPsXAAAAAAAA/RcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+xcAAAAAAAD7FwAAAAAAAAAAAAAAAPC/"
				],
				[
					4843,
					1,
					"insert",
					{
						"characters": "ro"
					},
					"AgAAAPwXAAAAAAAA/RcAAAAAAAAAAAAA/RcAAAAAAAD+FwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/BcAAAAAAAD8FwAAAAAAAAAAAAAAAPC/"
				],
				[
					4844,
					2,
					"left_delete",
					null,
					"AgAAAP0XAAAAAAAA/RcAAAAAAAABAAAAb/wXAAAAAAAA/BcAAAAAAAABAAAAcg",
					"AQAAAAAAAAABAAAA/hcAAAAAAAD+FwAAAAAAAAAAAAAAAPC/"
				],
				[
					4845,
					1,
					"insert",
					{
						"characters": "seek"
					},
					"BAAAAPwXAAAAAAAA/RcAAAAAAAAAAAAA/RcAAAAAAAD+FwAAAAAAAAAAAAD+FwAAAAAAAP8XAAAAAAAAAAAAAP8XAAAAAAAAABgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/BcAAAAAAAD8FwAAAAAAAAAAAAAAAPC/"
				],
				[
					4846,
					1,
					"insert",
					{
						"characters": " ne"
					},
					"AwAAAAAYAAAAAAAAARgAAAAAAAAAAAAAARgAAAAAAAACGAAAAAAAAAAAAAACGAAAAAAAAAMYAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAABgAAAAAAAAAGAAAAAAAAAAAAAAAAPC/"
				],
				[
					4847,
					7,
					"left_delete",
					null,
					"BwAAAAIYAAAAAAAAAhgAAAAAAAABAAAAZQEYAAAAAAAAARgAAAAAAAABAAAAbgAYAAAAAAAAABgAAAAAAAABAAAAIP8XAAAAAAAA/xcAAAAAAAABAAAAa/4XAAAAAAAA/hcAAAAAAAABAAAAZf0XAAAAAAAA/RcAAAAAAAABAAAAZfwXAAAAAAAA/BcAAAAAAAABAAAAcw",
					"AQAAAAAAAAABAAAAAxgAAAAAAAADGAAAAAAAAAAAAAAAAPC/"
				],
				[
					4848,
					1,
					"insert",
					{
						"characters": "root"
					},
					"BAAAAPwXAAAAAAAA/RcAAAAAAAAAAAAA/RcAAAAAAAD+FwAAAAAAAAAAAAD+FwAAAAAAAP8XAAAAAAAAAAAAAP8XAAAAAAAAABgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/BcAAAAAAAD8FwAAAAAAAAAAAAAAAPC/"
				],
				[
					4849,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAAAYAAAAAAAAARgAAAAAAAAAAAAAARgAAAAAAAACGAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAABgAAAAAAAAAGAAAAAAAAAAAAAAAAPC/"
				],
				[
					4850,
					2,
					"left_delete",
					null,
					"AgAAAAEYAAAAAAAAARgAAAAAAAABAAAAPQAYAAAAAAAAABgAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAAhgAAAAAAAACGAAAAAAAAAAAAAAAAPC/"
				],
				[
					4851,
					1,
					"insert",
					{
						"characters": ":"
					},
					"AQAAAAAYAAAAAAAAARgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAABgAAAAAAAAAGAAAAAAAAAAAAAAAAPC/"
				],
				[
					4852,
					1,
					"insert",
					{
						"characters": " {}"
					},
					"AwAAAAEYAAAAAAAAAhgAAAAAAAAAAAAAAhgAAAAAAAADGAAAAAAAAAAAAAADGAAAAAAAAAQYAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAARgAAAAAAAABGAAAAAAAAAAAAAAAAPC/"
				],
				[
					4855,
					1,
					"insert",
					{
						"characters": "f"
					},
					"AQAAAPsXAAAAAAAA/BcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+xcAAAAAAAD7FwAAAAAAAAAAAAAAAPC/"
				],
				[
					4860,
					1,
					"insert",
					{
						"characters": "cls."
					},
					"BAAAAAQYAAAAAAAABRgAAAAAAAAAAAAABRgAAAAAAAAGGAAAAAAAAAAAAAAGGAAAAAAAAAcYAAAAAAAAAAAAAAcYAAAAAAAACBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABBgAAAAAAAAEGAAAAAAAAAAAAAAAAPC/"
				],
				[
					4861,
					1,
					"insert",
					{
						"characters": "note_"
					},
					"BQAAAAgYAAAAAAAACRgAAAAAAAAAAAAACRgAAAAAAAAKGAAAAAAAAAAAAAAKGAAAAAAAAAsYAAAAAAAAAAAAAAsYAAAAAAAADBgAAAAAAAAAAAAADBgAAAAAAAANGAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACBgAAAAAAAAIGAAAAAAAAAAAAAAAAPC/"
				],
				[
					4862,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion_item {\"session_name\":\"LSP-pyright\",\"item\":{\"label\":\"note_of_nr\",\"data\":{\"workspacePath\":\"/home/levitanus/gits/ReaScore\",\"filePath\":\"/home/levitanus/gits/ReaScore/rea_score/scale.py\",\"symbolLabel\":\"note_of_nr\",\"position\":{\"character\":32,\"line\":208}},\"kind\":6,\"sortText\":\"09.9999.note_of_nr\"}}",
						"format": "command",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "note_of_nr"
					},
					"AgAAAAgYAAAAAAAACBgAAAAAAAAFAAAAbm90ZV8IGAAAAAAAABIYAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADRgAAAAAAAANGAAAAAAAAAAAAAAAAPC/"
				],
				[
					4863,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAABIYAAAAAAAAFBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEhgAAAAAAAASGAAAAAAAAAAAAAAAAPC/"
				],
				[
					4865,
					1,
					"left_delete",
					null,
					"AQAAAAgYAAAAAAAACBgAAAAAAAALAAAAbm90ZV9vZl9ucls",
					"AQAAAAAAAAABAAAAExgAAAAAAAAIGAAAAAAAAAAAAAAAAPC/"
				],
				[
					4866,
					1,
					"right_delete",
					null,
					"AQAAAAgYAAAAAAAACBgAAAAAAAABAAAAXQ",
					"AQAAAAAAAAABAAAACBgAAAAAAAAIGAAAAAAAAAAAAAAAAPC/"
				],
				[
					4867,
					1,
					"insert",
					{
						"characters": "nati"
					},
					"BAAAAAgYAAAAAAAACRgAAAAAAAAAAAAACRgAAAAAAAAKGAAAAAAAAAAAAAAKGAAAAAAAAAsYAAAAAAAAAAAAAAsYAAAAAAAADBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACBgAAAAAAAAIGAAAAAAAAAAAAAAAAPC/"
				],
				[
					4868,
					1,
					"left_delete",
					null,
					"AQAAAAsYAAAAAAAACxgAAAAAAAABAAAAaQ",
					"AQAAAAAAAAABAAAADBgAAAAAAAAMGAAAAAAAAAAAAAAAAPC/"
				],
				[
					4869,
					1,
					"insert",
					{
						"characters": "ura"
					},
					"AwAAAAsYAAAAAAAADBgAAAAAAAAAAAAADBgAAAAAAAANGAAAAAAAAAAAAAANGAAAAAAAAA4YAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACxgAAAAAAAALGAAAAAAAAAAAAAAAAPC/"
				],
				[
					4872,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion_item {\"session_name\":\"LSP-pyright\",\"item\":{\"label\":\"natural_note\",\"data\":{\"workspacePath\":\"/home/levitanus/gits/ReaScore\",\"filePath\":\"/home/levitanus/gits/ReaScore/rea_score/scale.py\",\"symbolLabel\":\"natural_note\",\"position\":{\"character\":33,\"line\":208}},\"kind\":6,\"sortText\":\"09.9999.natural_note\"}}",
						"format": "command",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "natural_note"
					},
					"AgAAAAgYAAAAAAAACBgAAAAAAAAGAAAAbmF0dXJhCBgAAAAAAAAUGAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADhgAAAAAAAAOGAAAAAAAAAAAAAAAAPC/"
				],
				[
					4873,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAABQYAAAAAAAAFhgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFBgAAAAAAAAUGAAAAAAAAAAAAAAAAPC/"
				],
				[
					4874,
					1,
					"insert",
					{
						"characters": "root"
					},
					"BAAAABUYAAAAAAAAFhgAAAAAAAAAAAAAFhgAAAAAAAAXGAAAAAAAAAAAAAAXGAAAAAAAABgYAAAAAAAAAAAAABgYAAAAAAAAGRgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFRgAAAAAAAAVGAAAAAAAAAAAAAAAAPC/"
				],
				[
					4875,
					1,
					"insert_completion",
					{
						"completion": "root_idx$0",
						"format": "snippet",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "root_idx"
					},
					"AgAAABUYAAAAAAAAFRgAAAAAAAAEAAAAcm9vdBUYAAAAAAAAHRgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGRgAAAAAAAAZGAAAAAAAAAAAAAAAAPC/"
				],
				[
					4877,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAB8YAAAAAAAAIBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHxgAAAAAAAAfGAAAAAAAAAAAAAAAAPC/"
				],
				[
					4878,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAACAYAAAAAAAAIRgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIBgAAAAAAAAgGAAAAAAAAAAAAAAAAPC/"
				],
				[
					4886,
					1,
					"insert",
					{
						"characters": "umber"
					},
					"BgAAABEYAAAAAAAAEhgAAAAAAAAAAAAAEhgAAAAAAAASGAAAAAAAAAMAAABvdGUSGAAAAAAAABMYAAAAAAAAAAAAABMYAAAAAAAAFBgAAAAAAAAAAAAAFBgAAAAAAAAVGAAAAAAAAAAAAAAVGAAAAAAAABYYAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAERgAAAAAAAAUGAAAAAAAAAAAAAAAAPC/"
				],
				[
					4896,
					1,
					"insert",
					{
						"characters": "next:"
					},
					"BQAAACMYAAAAAAAAJBgAAAAAAAAAAAAAJBgAAAAAAAAlGAAAAAAAAAAAAAAlGAAAAAAAACYYAAAAAAAAAAAAACYYAAAAAAAAJxgAAAAAAAAAAAAAJxgAAAAAAAAoGAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIxgAAAAAAAAjGAAAAAAAAAAAAAAAAPC/"
				],
				[
					4897,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAACgYAAAAAAAAKRgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKBgAAAAAAAAoGAAAAAAAAAAAAAAAAPC/"
				],
				[
					4898,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAACkYAAAAAAAAKxgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKRgAAAAAAAApGAAAAAAAAAAAAAAAAPC/"
				],
				[
					4901,
					2,
					"swap_line_down",
					null,
					"BAAAAEcYAAAAAAAAiBgAAAAAAAAAAAAA7RcAAAAAAADtFwAAAAAAAEEAAAAgICAgICAgIHByaW50KGYncm9vdDoge2Nscy5uYXR1cmFsX251bWJlcltyb290X2lkeF19LCBuZXh0OiB7fScpCmAYAAAAAAAAoRgAAAAAAAAAAAAABhgAAAAAAAAGGAAAAAAAAEEAAAAgICAgICAgIHByaW50KGYncm9vdDoge2Nscy5uYXR1cmFsX251bWJlcltyb290X2lkeF19LCBuZXh0OiB7fScpCg",
					"AQAAAAAAAAABAAAAKhgAAAAAAAAqGAAAAAAAAAAAAAAAAPC/"
				],
				[
					4902,
					1,
					"paste",
					null,
					"AQAAAFwYAAAAAAAAeBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXBgAAAAAAABcGAAAAAAAAAAAAAAAAPC/"
				],
				[
					4905,
					1,
					"insert",
					{
						"characters": "note_"
					},
					"BgAAAG8YAAAAAAAAcBgAAAAAAAAAAAAAcBgAAAAAAABwGAAAAAAAAAgAAAByb290X2lkeHAYAAAAAAAAcRgAAAAAAAAAAAAAcRgAAAAAAAByGAAAAAAAAAAAAAByGAAAAAAAAHMYAAAAAAAAAAAAAHMYAAAAAAAAdBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdxgAAAAAAABvGAAAAAAAAAAAAAAAAPC/"
				],
				[
					4907,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion_item {\"session_name\":\"LSP-pyright\",\"item\":{\"label\":\"note_idx\",\"data\":{\"workspacePath\":\"/home/levitanus/gits/ReaScore\",\"filePath\":\"/home/levitanus/gits/ReaScore/rea_score/scale.py\",\"symbolLabel\":\"note_idx\",\"position\":{\"character\":85,\"line\":210}},\"kind\":6,\"sortText\":\"09.9999.note_idx\"}}",
						"format": "command",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "note_idx"
					},
					"AgAAAG8YAAAAAAAAbxgAAAAAAAAFAAAAbm90ZV9vGAAAAAAAAHcYAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdBgAAAAAAAB0GAAAAAAAAAAAAAAAAPC/"
				],
				[
					4909,
					1,
					"yapf_document",
					null,
					"",
					"AQAAAAAAAAABAAAAdxgAAAAAAAB3GAAAAAAAAAAAAAAAAPC/"
				],
				[
					4918,
					1,
					"insert",
					{
						"characters": "\nprint"
					},
					"BwAAAOIRAAAAAAAA4xEAAAAAAAAAAAAA4xEAAAAAAADzEQAAAAAAAAAAAADzEQAAAAAAAPQRAAAAAAAAAAAAAPQRAAAAAAAA9REAAAAAAAAAAAAA9REAAAAAAAD2EQAAAAAAAAAAAAD2EQAAAAAAAPcRAAAAAAAAAAAAAPcRAAAAAAAA+BEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4hEAAAAAAADiEQAAAAAAAAAAAAAAAPC/"
				],
				[
					4919,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAPgRAAAAAAAA+hEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+BEAAAAAAAD4EQAAAAAAAAAAAAAAAPC/"
				],
				[
					4920,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAAPkRAAAAAAAA+xEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+REAAAAAAAD5EQAAAAAAAAAAAAAAAPC/"
				],
				[
					4921,
					1,
					"insert",
					{
						"characters": "key"
					},
					"AwAAAPoRAAAAAAAA+xEAAAAAAAAAAAAA+xEAAAAAAAD8EQAAAAAAAAAAAAD8EQAAAAAAAP0RAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+hEAAAAAAAD6EQAAAAAAAAAAAAAAAPC/"
				],
				[
					4922,
					1,
					"insert",
					{
						"characters": " root:"
					},
					"BgAAAP0RAAAAAAAA/hEAAAAAAAAAAAAA/hEAAAAAAAD/EQAAAAAAAAAAAAD/EQAAAAAAAAASAAAAAAAAAAAAAAASAAAAAAAAARIAAAAAAAAAAAAAARIAAAAAAAACEgAAAAAAAAAAAAACEgAAAAAAAAMSAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/REAAAAAAAD9EQAAAAAAAAAAAAAAAPC/"
				],
				[
					4923,
					1,
					"insert",
					{
						"characters": " {}"
					},
					"AwAAAAMSAAAAAAAABBIAAAAAAAAAAAAABBIAAAAAAAAFEgAAAAAAAAAAAAAFEgAAAAAAAAYSAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAxIAAAAAAAADEgAAAAAAAAAAAAAAAPC/"
				],
				[
					4927,
					1,
					"insert",
					{
						"characters": "f"
					},
					"AQAAAPkRAAAAAAAA+hEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+REAAAAAAAD5EQAAAAAAAAAAAAAAAPC/"
				],
				[
					4930,
					1,
					"insert",
					{
						"characters": "cls.Na"
					},
					"BgAAAAYSAAAAAAAABxIAAAAAAAAAAAAABxIAAAAAAAAIEgAAAAAAAAAAAAAIEgAAAAAAAAkSAAAAAAAAAAAAAAkSAAAAAAAAChIAAAAAAAAAAAAAChIAAAAAAAALEgAAAAAAAAAAAAALEgAAAAAAAAwSAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABhIAAAAAAAAGEgAAAAAAAAAAAAAAAPC/"
				],
				[
					4931,
					1,
					"insert",
					{
						"characters": "tu"
					},
					"AgAAAAwSAAAAAAAADRIAAAAAAAAAAAAADRIAAAAAAAAOEgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADBIAAAAAAAAMEgAAAAAAAAAAAAAAAPC/"
				],
				[
					4938,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion_item {\"session_name\":\"LSP-pyright\",\"item\":{\"label\":\"natural_number\",\"data\":{\"workspacePath\":\"/home/levitanus/gits/ReaScore\",\"filePath\":\"/home/levitanus/gits/ReaScore/rea_score/scale.py\",\"symbolLabel\":\"natural_number\",\"position\":{\"character\":43,\"line\":164}},\"kind\":6,\"sortText\":\"09.9999.natural_number\"}}",
						"format": "command",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "natural_number"
					},
					"AgAAAAoSAAAAAAAAChIAAAAAAAAEAAAATmF0dQoSAAAAAAAAGBIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADhIAAAAAAAAOEgAAAAAAAAAAAAAAAPC/"
				],
				[
					4939,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAABgSAAAAAAAAGhIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGBIAAAAAAAAYEgAAAAAAAAAAAAAAAPC/"
				],
				[
					4940,
					1,
					"insert",
					{
						"characters": "key_idx"
					},
					"BwAAABkSAAAAAAAAGhIAAAAAAAAAAAAAGhIAAAAAAAAbEgAAAAAAAAAAAAAbEgAAAAAAABwSAAAAAAAAAAAAABwSAAAAAAAAHRIAAAAAAAAAAAAAHRIAAAAAAAAeEgAAAAAAAAAAAAAeEgAAAAAAAB8SAAAAAAAAAAAAAB8SAAAAAAAAIBIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGRIAAAAAAAAZEgAAAAAAAAAAAAAAAPC/"
				],
				[
					4942,
					1,
					"yapf_document",
					null,
					"",
					"AQAAAAAAAAABAAAAIBIAAAAAAAAgEgAAAAAAAAAAAAAAAPC/"
				],
				[
					4953,
					1,
					"paste",
					null,
					"AgAAABkSAAAAAAAAIRIAAAAAAAAAAAAAIRIAAAAAAAAhEgAAAAAAAAcAAABrZXlfaWR4",
					"AQAAAAAAAAABAAAAGRIAAAAAAAAgEgAAAAAAAAAAAAAAAPC/"
				],
				[
					4955,
					1,
					"yapf_document",
					null,
					"",
					"AQAAAAAAAAABAAAAIRIAAAAAAAAhEgAAAAAAAAAAAAAAAPC/"
				],
				[
					4963,
					1,
					"insert",
					{
						"characters": "7"
					},
					"AgAAAIQSAAAAAAAAhRIAAAAAAAAAAAAAhRIAAAAAAACFEgAAAAAAAAEAAAA2",
					"AQAAAAAAAAABAAAAhBIAAAAAAACFEgAAAAAAAAAAAAAAAPC/"
				],
				[
					4965,
					1,
					"yapf_document",
					null,
					"",
					"AQAAAAAAAAABAAAAhRIAAAAAAACFEgAAAAAAAAAAAAAAAPC/"
				],
				[
					4978,
					1,
					"toggle_comment",
					{
						"block": false
					},
					"BQAAALIQAAAAAAAAtBAAAAAAAAAAAAAAHBEAAAAAAAAeEQAAAAAAAAAAAADUEQAAAAAAANYRAAAAAAAAAAAAAPkRAAAAAAAA+xEAAAAAAAAAAAAAyBIAAAAAAADKEgAAAAAAAAAAAAA",
					"AQAAAAAAAAAFAAAAxxAAAAAAAADHEAAAAAAAAAAAAAAAAPC/LBEAAAAAAAAsEQAAAAAAAAAAAAAAAPC/4hEAAAAAAADiEQAAAAAAAAAAAAAAAPC/JRIAAAAAAAAlEgAAAAAAAAAAAAAAAPC/0BIAAAAAAADQEgAAAAAAAAAAAAAAAPC/"
				],
				[
					4980,
					1,
					"yapf_document",
					null,
					"",
					"AQAAAAAAAAAFAAAAyRAAAAAAAADJEAAAAAAAAAAAAAAAAPC/MBEAAAAAAAAwEQAAAAAAAAAAAAAAAPC/6BEAAAAAAADoEQAAAAAAAAAAAAAAAPC/LRIAAAAAAAAtEgAAAAAAAAAAAAAAAPC/2hIAAAAAAADaEgAAAAAAAAAAAAAAAPC/"
				],
				[
					4984,
					2,
					"left_delete",
					null,
					"AgAAAGwYAAAAAAAAbBgAAAAAAAByAAAAICAgICAgICBwcmludCgKICAgICAgICAgICAgZidyb290OiB7Y2xzLm5hdHVyYWxfbnVtYmVyW3Jvb3RfaWR4XX0sIG5leHQ6IHtjbHMubmF0dXJhbF9udW1iZXJbbm90ZV9pZHhdfScKICAgICAgICApaxgAAAAAAABrGAAAAAAAAAEAAAAK",
					"AQAAAAAAAAABAAAA3hgAAAAAAABsGAAAAAAAAAAAAAAAAPC/"
				],
				[
					4986,
					1,
					"yapf_document",
					null,
					"",
					"AQAAAAAAAAABAAAAaxgAAAAAAABrGAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "/media/levitanus/RAID/gits/ReaScore/rea_score/inspector.py",
			"settings":
			{
				"buffer_size": 3770,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					5,
					1,
					"insert",
					{
						"characters": "..."
					},
					"BAAAAMgNAAAAAAAAyQ0AAAAAAAAAAAAAyQ0AAAAAAADJDQAAAAAAAA4AAAB0aW1lLnNsZWVwKC41KckNAAAAAAAAyg0AAAAAAAAAAAAAyg0AAAAAAADLDQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADWDQAAAAAAAMgNAAAAAAAAAAAAAAAA8L8"
				],
				[
					7,
					1,
					"yapf_document",
					null,
					"AQAAAAAAAAAAAAAAtg4AAAAAAAC2DgAAZnJvbSBwYXRobGliIGltcG9ydCBQYXRoCmltcG9ydCB0aW1lCmZyb20gc2h1dGlsIGltcG9ydCBjb3B5ZmlsZQoKaW1wb3J0IHJlYXB5IGFzIHJwcgpmcm9tIHR5cGluZyBpbXBvcnQgT3B0aW9uYWwsIFR1cGxlLCBVbmlvbgoKZnJvbSAuZG9tIGltcG9ydCBldmVudHNfZnJvbV90YWtlLCBzcGxpdF9ieV92b2ljZQpmcm9tIC5saWx5X2NvbnZlcnQgaW1wb3J0IHJlbmRlcl9zdGFmZgpmcm9tIC5saWx5X2V4cG9ydCBpbXBvcnQgcmVuZGVyCgpFWFRfU0VDVElPTiA9ICdMZXZpdGFudXNfUmVhU2NvcmUnCgoKY2xhc3MgUHJvamVjdEluc3BlY3RvcjoKCiAgICBkZWYgX19pbml0X18oc2VsZiwgcHJvamVjdDogT3B0aW9uYWxbcnByLlByb2plY3RdID0gTm9uZSkgLT4gTm9uZToKICAgICAgICBpZiBwcm9qZWN0IGlzIE5vbmU6CiAgICAgICAgICAgIHNlbGYucHJvamVjdCA9IHJwci5Qcm9qZWN0KCkKICAgICAgICBlbHNlOgogICAgICAgICAgICBzZWxmLnByb2plY3QgPSBwcm9qZWN0CgogICAgQHByb3BlcnR5CiAgICBkZWYgZXhwb3J0X2RpcihzZWxmKSAtPiBQYXRoOgogICAgICAgIGlmIHBhdGggOj0gc2VsZi5zdGF0ZSgnZXhwb3J0X2RpcicpOgogICAgICAgICAgICByZXR1cm4gcGF0aAogICAgICAgIHBhdGggPSBQYXRoKHNlbGYucHJvamVjdC5wYXRoKQogICAgICAgIGlmIG5vdCBwYXRoLmlzX2RpcigpOgogICAgICAgICAgICByZXR1cm4gcGF0aC5wYXJlbnQKICAgICAgICBlbHNlOgogICAgICAgICAgICByZXR1cm4gcGF0aAoKICAgIGRlZiBzdGF0ZShzZWxmLAogICAgICAgICAgICAgIGtleTogc3RyLAogICAgICAgICAgICAgIHZhbHVlOiBPcHRpb25hbFtvYmplY3RdID0gTm9uZSkgLT4gT3B0aW9uYWxbb2JqZWN0XToKICAgICAgICBzdGF0ZSA9IHNlbGYucHJvamVjdC5nZXRfZXh0X3N0YXRlKEVYVF9TRUNUSU9OLCAnbWFpbicsIHBpY2tsZWQ9VHJ1ZSkKICAgICAgICBpZiBub3Qgc3RhdGU6CiAgICAgICAgICAgIHN0YXRlID0ge30KICAgICAgICBpZiB2YWx1ZSBpcyBub3QgTm9uZToKICAgICAgICAgICAgc3RhdGVba2V5XSA9IHZhbHVlCiAgICAgICAgICAgIHJldHVybiBOb25lCiAgICAgICAgcmV0dXJuIE5vbmUgaWYga2V5IG5vdCBpbiBzdGF0ZSBlbHNlIHN0YXRlW2tleV0KCiAgICBAcHJvcGVydHkKICAgIGRlZiB0ZW1wX3BkZihzZWxmKSAtPiBQYXRoOgogICAgICAgIHBhdGggPSBQYXRoKHNlbGYucHJvamVjdC5wYXRoKQogICAgICAgIGlmIG5vdCBwYXRoLmlzX2RpcigpOgogICAgICAgICAgICByZXR1cm4gcGF0aC5wYXJlbnQuam9pbnBhdGgoJ3RlbXAucGRmJykKICAgICAgICBlbHNlOgogICAgICAgICAgICByZXR1cm4gcGF0aC5qb2lucGF0aCgndGVtcC5wZGYnKQoKCmNsYXNzIFRyYWNrSW5zcGVjdG9yOgoKICAgIGRlZiBfX2luaXRfXyhzZWxmLCB0cmFjazogT3B0aW9uYWxbVW5pb25bcnByLlRyYWNrLCBzdHJdXSA9IE5vbmUpIC0+IE5vbmU6CiAgICAgICAgaWYgdHJhY2sgaXMgTm9uZToKICAgICAgICAgICAgc2VsZi50cmFjayA9IHJwci5Qcm9qZWN0KCkuc2VsZWN0ZWRfdHJhY2tzWzBdCiAgICAgICAgZWxpZiBpc2luc3RhbmNlKHRyYWNrLCBzdHIpOgogICAgICAgICAgICBzZWxmLnRyYWNrID0gcnByLlRyYWNrLmZyb21fR1VJRCh0cmFjaykKICAgICAgICBlbHNlOgogICAgICAgICAgICBzZWxmLnRyYWNrID0gdHJhY2sKICAgICAgICBzZWxmLmd1aWQgPSBzZWxmLnRyYWNrLkdVSUQKCiAgICBkZWYgc3RhdGUoc2VsZiwKICAgICAgICAgICAgICBrZXk6IHN0ciwKICAgICAgICAgICAgICB2YWx1ZTogT3B0aW9uYWxbb2JqZWN0XSA9IE5vbmUpIC0+IE9wdGlvbmFsW29iamVjdF06CiAgICAgICAgc3RhdGUgPSBzZWxmLnRyYWNrLnByb2plY3QuZ2V0X2V4dF9zdGF0ZSgKICAgICAgICAgICAgRVhUX1NFQ1RJT04sIHNlbGYuZ3VpZCwgcGlja2xlZD1UcnVlCiAgICAgICAgKQogICAgICAgIGlmIG5vdCBzdGF0ZToKICAgICAgICAgICAgc3RhdGUgPSB7fQogICAgICAgIGlmIHZhbHVlIGlzIG5vdCBOb25lOgogICAgICAgICAgICBzdGF0ZVtrZXldID0gdmFsdWUKICAgICAgICAgICAgc2VsZi50cmFjay5wcm9qZWN0LnNldF9leHRfc3RhdGUoCiAgICAgICAgICAgICAgICBFWFRfU0VDVElPTiwgc2VsZi5ndWlkLCBzdGF0ZSwgcGlja2xlZD1UcnVlCiAgICAgICAgICAgICkKICAgICAgICAgICAgcmV0dXJuIE5vbmUKICAgICAgICByZXR1cm4gTm9uZSBpZiBrZXkgbm90IGluIHN0YXRlIGVsc2Ugc3RhdGVba2V5XQoKICAgIEBwcm9wZXJ0eQogICAgZGVmIHBhcnRfbmFtZShzZWxmKSAtPiBzdHI6CiAgICAgICAgaWYgbmFtZSA6PSBzZWxmLnN0YXRlKCdwYXJ0X25hbWUnKToKICAgICAgICAgICAgcmV0dXJuIG5hbWUKICAgICAgICBpZiBycHIuc2hvd19tZXNzYWdlX2JveCgKICAgICAgICAgICAgJ1BhcnQgbmFtZSBpcyBub3QgcHJvdmlkZWQuIERvIFlvdSB3aXNoIHRvIHVzZSB0cmFjayBuYW1lPycsCiAgICAgICAgICAgICdwYXJ0IG5hbWUgZGlhbG9nJywgJ29rLWNhbmNlbCcKICAgICAgICApID09ICdvayc6CiAgICAgICAgICAgIG5hbWUgPSBzZWxmLnRyYWNrLm5hbWUKICAgICAgICAgICAgc2VsZi5zdGF0ZSgncGFydF9uYW1lJywgbmFtZSkKICAgICAgICAgICAgcmV0dXJuIG5hbWUKICAgICAgICBlbHNlOgogICAgICAgICAgICB0cnk6CiAgICAgICAgICAgICAgICBuYW1lID0gcnByLmdldF91c2VyX2lucHV0cygKICAgICAgICAgICAgICAgICAgICAnUGxlYXNlLCBwcm92aWRlIHBhcnQgbmFtZTonLCBbJ3BhcnQgbmFtZSddCiAgICAgICAgICAgICAgICApWydwYXJ0IG5hbWUnXQogICAgICAgICAgICAgICAgc2VsZi5zdGF0ZSgncGFydF9uYW1lJywgbmFtZSkKICAgICAgICAgICAgICAgIHJldHVybiBuYW1lCiAgICAgICAgICAgIGV4Y2VwdCBSdW50aW1lRXJyb3I6CiAgICAgICAgICAgICAgICBleGl0KCkKCiAgICBAcHJvcGVydHkKICAgIGRlZiBleHBvcnRfcGF0aChzZWxmKSAtPiBQYXRoOgogICAgICAgIGRpcl8gPSBQcm9qZWN0SW5zcGVjdG9yKCkuZXhwb3J0X2RpcgogICAgICAgIHJldHVybiBkaXJfLmpvaW5wYXRoKGYie3NlbGYucGFydF9uYW1lfS5seSIpCgogICAgZGVmIHJlbmRlcihzZWxmKSAtPiBOb25lOgogICAgICAgIGV2ZW50cyA9IHt9CiAgICAgICAgZXhwb3J0X3BhdGggPSBzZWxmLmV4cG9ydF9wYXRoCiAgICAgICAgZm9yIGl0ZW0gaW4gc2VsZi50cmFjay5pdGVtczoKICAgICAgICAgICAgcHJpbnQoaXRlbS50cmFjaywgaXRlbS50cmFjay5uYW1lLCBpdGVtKQogICAgICAgICAgICBldmVudHMudXBkYXRlKGV2ZW50c19mcm9tX3Rha2UoaXRlbS5hY3RpdmVfdGFrZSkpCiAgICAgICAgcHJpbnQoZXZlbnRzKQogICAgICAgIGxpbHkgPSByZW5kZXJfc3RhZmYoc3BsaXRfYnlfdm9pY2UoZXZlbnRzKSkKICAgICAgICBwZGYgPSByZW5kZXIobGlseSwgZXhwb3J0X3BhdGgpCiAgICAgICAgcHJpbnQocGRmLCBQcm9qZWN0SW5zcGVjdG9yKCkudGVtcF9wZGYpCiAgICAgICAgd2hpbGUgbm90IHBkZi5leGlzdHMoKToKICAgICAgICAgICAgLi4uCiAgICAgICAgIyBjb3B5ZmlsZShzdHIocGRmKSwgc3RyKFByb2plY3RJbnNwZWN0b3IoKS50ZW1wX3BkZikpCiAgICAgICAgd2l0aCBvcGVuKHBkZiwgJ3JiJykgYXMgaW5fOgogICAgICAgICAgICB3aXRoIG9wZW4oUHJvamVjdEluc3BlY3RvcigpLnRlbXBfcGRmLCAnd2InKSBhcyBvdXQ6CiAgICAgICAgICAgICAgICBvdXQud3JpdGUoaW5fLnJlYWQoKSkKICAgICAgICAgICAgICAgIG91dC50cnVuY2F0ZSgpCg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADLDQAAAAAAAMsNAAAAAAAAAAAAAAAA8L8"
				],
				[
					28,
					1,
					"toggle_comment",
					{
						"block": false
					},
					"AQAAABkAAAAAAAAAGwAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAkAAAAAAAAACQAAAAAAAAAAAAAAAAA8L8"
				],
				[
					31,
					1,
					"toggle_comment",
					{
						"block": false
					},
					"AQAAACcAAAAAAAAAKQAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABCAAAAAAAAAEIAAAAAAAAAAAAAAAAA8L8"
				],
				[
					35,
					1,
					"yapf_document",
					null,
					"AQAAAAAAAAAAAAAAug4AAAAAAAC6DgAAZnJvbSBwYXRobGliIGltcG9ydCBQYXRoCiMgaW1wb3J0IHRpbWUKIyBmcm9tIHNodXRpbCBpbXBvcnQgY29weWZpbGUKCmltcG9ydCByZWFweSBhcyBycHIKZnJvbSB0eXBpbmcgaW1wb3J0IE9wdGlvbmFsLCBUdXBsZSwgVW5pb24KCmZyb20gLmRvbSBpbXBvcnQgZXZlbnRzX2Zyb21fdGFrZSwgc3BsaXRfYnlfdm9pY2UKZnJvbSAubGlseV9jb252ZXJ0IGltcG9ydCByZW5kZXJfc3RhZmYKZnJvbSAubGlseV9leHBvcnQgaW1wb3J0IHJlbmRlcgoKRVhUX1NFQ1RJT04gPSAnTGV2aXRhbnVzX1JlYVNjb3JlJwoKCmNsYXNzIFByb2plY3RJbnNwZWN0b3I6CgogICAgZGVmIF9faW5pdF9fKHNlbGYsIHByb2plY3Q6IE9wdGlvbmFsW3Jwci5Qcm9qZWN0XSA9IE5vbmUpIC0+IE5vbmU6CiAgICAgICAgaWYgcHJvamVjdCBpcyBOb25lOgogICAgICAgICAgICBzZWxmLnByb2plY3QgPSBycHIuUHJvamVjdCgpCiAgICAgICAgZWxzZToKICAgICAgICAgICAgc2VsZi5wcm9qZWN0ID0gcHJvamVjdAoKICAgIEBwcm9wZXJ0eQogICAgZGVmIGV4cG9ydF9kaXIoc2VsZikgLT4gUGF0aDoKICAgICAgICBpZiBwYXRoIDo9IHNlbGYuc3RhdGUoJ2V4cG9ydF9kaXInKToKICAgICAgICAgICAgcmV0dXJuIHBhdGgKICAgICAgICBwYXRoID0gUGF0aChzZWxmLnByb2plY3QucGF0aCkKICAgICAgICBpZiBub3QgcGF0aC5pc19kaXIoKToKICAgICAgICAgICAgcmV0dXJuIHBhdGgucGFyZW50CiAgICAgICAgZWxzZToKICAgICAgICAgICAgcmV0dXJuIHBhdGgKCiAgICBkZWYgc3RhdGUoc2VsZiwKICAgICAgICAgICAgICBrZXk6IHN0ciwKICAgICAgICAgICAgICB2YWx1ZTogT3B0aW9uYWxbb2JqZWN0XSA9IE5vbmUpIC0+IE9wdGlvbmFsW29iamVjdF06CiAgICAgICAgc3RhdGUgPSBzZWxmLnByb2plY3QuZ2V0X2V4dF9zdGF0ZShFWFRfU0VDVElPTiwgJ21haW4nLCBwaWNrbGVkPVRydWUpCiAgICAgICAgaWYgbm90IHN0YXRlOgogICAgICAgICAgICBzdGF0ZSA9IHt9CiAgICAgICAgaWYgdmFsdWUgaXMgbm90IE5vbmU6CiAgICAgICAgICAgIHN0YXRlW2tleV0gPSB2YWx1ZQogICAgICAgICAgICByZXR1cm4gTm9uZQogICAgICAgIHJldHVybiBOb25lIGlmIGtleSBub3QgaW4gc3RhdGUgZWxzZSBzdGF0ZVtrZXldCgogICAgQHByb3BlcnR5CiAgICBkZWYgdGVtcF9wZGYoc2VsZikgLT4gUGF0aDoKICAgICAgICBwYXRoID0gUGF0aChzZWxmLnByb2plY3QucGF0aCkKICAgICAgICBpZiBub3QgcGF0aC5pc19kaXIoKToKICAgICAgICAgICAgcmV0dXJuIHBhdGgucGFyZW50LmpvaW5wYXRoKCd0ZW1wLnBkZicpCiAgICAgICAgZWxzZToKICAgICAgICAgICAgcmV0dXJuIHBhdGguam9pbnBhdGgoJ3RlbXAucGRmJykKCgpjbGFzcyBUcmFja0luc3BlY3RvcjoKCiAgICBkZWYgX19pbml0X18oc2VsZiwgdHJhY2s6IE9wdGlvbmFsW1VuaW9uW3Jwci5UcmFjaywgc3RyXV0gPSBOb25lKSAtPiBOb25lOgogICAgICAgIGlmIHRyYWNrIGlzIE5vbmU6CiAgICAgICAgICAgIHNlbGYudHJhY2sgPSBycHIuUHJvamVjdCgpLnNlbGVjdGVkX3RyYWNrc1swXQogICAgICAgIGVsaWYgaXNpbnN0YW5jZSh0cmFjaywgc3RyKToKICAgICAgICAgICAgc2VsZi50cmFjayA9IHJwci5UcmFjay5mcm9tX0dVSUQodHJhY2spCiAgICAgICAgZWxzZToKICAgICAgICAgICAgc2VsZi50cmFjayA9IHRyYWNrCiAgICAgICAgc2VsZi5ndWlkID0gc2VsZi50cmFjay5HVUlECgogICAgZGVmIHN0YXRlKHNlbGYsCiAgICAgICAgICAgICAga2V5OiBzdHIsCiAgICAgICAgICAgICAgdmFsdWU6IE9wdGlvbmFsW29iamVjdF0gPSBOb25lKSAtPiBPcHRpb25hbFtvYmplY3RdOgogICAgICAgIHN0YXRlID0gc2VsZi50cmFjay5wcm9qZWN0LmdldF9leHRfc3RhdGUoCiAgICAgICAgICAgIEVYVF9TRUNUSU9OLCBzZWxmLmd1aWQsIHBpY2tsZWQ9VHJ1ZQogICAgICAgICkKICAgICAgICBpZiBub3Qgc3RhdGU6CiAgICAgICAgICAgIHN0YXRlID0ge30KICAgICAgICBpZiB2YWx1ZSBpcyBub3QgTm9uZToKICAgICAgICAgICAgc3RhdGVba2V5XSA9IHZhbHVlCiAgICAgICAgICAgIHNlbGYudHJhY2sucHJvamVjdC5zZXRfZXh0X3N0YXRlKAogICAgICAgICAgICAgICAgRVhUX1NFQ1RJT04sIHNlbGYuZ3VpZCwgc3RhdGUsIHBpY2tsZWQ9VHJ1ZQogICAgICAgICAgICApCiAgICAgICAgICAgIHJldHVybiBOb25lCiAgICAgICAgcmV0dXJuIE5vbmUgaWYga2V5IG5vdCBpbiBzdGF0ZSBlbHNlIHN0YXRlW2tleV0KCiAgICBAcHJvcGVydHkKICAgIGRlZiBwYXJ0X25hbWUoc2VsZikgLT4gc3RyOgogICAgICAgIGlmIG5hbWUgOj0gc2VsZi5zdGF0ZSgncGFydF9uYW1lJyk6CiAgICAgICAgICAgIHJldHVybiBuYW1lCiAgICAgICAgaWYgcnByLnNob3dfbWVzc2FnZV9ib3goCiAgICAgICAgICAgICdQYXJ0IG5hbWUgaXMgbm90IHByb3ZpZGVkLiBEbyBZb3Ugd2lzaCB0byB1c2UgdHJhY2sgbmFtZT8nLAogICAgICAgICAgICAncGFydCBuYW1lIGRpYWxvZycsICdvay1jYW5jZWwnCiAgICAgICAgKSA9PSAnb2snOgogICAgICAgICAgICBuYW1lID0gc2VsZi50cmFjay5uYW1lCiAgICAgICAgICAgIHNlbGYuc3RhdGUoJ3BhcnRfbmFtZScsIG5hbWUpCiAgICAgICAgICAgIHJldHVybiBuYW1lCiAgICAgICAgZWxzZToKICAgICAgICAgICAgdHJ5OgogICAgICAgICAgICAgICAgbmFtZSA9IHJwci5nZXRfdXNlcl9pbnB1dHMoCiAgICAgICAgICAgICAgICAgICAgJ1BsZWFzZSwgcHJvdmlkZSBwYXJ0IG5hbWU6JywgWydwYXJ0IG5hbWUnXQogICAgICAgICAgICAgICAgKVsncGFydCBuYW1lJ10KICAgICAgICAgICAgICAgIHNlbGYuc3RhdGUoJ3BhcnRfbmFtZScsIG5hbWUpCiAgICAgICAgICAgICAgICByZXR1cm4gbmFtZQogICAgICAgICAgICBleGNlcHQgUnVudGltZUVycm9yOgogICAgICAgICAgICAgICAgZXhpdCgpCgogICAgQHByb3BlcnR5CiAgICBkZWYgZXhwb3J0X3BhdGgoc2VsZikgLT4gUGF0aDoKICAgICAgICBkaXJfID0gUHJvamVjdEluc3BlY3RvcigpLmV4cG9ydF9kaXIKICAgICAgICByZXR1cm4gZGlyXy5qb2lucGF0aChmIntzZWxmLnBhcnRfbmFtZX0ubHkiKQoKICAgIGRlZiByZW5kZXIoc2VsZikgLT4gTm9uZToKICAgICAgICBldmVudHMgPSB7fQogICAgICAgIGV4cG9ydF9wYXRoID0gc2VsZi5leHBvcnRfcGF0aAogICAgICAgIGZvciBpdGVtIGluIHNlbGYudHJhY2suaXRlbXM6CiAgICAgICAgICAgIHByaW50KGl0ZW0udHJhY2ssIGl0ZW0udHJhY2submFtZSwgaXRlbSkKICAgICAgICAgICAgZXZlbnRzLnVwZGF0ZShldmVudHNfZnJvbV90YWtlKGl0ZW0uYWN0aXZlX3Rha2UpKQogICAgICAgIHByaW50KGV2ZW50cykKICAgICAgICBsaWx5ID0gcmVuZGVyX3N0YWZmKHNwbGl0X2J5X3ZvaWNlKGV2ZW50cykpCiAgICAgICAgcGRmID0gcmVuZGVyKGxpbHksIGV4cG9ydF9wYXRoKQogICAgICAgIHByaW50KHBkZiwgUHJvamVjdEluc3BlY3RvcigpLnRlbXBfcGRmKQogICAgICAgIHdoaWxlIG5vdCBwZGYuZXhpc3RzKCk6CiAgICAgICAgICAgIC4uLgogICAgICAgICMgY29weWZpbGUoc3RyKHBkZiksIHN0cihQcm9qZWN0SW5zcGVjdG9yKCkudGVtcF9wZGYpKQogICAgICAgIHdpdGggb3BlbihwZGYsICdyYicpIGFzIGluXzoKICAgICAgICAgICAgd2l0aCBvcGVuKFByb2plY3RJbnNwZWN0b3IoKS50ZW1wX3BkZiwgJ3diJykgYXMgb3V0OgogICAgICAgICAgICAgICAgb3V0LndyaXRlKGluXy5yZWFkKCkpCiAgICAgICAgICAgICAgICBvdXQudHJ1bmNhdGUoKQo",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABFAAAAAAAAAEUAAAAAAAAAAAAAAAAA8L8"
				],
				[
					91,
					1,
					"yapf_document",
					null,
					"AQAAAAAAAAAAAAAAug4AAAAAAAC6DgAAZnJvbSBwYXRobGliIGltcG9ydCBQYXRoCiMgaW1wb3J0IHRpbWUKIyBmcm9tIHNodXRpbCBpbXBvcnQgY29weWZpbGUKCmltcG9ydCByZWFweSBhcyBycHIKZnJvbSB0eXBpbmcgaW1wb3J0IE9wdGlvbmFsLCBUdXBsZSwgVW5pb24KCmZyb20gLmRvbSBpbXBvcnQgZXZlbnRzX2Zyb21fdGFrZSwgc3BsaXRfYnlfdm9pY2UKZnJvbSAubGlseV9jb252ZXJ0IGltcG9ydCByZW5kZXJfc3RhZmYKZnJvbSAubGlseV9leHBvcnQgaW1wb3J0IHJlbmRlcgoKRVhUX1NFQ1RJT04gPSAnTGV2aXRhbnVzX1JlYVNjb3JlJwoKCmNsYXNzIFByb2plY3RJbnNwZWN0b3I6CgogICAgZGVmIF9faW5pdF9fKHNlbGYsIHByb2plY3Q6IE9wdGlvbmFsW3Jwci5Qcm9qZWN0XSA9IE5vbmUpIC0+IE5vbmU6CiAgICAgICAgaWYgcHJvamVjdCBpcyBOb25lOgogICAgICAgICAgICBzZWxmLnByb2plY3QgPSBycHIuUHJvamVjdCgpCiAgICAgICAgZWxzZToKICAgICAgICAgICAgc2VsZi5wcm9qZWN0ID0gcHJvamVjdAoKICAgIEBwcm9wZXJ0eQogICAgZGVmIGV4cG9ydF9kaXIoc2VsZikgLT4gUGF0aDoKICAgICAgICBpZiBwYXRoIDo9IHNlbGYuc3RhdGUoJ2V4cG9ydF9kaXInKToKICAgICAgICAgICAgcmV0dXJuIHBhdGgKICAgICAgICBwYXRoID0gUGF0aChzZWxmLnByb2plY3QucGF0aCkKICAgICAgICBpZiBub3QgcGF0aC5pc19kaXIoKToKICAgICAgICAgICAgcmV0dXJuIHBhdGgucGFyZW50CiAgICAgICAgZWxzZToKICAgICAgICAgICAgcmV0dXJuIHBhdGgKCiAgICBkZWYgc3RhdGUoc2VsZiwKICAgICAgICAgICAgICBrZXk6IHN0ciwKICAgICAgICAgICAgICB2YWx1ZTogT3B0aW9uYWxbb2JqZWN0XSA9IE5vbmUpIC0+IE9wdGlvbmFsW29iamVjdF06CiAgICAgICAgc3RhdGUgPSBzZWxmLnByb2plY3QuZ2V0X2V4dF9zdGF0ZShFWFRfU0VDVElPTiwgJ21haW4nLCBwaWNrbGVkPVRydWUpCiAgICAgICAgaWYgbm90IHN0YXRlOgogICAgICAgICAgICBzdGF0ZSA9IHt9CiAgICAgICAgaWYgdmFsdWUgaXMgbm90IE5vbmU6CiAgICAgICAgICAgIHN0YXRlW2tleV0gPSB2YWx1ZQogICAgICAgICAgICByZXR1cm4gTm9uZQogICAgICAgIHJldHVybiBOb25lIGlmIGtleSBub3QgaW4gc3RhdGUgZWxzZSBzdGF0ZVtrZXldCgogICAgQHByb3BlcnR5CiAgICBkZWYgdGVtcF9wZGYoc2VsZikgLT4gUGF0aDoKICAgICAgICBwYXRoID0gUGF0aChzZWxmLnByb2plY3QucGF0aCkKICAgICAgICBpZiBub3QgcGF0aC5pc19kaXIoKToKICAgICAgICAgICAgcmV0dXJuIHBhdGgucGFyZW50LmpvaW5wYXRoKCd0ZW1wLnBkZicpCiAgICAgICAgZWxzZToKICAgICAgICAgICAgcmV0dXJuIHBhdGguam9pbnBhdGgoJ3RlbXAucGRmJykKCgpjbGFzcyBUcmFja0luc3BlY3RvcjoKCiAgICBkZWYgX19pbml0X18oc2VsZiwgdHJhY2s6IE9wdGlvbmFsW1VuaW9uW3Jwci5UcmFjaywgc3RyXV0gPSBOb25lKSAtPiBOb25lOgogICAgICAgIGlmIHRyYWNrIGlzIE5vbmU6CiAgICAgICAgICAgIHNlbGYudHJhY2sgPSBycHIuUHJvamVjdCgpLnNlbGVjdGVkX3RyYWNrc1swXQogICAgICAgIGVsaWYgaXNpbnN0YW5jZSh0cmFjaywgc3RyKToKICAgICAgICAgICAgc2VsZi50cmFjayA9IHJwci5UcmFjay5mcm9tX0dVSUQodHJhY2spCiAgICAgICAgZWxzZToKICAgICAgICAgICAgc2VsZi50cmFjayA9IHRyYWNrCiAgICAgICAgc2VsZi5ndWlkID0gc2VsZi50cmFjay5HVUlECgogICAgZGVmIHN0YXRlKHNlbGYsCiAgICAgICAgICAgICAga2V5OiBzdHIsCiAgICAgICAgICAgICAgdmFsdWU6IE9wdGlvbmFsW29iamVjdF0gPSBOb25lKSAtPiBPcHRpb25hbFtvYmplY3RdOgogICAgICAgIHN0YXRlID0gc2VsZi50cmFjay5wcm9qZWN0LmdldF9leHRfc3RhdGUoCiAgICAgICAgICAgIEVYVF9TRUNUSU9OLCBzZWxmLmd1aWQsIHBpY2tsZWQ9VHJ1ZQogICAgICAgICkKICAgICAgICBpZiBub3Qgc3RhdGU6CiAgICAgICAgICAgIHN0YXRlID0ge30KICAgICAgICBpZiB2YWx1ZSBpcyBub3QgTm9uZToKICAgICAgICAgICAgc3RhdGVba2V5XSA9IHZhbHVlCiAgICAgICAgICAgIHNlbGYudHJhY2sucHJvamVjdC5zZXRfZXh0X3N0YXRlKAogICAgICAgICAgICAgICAgRVhUX1NFQ1RJT04sIHNlbGYuZ3VpZCwgc3RhdGUsIHBpY2tsZWQ9VHJ1ZQogICAgICAgICAgICApCiAgICAgICAgICAgIHJldHVybiBOb25lCiAgICAgICAgcmV0dXJuIE5vbmUgaWYga2V5IG5vdCBpbiBzdGF0ZSBlbHNlIHN0YXRlW2tleV0KCiAgICBAcHJvcGVydHkKICAgIGRlZiBwYXJ0X25hbWUoc2VsZikgLT4gc3RyOgogICAgICAgIGlmIG5hbWUgOj0gc2VsZi5zdGF0ZSgncGFydF9uYW1lJyk6CiAgICAgICAgICAgIHJldHVybiBuYW1lCiAgICAgICAgaWYgcnByLnNob3dfbWVzc2FnZV9ib3goCiAgICAgICAgICAgICdQYXJ0IG5hbWUgaXMgbm90IHByb3ZpZGVkLiBEbyBZb3Ugd2lzaCB0byB1c2UgdHJhY2sgbmFtZT8nLAogICAgICAgICAgICAncGFydCBuYW1lIGRpYWxvZycsICdvay1jYW5jZWwnCiAgICAgICAgKSA9PSAnb2snOgogICAgICAgICAgICBuYW1lID0gc2VsZi50cmFjay5uYW1lCiAgICAgICAgICAgIHNlbGYuc3RhdGUoJ3BhcnRfbmFtZScsIG5hbWUpCiAgICAgICAgICAgIHJldHVybiBuYW1lCiAgICAgICAgZWxzZToKICAgICAgICAgICAgdHJ5OgogICAgICAgICAgICAgICAgbmFtZSA9IHJwci5nZXRfdXNlcl9pbnB1dHMoCiAgICAgICAgICAgICAgICAgICAgJ1BsZWFzZSwgcHJvdmlkZSBwYXJ0IG5hbWU6JywgWydwYXJ0IG5hbWUnXQogICAgICAgICAgICAgICAgKVsncGFydCBuYW1lJ10KICAgICAgICAgICAgICAgIHNlbGYuc3RhdGUoJ3BhcnRfbmFtZScsIG5hbWUpCiAgICAgICAgICAgICAgICByZXR1cm4gbmFtZQogICAgICAgICAgICBleGNlcHQgUnVudGltZUVycm9yOgogICAgICAgICAgICAgICAgZXhpdCgpCgogICAgQHByb3BlcnR5CiAgICBkZWYgZXhwb3J0X3BhdGgoc2VsZikgLT4gUGF0aDoKICAgICAgICBkaXJfID0gUHJvamVjdEluc3BlY3RvcigpLmV4cG9ydF9kaXIKICAgICAgICByZXR1cm4gZGlyXy5qb2lucGF0aChmIntzZWxmLnBhcnRfbmFtZX0ubHkiKQoKICAgIGRlZiByZW5kZXIoc2VsZikgLT4gTm9uZToKICAgICAgICBldmVudHMgPSB7fQogICAgICAgIGV4cG9ydF9wYXRoID0gc2VsZi5leHBvcnRfcGF0aAogICAgICAgIGZvciBpdGVtIGluIHNlbGYudHJhY2suaXRlbXM6CiAgICAgICAgICAgIHByaW50KGl0ZW0udHJhY2ssIGl0ZW0udHJhY2submFtZSwgaXRlbSkKICAgICAgICAgICAgZXZlbnRzLnVwZGF0ZShldmVudHNfZnJvbV90YWtlKGl0ZW0uYWN0aXZlX3Rha2UpKQogICAgICAgIHByaW50KGV2ZW50cykKICAgICAgICBsaWx5ID0gcmVuZGVyX3N0YWZmKHNwbGl0X2J5X3ZvaWNlKGV2ZW50cykpCiAgICAgICAgcGRmID0gcmVuZGVyKGxpbHksIGV4cG9ydF9wYXRoKQogICAgICAgIHByaW50KHBkZiwgUHJvamVjdEluc3BlY3RvcigpLnRlbXBfcGRmKQogICAgICAgIHdoaWxlIG5vdCBwZGYuZXhpc3RzKCk6CiAgICAgICAgICAgIC4uLgogICAgICAgICMgY29weWZpbGUoc3RyKHBkZiksIHN0cihQcm9qZWN0SW5zcGVjdG9yKCkudGVtcF9wZGYpKQogICAgICAgIHdpdGggb3BlbihwZGYsICdyYicpIGFzIGluXzoKICAgICAgICAgICAgd2l0aCBvcGVuKFByb2plY3RJbnNwZWN0b3IoKS50ZW1wX3BkZiwgJ3diJykgYXMgb3V0OgogICAgICAgICAgICAgICAgb3V0LndyaXRlKGluXy5yZWFkKCkpCiAgICAgICAgICAgICAgICBvdXQudHJ1bmNhdGUoKQo",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABGAAAAAAAAAEYAAAAAAAAAAAAAAAAAAABaAAAAAAAAAFoAAAAAAAAAAAAAAAAAAACFAAAAAAAAAIUAAAAAAAAAAAAAAAAAAAC3AAAAAAAAALcAAAAAAAAAAAAAAAAAAADeAAAAAAAAAN4AAAAAAAAAAAAAAAAAAAA"
				]
			]
		},
		{
			"file": "/media/levitanus/RAID/gits/ReaScore/rea_score/dom.py",
			"settings":
			{
				"buffer_size": 7445,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					419,
					1,
					"insert",
					{
						"characters": "\ncurrent"
					},
					"CQAAANoFAAAAAAAA2wUAAAAAAAAAAAAA2wUAAAAAAADnBQAAAAAAAAAAAADnBQAAAAAAAOgFAAAAAAAAAAAAAOgFAAAAAAAA6QUAAAAAAAAAAAAA6QUAAAAAAADqBQAAAAAAAAAAAADqBQAAAAAAAOsFAAAAAAAAAAAAAOsFAAAAAAAA7AUAAAAAAAAAAAAA7AUAAAAAAADtBQAAAAAAAAAAAADtBQAAAAAAAO4FAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2gUAAAAAAADaBQAAAAAAAAAAAAAAAPC/"
				],
				[
					420,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAO4FAAAAAAAA7wUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7gUAAAAAAADuBQAAAAAAAAAAAAAAAPC/"
				],
				[
					423,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAMEFAAAAAAAAwgUAAAAAAAAAAAAAwgUAAAAAAADOBQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwQUAAAAAAADBBQAAAAAAAP///////+9/"
				],
				[
					425,
					1,
					"swap_line_up",
					null,
					"AgAAAOgFAAAAAAAA6AUAAAAAAAAVAAAAICAgICAgICAgICAgY3VycmVudCAKzwUAAAAAAADkBQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9AUAAAAAAAD0BQAAAAAAAAAAAAAAAFhA"
				],
				[
					427,
					4,
					"left_delete",
					null,
					"BAAAAMoFAAAAAAAAygUAAAAAAAAEAAAAICAgIMYFAAAAAAAAxgUAAAAAAAAEAAAAICAgIMIFAAAAAAAAwgUAAAAAAAAEAAAAICAgIMEFAAAAAAAAwQUAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAzgUAAAAAAADOBQAAAAAAAAAAAAAAAFhA"
				],
				[
					429,
					1,
					"left_delete",
					null,
					"AQAAANUFAAAAAAAA1QUAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAA1gUAAAAAAADWBQAAAAAAAAAAAAAAAHZA"
				],
				[
					430,
					1,
					"insert",
					{
						"characters": "_"
					},
					"AQAAANUFAAAAAAAA1gUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1QUAAAAAAADVBQAAAAAAAAAAAAAAAPC/"
				],
				[
					433,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion_item {\"session_name\":\"LSP-pyright\",\"item\":{\"label\":\"current_pos\",\"data\":{\"workspacePath\":\"/home/levitanus/gits/ReaScore\",\"filePath\":\"/media/levitanus/RAID/gits/ReaScore/rea_score/dom.py\",\"symbolLabel\":\"current_pos\",\"position\":{\"character\":20,\"line\":43}},\"kind\":6,\"sortText\":\"05.0000.current_pos\"}}",
						"format": "command",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "current_pos"
					},
					"AgAAAM4FAAAAAAAAzgUAAAAAAAAIAAAAY3VycmVudF/OBQAAAAAAANkFAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1gUAAAAAAADWBQAAAAAAAAAAAAAAAPC/"
				],
				[
					434,
					1,
					"insert",
					{
						"characters": " +="
					},
					"AwAAANkFAAAAAAAA2gUAAAAAAAAAAAAA2gUAAAAAAADbBQAAAAAAAAAAAADbBQAAAAAAANwFAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2QUAAAAAAADZBQAAAAAAAAAAAAAAAPC/"
				],
				[
					435,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAANwFAAAAAAAA3QUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3AUAAAAAAADcBQAAAAAAAAAAAAAAAPC/"
				],
				[
					436,
					1,
					"insert",
					{
						"characters": "left"
					},
					"BAAAAN0FAAAAAAAA3gUAAAAAAAAAAAAA3gUAAAAAAADfBQAAAAAAAAAAAADfBQAAAAAAAOAFAAAAAAAAAAAAAOAFAAAAAAAA4QUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3QUAAAAAAADdBQAAAAAAAAAAAAAAAPC/"
				],
				[
					438,
					1,
					"insert_completion",
					{
						"completion": "left.length$0",
						"format": "snippet",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "left.length"
					},
					"AgAAAN0FAAAAAAAA3QUAAAAAAAAEAAAAbGVmdN0FAAAAAAAA6AUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4QUAAAAAAADhBQAAAAAAAAAAAAAAAPC/"
				],
				[
					439,
					1,
					"insert",
					{
						"characters": "\\"
					},
					"AQAAAOgFAAAAAAAA6QUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6AUAAAAAAADoBQAAAAAAAAAAAAAAAPC/"
				],
				[
					440,
					1,
					"left_delete",
					null,
					"AQAAAOgFAAAAAAAA6AUAAAAAAAABAAAAXA",
					"AQAAAAAAAAABAAAA6QUAAAAAAADpBQAAAAAAAAAAAAAAAPC/"
				],
				[
					442,
					1,
					"yapf_document",
					null,
					"",
					"AQAAAAAAAAABAAAA6AUAAAAAAADoBQAAAAAAAAAAAAAAAPC/"
				],
				[
					449,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAAEGAAAAAAAAAgYAAAAAAAAAAAAAAgYAAAAAAAAOBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAQYAAAAAAAABBgAAAAAAAP///////+9/"
				],
				[
					450,
					1,
					"left_delete",
					null,
					"AQAAAAoGAAAAAAAACgYAAAAAAAAEAAAAICAgIA",
					"AQAAAAAAAAABAAAADgYAAAAAAAAOBgAAAAAAAAAAAAAAAPC/"
				],
				[
					451,
					1,
					"insert",
					{
						"characters": "print"
					},
					"BQAAAAoGAAAAAAAACwYAAAAAAAAAAAAACwYAAAAAAAAMBgAAAAAAAAAAAAAMBgAAAAAAAA0GAAAAAAAAAAAAAA0GAAAAAAAADgYAAAAAAAAAAAAADgYAAAAAAAAPBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACgYAAAAAAAAKBgAAAAAAAAAAAAAAAPC/"
				],
				[
					452,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAA8GAAAAAAAAEQYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADwYAAAAAAAAPBgAAAAAAAAAAAAAAAPC/"
				],
				[
					453,
					1,
					"insert",
					{
						"characters": "fine"
					},
					"BAAAABAGAAAAAAAAEQYAAAAAAAAAAAAAEQYAAAAAAAASBgAAAAAAAAAAAAASBgAAAAAAABMGAAAAAAAAAAAAABMGAAAAAAAAFAYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEAYAAAAAAAAQBgAAAAAAAAAAAAAAAPC/"
				],
				[
					454,
					1,
					"left_delete",
					null,
					"AQAAABMGAAAAAAAAEwYAAAAAAAABAAAAZQ",
					"AQAAAAAAAAABAAAAFAYAAAAAAAAUBgAAAAAAAAAAAAAAAPC/"
				],
				[
					455,
					1,
					"insert",
					{
						"characters": "al"
					},
					"AgAAABMGAAAAAAAAFAYAAAAAAAAAAAAAFAYAAAAAAAAVBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEwYAAAAAAAATBgAAAAAAAAAAAAAAAPC/"
				],
				[
					459,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion_item {\"session_name\":\"LSP-pyright\",\"item\":{\"label\":\"final_events\",\"data\":{\"workspacePath\":\"/home/levitanus/gits/ReaScore\",\"filePath\":\"/media/levitanus/RAID/gits/ReaScore/rea_score/dom.py\",\"symbolLabel\":\"final_events\",\"position\":{\"character\":19,\"line\":45}},\"kind\":6,\"sortText\":\"05.0001.final_events\"}}",
						"format": "command",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "final_events"
					},
					"AgAAABAGAAAAAAAAEAYAAAAAAAAFAAAAZmluYWwQBgAAAAAAABwGAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFQYAAAAAAAAVBgAAAAAAAAAAAAAAAPC/"
				],
				[
					462,
					1,
					"yapf_document",
					null,
					"",
					"AQAAAAAAAAABAAAAHQYAAAAAAAAdBgAAAAAAAP///////+9/"
				],
				[
					472,
					1,
					"insert",
					{
						"characters": "Length.from"
					},
					"CwAAAI8FAAAAAAAAkAUAAAAAAAAAAAAAkAUAAAAAAACRBQAAAAAAAAAAAACRBQAAAAAAAJIFAAAAAAAAAAAAAJIFAAAAAAAAkwUAAAAAAAAAAAAAkwUAAAAAAACUBQAAAAAAAAAAAACUBQAAAAAAAJUFAAAAAAAAAAAAAJUFAAAAAAAAlgUAAAAAAAAAAAAAlgUAAAAAAACXBQAAAAAAAAAAAACXBQAAAAAAAJgFAAAAAAAAAAAAAJgFAAAAAAAAmQUAAAAAAAAAAAAAmQUAAAAAAACaBQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjwUAAAAAAACPBQAAAAAAAAAAAAAAAPC/"
				],
				[
					473,
					1,
					"insert",
					{
						"characters": "_fraction"
					},
					"CQAAAJoFAAAAAAAAmwUAAAAAAAAAAAAAmwUAAAAAAACcBQAAAAAAAAAAAACcBQAAAAAAAJ0FAAAAAAAAAAAAAJ0FAAAAAAAAngUAAAAAAAAAAAAAngUAAAAAAACfBQAAAAAAAAAAAACfBQAAAAAAAKAFAAAAAAAAAAAAAKAFAAAAAAAAoQUAAAAAAAAAAAAAoQUAAAAAAACiBQAAAAAAAAAAAACiBQAAAAAAAKMFAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmgUAAAAAAACaBQAAAAAAAAAAAAAAAPC/"
				],
				[
					475,
					1,
					"insert_snippet",
					{
						"contents": "(${0:$SELECTION})"
					},
					"AgAAAKMFAAAAAAAAowUAAAAAAAAEAAAAcGFydKMFAAAAAAAAqQUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAowUAAAAAAACnBQAAAAAAAAAAAAAAAPC/"
				],
				[
					478,
					1,
					"yapf_document",
					null,
					"",
					"AQAAAAAAAAABAAAAqgUAAAAAAACqBQAAAAAAAP///////+9/"
				],
				[
					481,
					1,
					"insert",
					{
						"characters": ".length"
					},
					"BwAAAP4FAAAAAAAA/wUAAAAAAAAAAAAA/wUAAAAAAAAABgAAAAAAAAAAAAAABgAAAAAAAAEGAAAAAAAAAAAAAAEGAAAAAAAAAgYAAAAAAAAAAAAAAgYAAAAAAAADBgAAAAAAAAAAAAADBgAAAAAAAAQGAAAAAAAAAAAAAAQGAAAAAAAABQYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/gUAAAAAAAD+BQAAAAAAAAAAAAAAAPC/"
				],
				[
					485,
					1,
					"insert",
					{
						"characters": ".position"
					},
					"CQAAAO8FAAAAAAAA8AUAAAAAAAAAAAAA8AUAAAAAAADxBQAAAAAAAAAAAADxBQAAAAAAAPIFAAAAAAAAAAAAAPIFAAAAAAAA8wUAAAAAAAAAAAAA8wUAAAAAAAD0BQAAAAAAAAAAAAD0BQAAAAAAAPUFAAAAAAAAAAAAAPUFAAAAAAAA9gUAAAAAAAAAAAAA9gUAAAAAAAD3BQAAAAAAAAAAAAD3BQAAAAAAAPgFAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7wUAAAAAAADvBQAAAAAAAAAAAAAAAPC/"
				],
				[
					488,
					1,
					"yapf_document",
					null,
					"AQAAAAAAAAAAAAAABxwAAAAAAAAHHAAAZnJvbSB0eXBpbmcgaW1wb3J0IERpY3QsIExpc3QsIE9wdGlvbmFsCmltcG9ydCByZWFweSBhcyBycHIKCiMgZnJvbSByZWFweSBpbXBvcnQgcmVhc2NyaXB0X2FwaSBhcyBSUFIKCmZyb20gLnByaW1pdGl2ZXMgaW1wb3J0ICgKICAgIEF0dGFjaG1lbnQsIENob3JkLCBFdmVudCwgTGVuZ3RoLCBQaXRjaCwgUG9zaXRpb24sIEZyYWN0dXJlZAopCgpmcm9tIHBwcmludCBpbXBvcnQgcGZvcm1hdCwgcHByaW50CgoKY2xhc3MgRXZlbnRQYWNrYWdlcjoKCiAgICBkZWYgX19pbml0X18oc2VsZiwgdm9pY2U6ICdWb2ljZScsIGtleTogUG9zaXRpb24pIC0+IE5vbmU6CiAgICAgICAgc2VsZi52b2ljZSA9IHZvaWNlCiAgICAgICAgc2VsZi5rZXkgPSBrZXkKCiAgICBkZWYgYXBwZW5kKHNlbGYsIGV2ZW50OiBFdmVudCkgLT4gTm9uZToKICAgICAgICBpZiBzZWxmLmtleSBub3QgaW4gc2VsZi52b2ljZS5ldmVudHM6CiAgICAgICAgICAgIGlmIHNlbGYua2V5LmJhcl9wb3NpdGlvbiA9PSAwOgogICAgICAgICAgICAgICAgYmFyY2hlY2sgPSBCYXJDaGVjayhzZWxmLmtleS5iYXIpCiAgICAgICAgICAgICAgICBpZiBzZWxmLmtleS5wb3NpdGlvbiAhPSAwIGFuZCBiYXJjaGVjayBub3QgaW4gZXZlbnQucHJlYW1idWxhOgogICAgICAgICAgICAgICAgICAgIHByaW50KGYnYWRkIGJhcmNoZWNrIGF0IHtzZWxmLmtleX0gdG8gdGhlIHtldmVudH0nKQogICAgICAgICAgICAgICAgICAgIGV2ZW50LnByZWFtYnVsYS5hcHBlbmQoYmFyY2hlY2spCiAgICAgICAgICAgIGlmIHNlbGYua2V5LmJhcl9lbmRfZGlzdGFuY2UgPCBldmVudC5sZW5ndGg6CiAgICAgICAgICAgICAgICByZXR1cm4gc2VsZi5zcGxpdF9hdF9iYXJsaW5lKGV2ZW50KQogICAgICAgICAgICBzZWxmLnZvaWNlLmV2ZW50c1tzZWxmLmtleV0gPSBldmVudAogICAgICAgICAgICByZXR1cm4KICAgICAgICBzZWxmLnZvaWNlLmFwcGVuZF90b19jaG9yZChzZWxmLmtleSwgZXZlbnQpCiAgICAgICAgIyByYWlzZSBOb3RJbXBsZW1lbnRlZEVycm9yKCkKCiAgICBkZWYgc3BsaXRfYXRfYmFybGluZShzZWxmLCBldmVudDogRXZlbnQpIC0+IE5vbmU6CiAgICAgICAgbGVmdCwgYXBwZW5kX3BhcnQgPSBldmVudC5zcGxpdCgKICAgICAgICAgICAgTGVuZ3RoKGZsb2F0KHNlbGYua2V5LmJhcl9lbmRfZGlzdGFuY2UpICogNCkKICAgICAgICApCiAgICAgICAgcGFydHMgPSBGcmFjdHVyZWQubm9ybWFsaXplZChzZWxmLmtleS5iYXJfZW5kX2Rpc3RhbmNlKQogICAgICAgIHByaW50KGxlZnQsIGFwcGVuZF9wYXJ0LCBwYXJ0cywgc2VwPSdcbi0gJykKICAgICAgICBmaW5hbF9ldmVudHMgPSB7fQogICAgICAgIGN1cnJlbnRfcG9zID0gc2VsZi5rZXkKICAgICAgICBmb3IgcGFydCBpbiBwYXJ0czoKICAgICAgICAgICAgbGVmdCwgcmlnaHQgPSBsZWZ0LnNwbGl0KExlbmd0aC5mcm9tX2ZyYWN0aW9uKHBhcnQpKQogICAgICAgICAgICBmaW5hbF9ldmVudHNbY3VycmVudF9wb3NdID0gbGVmdAogICAgICAgICAgICBjdXJyZW50X3Bvcy5wb3NpdGlvbiArPSBsZWZ0Lmxlbmd0aC5sZW5ndGgKICAgICAgICAgICAgbGVmdCA9IHJpZ2h0CiAgICAgICAgcHJpbnQoZmluYWxfZXZlbnRzKQoKCmNsYXNzIFZvaWNlOgoKICAgIGRlZiBfX2luaXRfXyhzZWxmLCB2b2ljZV9ucjogaW50ID0gMSkgLT4gTm9uZToKICAgICAgICBzZWxmLnZvaWNlX25yID0gdm9pY2VfbnIKICAgICAgICBzZWxmLmV2ZW50czogRGljdFtQb3NpdGlvbiwgRXZlbnRdID0ge30KCiAgICBkZWYgX19nZXRpdGVtX18oc2VsZiwga2V5OiBQb3NpdGlvbikgLT4gRXZlbnRQYWNrYWdlcjoKICAgICAgICByZXR1cm4gRXZlbnRQYWNrYWdlcihzZWxmLCBrZXkpCgogICAgZGVmIF9fc2V0aXRlbV9fKHNlbGYsIGtleTogUG9zaXRpb24sIHZhbHVlOiBFdmVudCkgLT4gTm9uZToKICAgICAgICBzZWxmLmV2ZW50c1trZXldID0gdmFsdWUKCiAgICBkZWYgX19jb250YWluc19fKHNlbGYsIGtleTogUG9zaXRpb24pIC0+IGJvb2w6CiAgICAgICAgcmV0dXJuIGtleSBpbiBzZWxmLmV2ZW50cwoKICAgIGRlZiBfX3JlcHJfXyhzZWxmKSAtPiBzdHI6CiAgICAgICAgcmV0dXJuIGYiPFZvaWNlIHtzZWxmLnZvaWNlX25yfTogXG4gICB7cGZvcm1hdChzZWxmLmV2ZW50cywzKX0+IgoKICAgIGRlZiBhcHBlbmRfdG9fY2hvcmQoc2VsZiwgcG9zaXRpb246IFBvc2l0aW9uLCBldmVudDogRXZlbnQpIC0+IE5vbmU6CiAgICAgICAgaWYgZXZlbnQucGl0Y2gubWlkaV9waXRjaCBpcyBOb25lOgogICAgICAgICAgICByZXR1cm4KICAgICAgICBjaG9yZCA9IHNlbGYuZXZlbnRzW3Bvc2l0aW9uXQogICAgICAgIGlmIG5vdCBpc2luc3RhbmNlKGNob3JkLCBDaG9yZCk6CiAgICAgICAgICAgIGNob3JkID0gY2hvcmQubWFrZV9jaG9yZCgpCiAgICAgICAgIyBwcmludCgnYXBwZW5kX3RvX2Nob3JkOicsIHBvc2l0aW9uLCBjaG9yZCwgZXZlbnQsIHNlcD0nXG4gICAgJykKICAgICAgICBpZiBjaG9yZC5sZW5ndGggPT0gZXZlbnQubGVuZ3RoOgogICAgICAgICAgICAjIHByaW50KCcgICAgbGVnaHQgYXJlIGVxdWFsLCBhcHBlbmQnKQogICAgICAgICAgICBjaG9yZC5hcHBlbmQoZXZlbnQpCiAgICAgICAgICAgIHJldHVybgogICAgICAgIGVsaWYgY2hvcmQubGVuZ3RoIDwgZXZlbnQubGVuZ3RoOgogICAgICAgICAgICBsZWZ0LCByaWdodCA9IGV2ZW50LnNwbGl0KGNob3JkLmxlbmd0aCwgdGllPVRydWUpCiAgICAgICAgICAgIGNob3JkLmFwcGVuZChsZWZ0KQogICAgICAgICAgICAjIHByaW50KCcgICAgY2hvcmQgaXMgc2hvcnRlcjonLCBjaG9yZCwgcmlnaHQsIHNlcD0nXG4nICsgJyAnICogOCkKICAgICAgICBlbHNlOiAgIyBjaG9yZC5sZW5ndGggPiBldmVudC5sZW5ndGgKICAgICAgICAgICAgbGVmdCwgcmlnaHQgPSBjaG9yZC5zcGxpdChldmVudC5sZW5ndGgsIHRpZT1UcnVlKQogICAgICAgICAgICBsZWZ0LmFwcGVuZChldmVudCkKICAgICAgICAgICAgc2VsZi5ldmVudHNbcG9zaXRpb25dID0gbGVmdAogICAgICAgICAgICAjIHByaW50KCcgICAgY2hvcmQgaXMgbG9uZ2VyOicsIGxlZnQsIHJpZ2h0LCBzZXA9J1xuJyArICcgJyAqIDgpCiAgICAgICAga2V5ID0gUG9zaXRpb24ocG9zaXRpb24ucG9zaXRpb24gKyBsZWZ0Lmxlbmd0aC5sZW5ndGgpCiAgICAgICAgc2VsZltrZXldLmFwcGVuZChyaWdodCkKCiAgICBkZWYgc29ydChzZWxmKSAtPiAnVm9pY2UnOgogICAgICAgICIiIlNvcnQgZXZlbnRzIGJ5IHRoZWlyIHBvc2l0aW9uLCBmaXhpbmcgb3ZlcmxhcHMuIiIiCiAgICAgICAgcG9zaXRpb25zID0gc29ydGVkKHNlbGYuZXZlbnRzLmtleXMoKSkKICAgICAgICBmb3IgaWR4LCBwb3MgaW4gZW51bWVyYXRlKHBvc2l0aW9ucyk6CiAgICAgICAgICAgIGV2ID0gc2VsZi5ldmVudHNbcG9zXQogICAgICAgICAgICB0cnk6CiAgICAgICAgICAgICAgICByX3BvcyA9IHBvc2l0aW9uc1tpZHggKyAxXQogICAgICAgICAgICBleGNlcHQgSW5kZXhFcnJvcjoKICAgICAgICAgICAgICAgIGJyZWFrCiAgICAgICAgICAgIGlmIHBvcyArIGV2Lmxlbmd0aCA+IHJfcG9zOgogICAgICAgICAgICAgICAgbGVmdCwgcmlnaHQgPSBldi5zcGxpdCgKICAgICAgICAgICAgICAgICAgICBMZW5ndGgoZmxvYXQocl9wb3MgLSBwb3MpICogNCksIHRpZT1UcnVlCiAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICBzZWxmLmV2ZW50c1twb3NdID0gbGVmdAogICAgICAgICAgICAgICAgc2VsZltyX3Bvc10uYXBwZW5kKHJpZ2h0KQogICAgICAgICAgICAgICAgcmV0dXJuIHNlbGYuc29ydCgpCiAgICAgICAgcmV0dXJuIHNlbGYKCiAgICBkZWYgd2l0aF9yZXN0cyhzZWxmKSAtPiAnVm9pY2UnOgogICAgICAgIG91dCA9IFZvaWNlKCkKICAgICAgICBsYXN0ID0gUG9zaXRpb24oMCkKICAgICAgICBmb3IgcG9zaXRpb24sIGV2ZW50IGluIHNvcnRlZChzZWxmLmV2ZW50cy5pdGVtcygpKToKICAgICAgICAgICAgaWYgcG9zaXRpb24gPCBsYXN0OgogICAgICAgICAgICAgICAgX2xhc3RfcG9zID0gbGlzdChvdXQuZXZlbnRzKVstMV0KICAgICAgICAgICAgICAgIHJhaXNlIFZhbHVlRXJyb3IoCiAgICAgICAgICAgICAgICAgICAgIm92ZXJsYXBwaW5nIGV2ZW50cyBmb3VuZDoge30sIHt9Ii5mb3JtYXQoCiAgICAgICAgICAgICAgICAgICAgICAgIChfbGFzdF9wb3MsIG91dC5ldmVudHNbX2xhc3RfcG9zXSksIChwb3NpdGlvbiwgZXZlbnQpCiAgICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgKQogICAgICAgICAgICBpZiBkaXN0YW5jZSA6PSBwb3NpdGlvbi5wZXJjaXplX2Rpc3RhbmNlKGxhc3QpOgogICAgICAgICAgICAgICAgbGVmdCwgYmFycywgcmlnaHQgPSBkaXN0YW5jZQogICAgICAgICAgICAgICAgcHJpbnQoZidsZWZ0PXtsZWZ0fSwgYmFycz17YmFyc30sIHJpZ2h0PXtyaWdodH0nKQogICAgICAgICAgICAgICAgaWYgbGVmdDoKICAgICAgICAgICAgICAgICAgICBvdXRbbGFzdF0uYXBwZW5kKAogICAgICAgICAgICAgICAgICAgICAgICBFdmVudChsZWZ0LCBQaXRjaCgpLCB2b2ljZV9ucj1zZWxmLnZvaWNlX25yKQogICAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgIGZvciBiYXJfbnIgaW4gcmFuZ2UoYmFycyk6CiAgICAgICAgICAgICAgICAgICAgYmFyID0gbGFzdC5iYXIgKyBiYXJfbnIKICAgICAgICAgICAgICAgICAgICBwcmludChiYXIsIGxhc3QuYmFyLCBiYXJfbnIpCiAgICAgICAgICAgICAgICAgICAgYmFyX2luZm8gPSBycHIuUHJvamVjdCgpLm1lYXN1cmVfaW5mbyhiYXIpCiAgICAgICAgICAgICAgICAgICAgYmFyX3BvcyA9IFBvc2l0aW9uKGJhcl9pbmZvWydzdGFydCddKQogICAgICAgICAgICAgICAgICAgIGJhcl9sZW5ndGggPSBMZW5ndGgoCiAgICAgICAgICAgICAgICAgICAgICAgIGJhcl9pbmZvWydlbmQnXSAtIGJhcl9pbmZvWydzdGFydCddLCBmdWxsX2Jhcj1UcnVlCiAgICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgICAgIG91dFtiYXJfcG9zXS5hcHBlbmQoCiAgICAgICAgICAgICAgICAgICAgICAgIEV2ZW50KGJhcl9sZW5ndGgsIFBpdGNoKCksIHZvaWNlX25yPXNlbGYudm9pY2VfbnIpCiAgICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgaWYgcmlnaHQ6CgogICAgICAgICAgICAgICAgICAgIG91dFtQb3NpdGlvbihwb3NpdGlvbi5wb3NpdGlvbiAtIHJpZ2h0Lmxlbmd0aCldLmFwcGVuZCgKICAgICAgICAgICAgICAgICAgICAgICAgRXZlbnQocmlnaHQsIFBpdGNoKCksIHZvaWNlX25yPXNlbGYudm9pY2VfbnIpCiAgICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICBvdXRbcG9zaXRpb25dLmFwcGVuZChldmVudCkKICAgICAgICAgICAgbGFzdCA9IFBvc2l0aW9uKHBvc2l0aW9uLnBvc2l0aW9uICsgZXZlbnQubGVuZ3RoLmxlbmd0aCkKICAgICAgICByZXR1cm4gb3V0CgoKQHJwci5pbnNpZGVfcmVhcGVyKCkKZGVmIGV2ZW50c19mcm9tX3Rha2UodGFrZTogcnByLlRha2UpIC0+IERpY3RbUG9zaXRpb24sIExpc3RbRXZlbnRdXToKICAgIGV2ZW50czogRGljdFtQb3NpdGlvbiwgTGlzdFtFdmVudF1dID0ge30KICAgIGZvciBub3RlIGluIHRha2Uubm90ZXM6CiAgICAgICAgaW5mbyA9IG5vdGUuaW5mb3MKICAgICAgICBzdGFydCA9IHRha2UucHBxX3RvX2JlYXQoaW5mb1sncHBxX3Bvc2l0aW9uJ10pCiAgICAgICAgZW5kID0gdGFrZS5wcHFfdG9fYmVhdChpbmZvWydwcHFfZW5kJ10pCiAgICAgICAgIyBwcmludChzdGFydCwgZW5kKQogICAgICAgIHBvcyA9IFBvc2l0aW9uKHN0YXJ0KQogICAgICAgIGlmIHBvcyBub3QgaW4gZXZlbnRzOgogICAgICAgICAgICBldmVudHNbcG9zXSA9IFtdCiAgICAgICAgZXZlbnRzW3Bvc10uYXBwZW5kKEV2ZW50KExlbmd0aChlbmQgLSBzdGFydCksIFBpdGNoKGluZm9bJ3BpdGNoJ10sICkpKQogICAgcmV0dXJuIGV2ZW50cwoKCmRlZiBzcGxpdF9ieV92b2ljZShldmVudHM6IERpY3RbUG9zaXRpb24sIExpc3RbRXZlbnRdXSkgLT4gRGljdFtpbnQsIFZvaWNlXToKICAgIHZvaWNlczogRGljdFtpbnQsIFZvaWNlXSA9IHt9CiAgICBmb3IgcG9zaXRpb24sIGV2ZW50X2xpc3QgaW4gZXZlbnRzLml0ZW1zKCk6CiAgICAgICAgZm9yIGV2ZW50IGluIGV2ZW50X2xpc3Q6CiAgICAgICAgICAgIGtleSA9IGV2ZW50LnZvaWNlX25yCiAgICAgICAgICAgIGlmIGtleSBub3QgaW4gdm9pY2VzOgogICAgICAgICAgICAgICAgdm9pY2VzW2tleV0gPSBWb2ljZShrZXkpCiAgICAgICAgICAgIHZvaWNlID0gdm9pY2VzW2tleV0KICAgICAgICAgICAgdm9pY2VbcG9zaXRpb25dLmFwcGVuZChldmVudCkKICAgIGZvciB2b2ljZSBpbiB2b2ljZXMudmFsdWVzKCk6CiAgICAgICAgdm9pY2Uuc29ydCgpCiAgICByZXR1cm4gdm9pY2VzCgoKY2xhc3MgQmFyQ2hlY2soQXR0YWNobWVudCk6CgogICAgZGVmIF9faW5pdF9fKHNlbGYsIGJhcl9ucjogT3B0aW9uYWxbaW50XSA9IE5vbmUpIC0+IE5vbmU6CiAgICAgICAgc2VsZi5iYXJfbnIgPSBiYXJfbnIKCiAgICBkZWYgbHlfcmVuZGVyKHNlbGYpIC0+IHN0cjoKICAgICAgICBiYXJjaGVrID0gJyB8ICcKICAgICAgICBpZiBzZWxmLmJhcl9ucjoKICAgICAgICAgICAgcmV0dXJuIGYne2JhcmNoZWt9XG5cbiUgYmFyICMge3NlbGYuYmFyX25yfVxuJwogICAgICAgIHJldHVybiBiYXJjaGVrCgogICAgZGVmIF9fZXFfXyhzZWxmLCBvdGhlcjogb2JqZWN0KSAtPiBib29sOgogICAgICAgIGlmIGlzaW5zdGFuY2Uob3RoZXIsIEJhckNoZWNrKSBhbmQgb3RoZXIuYmFyX25yID09IHNlbGYuYmFyX25yOgogICAgICAgICAgICByZXR1cm4gVHJ1ZQogICAgICAgIHJldHVybiBGYWxzZQoKCmlmIF9fbmFtZV9fID09ICdfX21haW5fXyc6CiAgICBldmVudHMgPSBldmVudHNfZnJvbV90YWtlKHJwci5Qcm9qZWN0KCkuc2VsZWN0ZWRfaXRlbXNbMF0uYWN0aXZlX3Rha2UpCiAgICBwcHJpbnQoZXZlbnRzKQogICAgcHJpbnQoJ1xuLS0tLS0tLS0tLS0tLS0tLS0tLVxuJykKICAgIHZvaWNlID0gc3BsaXRfYnlfdm9pY2UoZXZlbnRzKVsxXQogICAgcHByaW50KHZvaWNlKQogICAgcHJpbnQoJ1xuLS0tLS0tLS0tLS0tLS0tLS0tLVxuJykKICAgIHZvaWNlID0gdm9pY2Uud2l0aF9yZXN0cygpCiAgICBwcHJpbnQodm9pY2UpCiAgICBwcmludCgnXG4tLS0tLS0tLS0tLS0tLS0tLS0tXG4nKQo",
					"AQAAAAAAAAABAAAADgYAAAAAAAAOBgAAAAAAAP///////+9/"
				],
				[
					492,
					1,
					"right_delete",
					null,
					"AQAAAO8FAAAAAAAA7wUAAAAAAAALAAAALnBvc2l0aW9uICs",
					"AQAAAAAAAAABAAAA7wUAAAAAAAD6BQAAAAAAAAAAAAAAAPC/"
				],
				[
					493,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAO8FAAAAAAAA8AUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7wUAAAAAAADvBQAAAAAAAAAAAAAAAPC/"
				],
				[
					495,
					1,
					"insert",
					{
						"characters": "Position"
					},
					"CAAAAPIFAAAAAAAA8wUAAAAAAAAAAAAA8wUAAAAAAAD0BQAAAAAAAAAAAAD0BQAAAAAAAPUFAAAAAAAAAAAAAPUFAAAAAAAA9gUAAAAAAAAAAAAA9gUAAAAAAAD3BQAAAAAAAAAAAAD3BQAAAAAAAPgFAAAAAAAAAAAAAPgFAAAAAAAA+QUAAAAAAAAAAAAA+QUAAAAAAAD6BQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8gUAAAAAAADyBQAAAAAAAAAAAAAAAPC/"
				],
				[
					497,
					1,
					"insert_snippet",
					{
						"contents": "(${0:$SELECTION})"
					},
					"AgAAAPoFAAAAAAAA+gUAAAAAAAASAAAAbGVmdC5sZW5ndGgubGVuZ3Ro+gUAAAAAAAAOBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+gUAAAAAAAAMBgAAAAAAAP///////+9/"
				],
				[
					501,
					1,
					"insert",
					{
						"characters": "current_pos."
					},
					"DQAAAPsFAAAAAAAA/AUAAAAAAAAAAAAA/AUAAAAAAAD8BQAAAAAAABIAAABsZWZ0Lmxlbmd0aC5sZW5ndGj8BQAAAAAAAP0FAAAAAAAAAAAAAP0FAAAAAAAA/gUAAAAAAAAAAAAA/gUAAAAAAAD/BQAAAAAAAAAAAAD/BQAAAAAAAAAGAAAAAAAAAAAAAAAGAAAAAAAAAQYAAAAAAAAAAAAAAQYAAAAAAAACBgAAAAAAAAAAAAACBgAAAAAAAAMGAAAAAAAAAAAAAAMGAAAAAAAABAYAAAAAAAAAAAAABAYAAAAAAAAFBgAAAAAAAAAAAAAFBgAAAAAAAAYGAAAAAAAAAAAAAAYGAAAAAAAABwYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+wUAAAAAAAANBgAAAAAAAAAAAAAAAPC/"
				],
				[
					502,
					1,
					"insert",
					{
						"characters": "position"
					},
					"CAAAAAcGAAAAAAAACAYAAAAAAAAAAAAACAYAAAAAAAAJBgAAAAAAAAAAAAAJBgAAAAAAAAoGAAAAAAAAAAAAAAoGAAAAAAAACwYAAAAAAAAAAAAACwYAAAAAAAAMBgAAAAAAAAAAAAAMBgAAAAAAAA0GAAAAAAAAAAAAAA0GAAAAAAAADgYAAAAAAAAAAAAADgYAAAAAAAAPBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABwYAAAAAAAAHBgAAAAAAAAAAAAAAAPC/"
				],
				[
					503,
					1,
					"insert",
					{
						"characters": " +"
					},
					"AgAAAA8GAAAAAAAAEAYAAAAAAAAAAAAAEAYAAAAAAAARBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADwYAAAAAAAAPBgAAAAAAAAAAAAAAAPC/"
				],
				[
					504,
					1,
					"insert",
					{
						"characters": " length"
					},
					"BwAAABEGAAAAAAAAEgYAAAAAAAAAAAAAEgYAAAAAAAATBgAAAAAAAAAAAAATBgAAAAAAABQGAAAAAAAAAAAAABQGAAAAAAAAFQYAAAAAAAAAAAAAFQYAAAAAAAAWBgAAAAAAAAAAAAAWBgAAAAAAABcGAAAAAAAAAAAAABcGAAAAAAAAGAYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEQYAAAAAAAARBgAAAAAAAAAAAAAAAPC/"
				],
				[
					506,
					1,
					"left_delete",
					null,
					"AQAAABIGAAAAAAAAEgYAAAAAAAAGAAAAbGVuZ3Ro",
					"AQAAAAAAAAABAAAAGAYAAAAAAAASBgAAAAAAAAAAAAAAAPC/"
				],
				[
					507,
					1,
					"insert",
					{
						"characters": "left.length.l"
					},
					"DQAAABIGAAAAAAAAEwYAAAAAAAAAAAAAEwYAAAAAAAAUBgAAAAAAAAAAAAAUBgAAAAAAABUGAAAAAAAAAAAAABUGAAAAAAAAFgYAAAAAAAAAAAAAFgYAAAAAAAAXBgAAAAAAAAAAAAAXBgAAAAAAABgGAAAAAAAAAAAAABgGAAAAAAAAGQYAAAAAAAAAAAAAGQYAAAAAAAAaBgAAAAAAAAAAAAAaBgAAAAAAABsGAAAAAAAAAAAAABsGAAAAAAAAHAYAAAAAAAAAAAAAHAYAAAAAAAAdBgAAAAAAAAAAAAAdBgAAAAAAAB4GAAAAAAAAAAAAAB4GAAAAAAAAHwYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEgYAAAAAAAASBgAAAAAAAAAAAAAAAPC/"
				],
				[
					508,
					1,
					"insert",
					{
						"characters": "ength"
					},
					"BQAAAB8GAAAAAAAAIAYAAAAAAAAAAAAAIAYAAAAAAAAhBgAAAAAAAAAAAAAhBgAAAAAAACIGAAAAAAAAAAAAACIGAAAAAAAAIwYAAAAAAAAAAAAAIwYAAAAAAAAkBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHwYAAAAAAAAfBgAAAAAAAAAAAAAAAPC/"
				],
				[
					510,
					1,
					"yapf_document",
					null,
					"",
					"AQAAAAAAAAABAAAAJAYAAAAAAAAkBgAAAAAAAAAAAAAAAPC/"
				],
				[
					513,
					1,
					"insert",
					{
						"characters": "p"
					},
					"AQAAAEcGAAAAAAAASAYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARwYAAAAAAABHBgAAAAAAAAAAAAAAAFBA"
				],
				[
					515,
					1,
					"yapf_document",
					null,
					"",
					"AQAAAAAAAAABAAAASAYAAAAAAABIBgAAAAAAAAAAAAAAAPC/"
				],
				[
					519,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAD4GAAAAAAAAPwYAAAAAAAAAAAAAPwYAAAAAAABLBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPgYAAAAAAAA+BgAAAAAAAAAAAAAAAPC/"
				],
				[
					520,
					1,
					"left_delete",
					null,
					"AQAAAEcGAAAAAAAARwYAAAAAAAAEAAAAICAgIA",
					"AQAAAAAAAAABAAAASwYAAAAAAABLBgAAAAAAAAAAAAAAAPC/"
				],
				[
					521,
					1,
					"insert",
					{
						"characters": "final_"
					},
					"BgAAAEcGAAAAAAAASAYAAAAAAAAAAAAASAYAAAAAAABJBgAAAAAAAAAAAABJBgAAAAAAAEoGAAAAAAAAAAAAAEoGAAAAAAAASwYAAAAAAAAAAAAASwYAAAAAAABMBgAAAAAAAAAAAABMBgAAAAAAAE0GAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARwYAAAAAAABHBgAAAAAAAAAAAAAAAPC/"
				],
				[
					523,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion_item {\"session_name\":\"LSP-pyright\",\"item\":{\"label\":\"final_events\",\"data\":{\"workspacePath\":\"/home/levitanus/gits/ReaScore\",\"filePath\":\"/media/levitanus/RAID/gits/ReaScore/rea_score/dom.py\",\"symbolLabel\":\"final_events\",\"position\":{\"character\":14,\"line\":45}},\"kind\":6,\"sortText\":\"05.0001.final_events\"}}",
						"format": "command",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "final_events"
					},
					"AgAAAEcGAAAAAAAARwYAAAAAAAAGAAAAZmluYWxfRwYAAAAAAABTBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATQYAAAAAAABNBgAAAAAAAAAAAAAAAPC/"
				],
				[
					524,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAAFMGAAAAAAAAVQYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUwYAAAAAAABTBgAAAAAAAAAAAAAAAPC/"
				],
				[
					525,
					1,
					"insert",
					{
						"characters": "curr"
					},
					"BAAAAFQGAAAAAAAAVQYAAAAAAAAAAAAAVQYAAAAAAABWBgAAAAAAAAAAAABWBgAAAAAAAFcGAAAAAAAAAAAAAFcGAAAAAAAAWAYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVAYAAAAAAABUBgAAAAAAAAAAAAAAAPC/"
				],
				[
					528,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion_item {\"session_name\":\"LSP-pyright\",\"item\":{\"label\":\"current_pos\",\"data\":{\"workspacePath\":\"/home/levitanus/gits/ReaScore\",\"filePath\":\"/media/levitanus/RAID/gits/ReaScore/rea_score/dom.py\",\"symbolLabel\":\"current_pos\",\"position\":{\"character\":25,\"line\":45}},\"kind\":6,\"sortText\":\"09.9999.current_pos\"}}",
						"format": "command",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "current_pos"
					},
					"AgAAAFQGAAAAAAAAVAYAAAAAAAAEAAAAY3VyclQGAAAAAAAAXwYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWAYAAAAAAABYBgAAAAAAAAAAAAAAAPC/"
				],
				[
					530,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAGAGAAAAAAAAYQYAAAAAAAAAAAAAYQYAAAAAAABiBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYAYAAAAAAABgBgAAAAAAAP///////+9/"
				],
				[
					531,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAGIGAAAAAAAAYwYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYgYAAAAAAABiBgAAAAAAAAAAAAAAAPC/"
				],
				[
					534,
					1,
					"insert",
					{
						"characters": "appen"
					},
					"BQAAAGMGAAAAAAAAZAYAAAAAAAAAAAAAZAYAAAAAAABlBgAAAAAAAAAAAABlBgAAAAAAAGYGAAAAAAAAAAAAAGYGAAAAAAAAZwYAAAAAAAAAAAAAZwYAAAAAAABoBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYwYAAAAAAABjBgAAAAAAAP///////+9/"
				],
				[
					539,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion_item {\"session_name\":\"LSP-pyright\",\"item\":{\"label\":\"append_part\",\"data\":{\"workspacePath\":\"/home/levitanus/gits/ReaScore\",\"filePath\":\"/media/levitanus/RAID/gits/ReaScore/rea_score/dom.py\",\"symbolLabel\":\"append_part\",\"position\":{\"character\":41,\"line\":45}},\"kind\":6,\"sortText\":\"09.9999.append_part\"}}",
						"format": "command",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "append_part"
					},
					"AgAAAGMGAAAAAAAAYwYAAAAAAAAFAAAAYXBwZW5jBgAAAAAAAG4GAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAaAYAAAAAAABoBgAAAAAAAAAAAAAAAPC/"
				],
				[
					541,
					1,
					"yapf_document",
					null,
					"",
					"AQAAAAAAAAABAAAAbgYAAAAAAABuBgAAAAAAAAAAAAAAAPC/"
				],
				[
					544,
					1,
					"insert",
					{
						"characters": "\nfor"
					},
					"BQAAAIsGAAAAAAAAjAYAAAAAAAAAAAAAjAYAAAAAAACUBgAAAAAAAAAAAACUBgAAAAAAAJUGAAAAAAAAAAAAAJUGAAAAAAAAlgYAAAAAAAAAAAAAlgYAAAAAAACXBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiwYAAAAAAACLBgAAAAAAAAAAAAAAAPC/"
				],
				[
					545,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAJcGAAAAAAAAmAYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlwYAAAAAAACXBgAAAAAAAAAAAAAAAPC/"
				],
				[
					546,
					1,
					"insert",
					{
						"characters": "event"
					},
					"BQAAAJgGAAAAAAAAmQYAAAAAAAAAAAAAmQYAAAAAAACaBgAAAAAAAAAAAACaBgAAAAAAAJsGAAAAAAAAAAAAAJsGAAAAAAAAnAYAAAAAAAAAAAAAnAYAAAAAAACdBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmAYAAAAAAACYBgAAAAAAAAAAAAAAAPC/"
				],
				[
					547,
					1,
					"insert",
					{
						"characters": " in"
					},
					"AwAAAJ0GAAAAAAAAngYAAAAAAAAAAAAAngYAAAAAAACfBgAAAAAAAAAAAACfBgAAAAAAAKAGAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnQYAAAAAAACdBgAAAAAAAAAAAAAAAPC/"
				],
				[
					548,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAKAGAAAAAAAAoQYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAoAYAAAAAAACgBgAAAAAAAAAAAAAAAPC/"
				],
				[
					549,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAKEGAAAAAAAAogYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAoQYAAAAAAAChBgAAAAAAAAAAAAAAAPC/"
				],
				[
					550,
					1,
					"left_delete",
					null,
					"AQAAAKEGAAAAAAAAoQYAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAogYAAAAAAACiBgAAAAAAAAAAAAAAAPC/"
				],
				[
					552,
					1,
					"insert",
					{
						"characters": "pos,"
					},
					"BAAAAJgGAAAAAAAAmQYAAAAAAAAAAAAAmQYAAAAAAACaBgAAAAAAAAAAAACaBgAAAAAAAJsGAAAAAAAAAAAAAJsGAAAAAAAAnAYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmAYAAAAAAACYBgAAAAAAAAAAAAAAAPC/"
				],
				[
					553,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAJwGAAAAAAAAnQYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnAYAAAAAAACcBgAAAAAAAAAAAAAAAPC/"
				],
				[
					562,
					1,
					"insert",
					{
						"characters": "final"
					},
					"BQAAAKYGAAAAAAAApwYAAAAAAAAAAAAApwYAAAAAAACoBgAAAAAAAAAAAACoBgAAAAAAAKkGAAAAAAAAAAAAAKkGAAAAAAAAqgYAAAAAAAAAAAAAqgYAAAAAAACrBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApgYAAAAAAACmBgAAAAAAAAAAAAAAAPC/"
				],
				[
					567,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion_item {\"session_name\":\"LSP-pyright\",\"item\":{\"label\":\"final_events\",\"data\":{\"workspacePath\":\"/home/levitanus/gits/ReaScore\",\"filePath\":\"/media/levitanus/RAID/gits/ReaScore/rea_score/dom.py\",\"symbolLabel\":\"final_events\",\"position\":{\"character\":31,\"line\":47}},\"kind\":6,\"sortText\":\"05.0002.final_events\"}}",
						"format": "command",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "final_events"
					},
					"AgAAAKYGAAAAAAAApgYAAAAAAAAFAAAAZmluYWymBgAAAAAAALIGAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqwYAAAAAAACrBgAAAAAAAAAAAAAAAPC/"
				],
				[
					568,
					1,
					"insert",
					{
						"characters": ".items"
					},
					"BgAAALIGAAAAAAAAswYAAAAAAAAAAAAAswYAAAAAAAC0BgAAAAAAAAAAAAC0BgAAAAAAALUGAAAAAAAAAAAAALUGAAAAAAAAtgYAAAAAAAAAAAAAtgYAAAAAAAC3BgAAAAAAAAAAAAC3BgAAAAAAALgGAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsgYAAAAAAACyBgAAAAAAAAAAAAAAAPC/"
				],
				[
					569,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAALgGAAAAAAAAugYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuAYAAAAAAAC4BgAAAAAAAAAAAAAAAPC/"
				],
				[
					571,
					1,
					"insert",
					{
						"characters": ":"
					},
					"AQAAALoGAAAAAAAAuwYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAugYAAAAAAAC6BgAAAAAAAP///////+9/"
				],
				[
					572,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AwAAALsGAAAAAAAAvAYAAAAAAAAAAAAAvAYAAAAAAADEBgAAAAAAAAAAAADEBgAAAAAAAMgGAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuwYAAAAAAAC7BgAAAAAAAAAAAAAAAPC/"
				],
				[
					573,
					1,
					"insert",
					{
						"characters": "self.voice.app"
					},
					"DgAAAMgGAAAAAAAAyQYAAAAAAAAAAAAAyQYAAAAAAADKBgAAAAAAAAAAAADKBgAAAAAAAMsGAAAAAAAAAAAAAMsGAAAAAAAAzAYAAAAAAAAAAAAAzAYAAAAAAADNBgAAAAAAAAAAAADNBgAAAAAAAM4GAAAAAAAAAAAAAM4GAAAAAAAAzwYAAAAAAAAAAAAAzwYAAAAAAADQBgAAAAAAAAAAAADQBgAAAAAAANEGAAAAAAAAAAAAANEGAAAAAAAA0gYAAAAAAAAAAAAA0gYAAAAAAADTBgAAAAAAAAAAAADTBgAAAAAAANQGAAAAAAAAAAAAANQGAAAAAAAA1QYAAAAAAAAAAAAA1QYAAAAAAADWBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAyAYAAAAAAADIBgAAAAAAAAAAAAAAAPC/"
				],
				[
					574,
					1,
					"insert",
					{
						"characters": "end"
					},
					"AwAAANYGAAAAAAAA1wYAAAAAAAAAAAAA1wYAAAAAAADYBgAAAAAAAAAAAADYBgAAAAAAANkGAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1gYAAAAAAADWBgAAAAAAAAAAAAAAAPC/"
				],
				[
					575,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAANkGAAAAAAAA2wYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2QYAAAAAAADZBgAAAAAAAAAAAAAAAPC/"
				],
				[
					580,
					1,
					"insert",
					{
						"characters": "[]"
					},
					"AgAAANIGAAAAAAAA0wYAAAAAAAAAAAAA0wYAAAAAAADUBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0gYAAAAAAADSBgAAAAAAAAAAAAAAAPC/"
				],
				[
					582,
					1,
					"insert",
					{
						"characters": "pos"
					},
					"AwAAANMGAAAAAAAA1AYAAAAAAAAAAAAA1AYAAAAAAADVBgAAAAAAAAAAAADVBgAAAAAAANYGAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0wYAAAAAAADTBgAAAAAAAAAAAAAAAPC/"
				],
				[
					585,
					1,
					"insert",
					{
						"characters": "event"
					},
					"BQAAAN8GAAAAAAAA4AYAAAAAAAAAAAAA4AYAAAAAAADhBgAAAAAAAAAAAADhBgAAAAAAAOIGAAAAAAAAAAAAAOIGAAAAAAAA4wYAAAAAAAAAAAAA4wYAAAAAAADkBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3wYAAAAAAADfBgAAAAAAAAAAAAAAAPC/"
				],
				[
					588,
					1,
					"yapf_document",
					null,
					"",
					"AQAAAAAAAAABAAAA5QYAAAAAAADlBgAAAAAAAP///////+9/"
				],
				[
					597,
					1,
					"toggle_comment",
					{
						"block": false
					},
					"AwAAAIwCAAAAAAAAjgIAAAAAAAAAAAAA7AQAAAAAAADuBAAAAAAAAAAAAAB7BgAAAAAAAH0GAAAAAAAAAAAAAA",
					"AQAAAAAAAAADAAAAvwIAAAAAAAC/AgAAAAAAAAAAAAAAAPC/FQUAAAAAAAAVBQAAAAAAAAAAAAAAAPC/iwYAAAAAAACLBgAAAAAAAAAAAAAAAPC/"
				],
				[
					599,
					1,
					"yapf_document",
					null,
					"",
					"AQAAAAAAAAADAAAAwQIAAAAAAADBAgAAAAAAAAAAAAAAAPC/GQUAAAAAAAAZBQAAAAAAAAAAAAAAAPC/kQYAAAAAAACRBgAAAAAAAAAAAAAAAPC/"
				],
				[
					611,
					1,
					"insert",
					{
						"characters": ",ti"
					},
					"BgAAAK0FAAAAAAAArgUAAAAAAAAAAAAAmQQAAAAAAACaBAAAAAAAAAAAAACvBQAAAAAAALAFAAAAAAAAAAAAAJoEAAAAAAAAmwQAAAAAAAAAAAAAsQUAAAAAAACyBQAAAAAAAAAAAACbBAAAAAAAAJwEAAAAAAAAAAAAAA",
					"AQAAAAAAAAACAAAAmQQAAAAAAACZBAAAAAAAAAAAAAAAAPC/rQUAAAAAAACtBQAAAAAAAAAAAAAAAPC/"
				],
				[
					613,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion_item {\"session_name\":\"LSP-pyright\",\"item\":{\"label\":\"tie=\",\"data\":{\"workspacePath\":\"/home/levitanus/gits/ReaScore\",\"filePath\":\"/media/levitanus/RAID/gits/ReaScore/rea_score/dom.py\",\"position\":{\"character\":58,\"line\":34}},\"kind\":6,\"sortText\":\"04.9999.tie\"}}",
						"format": "command",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "tie="
					},
					"BAAAALEFAAAAAAAAsQUAAAAAAAACAAAAdGmaBAAAAAAAAJoEAAAAAAAAAgAAAHRprwUAAAAAAACzBQAAAAAAAAAAAACaBAAAAAAAAJ4EAAAAAAAAAAAAAA",
					"AQAAAAAAAAACAAAAnAQAAAAAAACcBAAAAAAAAAAAAAAAAPC/swUAAAAAAACzBQAAAAAAAAAAAAAAAPC/"
				],
				[
					614,
					1,
					"insert",
					{
						"characters": "True"
					},
					"CAAAALcFAAAAAAAAuAUAAAAAAAAAAAAAngQAAAAAAACfBAAAAAAAAAAAAAC5BQAAAAAAALoFAAAAAAAAAAAAAJ8EAAAAAAAAoAQAAAAAAAAAAAAAuwUAAAAAAAC8BQAAAAAAAAAAAACgBAAAAAAAAKEEAAAAAAAAAAAAAL0FAAAAAAAAvgUAAAAAAAAAAAAAoQQAAAAAAACiBAAAAAAAAAAAAAA",
					"AQAAAAAAAAACAAAAngQAAAAAAACeBAAAAAAAAAAAAAAAAPC/twUAAAAAAAC3BQAAAAAAAAAAAAAAAPC/"
				],
				[
					616,
					1,
					"yapf_document",
					null,
					"",
					"AQAAAAAAAAACAAAAogQAAAAAAACiBAAAAAAAAAAAAAAAAPC/vwUAAAAAAAC/BQAAAAAAAAAAAAAAAPC/"
				],
				[
					620,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"BQAAAG8bAAAAAAAAcBsAAAAAAAAAAAAAcBsAAAAAAAB4GwAAAAAAAAAAAAB4GwAAAAAAAHkbAAAAAAAAAAAAAHkbAAAAAAAAgRsAAAAAAAAAAAAAcBsAAAAAAABwGwAAAAAAAAgAAAAgICAgICAgIA",
					"AQAAAAAAAAABAAAAbxsAAAAAAABvGwAAAAAAAAAAAAAAAGdA"
				],
				[
					621,
					1,
					"left_delete",
					null,
					"AQAAAHUbAAAAAAAAdRsAAAAAAAAEAAAAICAgIA",
					"AQAAAAAAAAABAAAAeRsAAAAAAAB5GwAAAAAAAAAAAAAAAPC/"
				],
				[
					622,
					1,
					"insert",
					{
						"characters": "def"
					},
					"AwAAAHUbAAAAAAAAdhsAAAAAAAAAAAAAdhsAAAAAAAB3GwAAAAAAAAAAAAB3GwAAAAAAAHgbAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdRsAAAAAAAB1GwAAAAAAAAAAAAAAAPC/"
				],
				[
					623,
					1,
					"insert",
					{
						"characters": " __repr__"
					},
					"CQAAAHgbAAAAAAAAeRsAAAAAAAAAAAAAeRsAAAAAAAB6GwAAAAAAAAAAAAB6GwAAAAAAAHsbAAAAAAAAAAAAAHsbAAAAAAAAfBsAAAAAAAAAAAAAfBsAAAAAAAB9GwAAAAAAAAAAAAB9GwAAAAAAAH4bAAAAAAAAAAAAAH4bAAAAAAAAfxsAAAAAAAAAAAAAfxsAAAAAAACAGwAAAAAAAAAAAACAGwAAAAAAAIEbAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAeBsAAAAAAAB4GwAAAAAAAAAAAAAAAPC/"
				],
				[
					624,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAIEbAAAAAAAAgxsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAgRsAAAAAAACBGwAAAAAAAAAAAAAAAPC/"
				],
				[
					625,
					1,
					"insert",
					{
						"characters": "se;"
					},
					"AwAAAIIbAAAAAAAAgxsAAAAAAAAAAAAAgxsAAAAAAACEGwAAAAAAAAAAAACEGwAAAAAAAIUbAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAghsAAAAAAACCGwAAAAAAAAAAAAAAAPC/"
				],
				[
					626,
					1,
					"left_delete",
					null,
					"AQAAAIQbAAAAAAAAhBsAAAAAAAABAAAAOw",
					"AQAAAAAAAAABAAAAhRsAAAAAAACFGwAAAAAAAAAAAAAAAPC/"
				],
				[
					627,
					1,
					"insert",
					{
						"characters": "lf"
					},
					"AgAAAIQbAAAAAAAAhRsAAAAAAAAAAAAAhRsAAAAAAACGGwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhBsAAAAAAACEGwAAAAAAAAAAAAAAAPC/"
				],
				[
					628,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAIYbAAAAAAAAhxsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhhsAAAAAAACGGwAAAAAAAAAAAAAAAPC/"
				],
				[
					630,
					2,
					"left_delete",
					null,
					"AgAAAIcbAAAAAAAAhxsAAAAAAAABAAAAKYYbAAAAAAAAhhsAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAiBsAAAAAAACIGwAAAAAAAP///////+9/"
				],
				[
					631,
					1,
					"insert",
					{
						"characters": ")-<"
					},
					"AwAAAIYbAAAAAAAAhxsAAAAAAAAAAAAAhxsAAAAAAACIGwAAAAAAAAAAAACIGwAAAAAAAIkbAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhhsAAAAAAACGGwAAAAAAAAAAAAAAAPC/"
				],
				[
					632,
					1,
					"left_delete",
					null,
					"AQAAAIgbAAAAAAAAiBsAAAAAAAABAAAAPA",
					"AQAAAAAAAAABAAAAiRsAAAAAAACJGwAAAAAAAAAAAAAAAPC/"
				],
				[
					633,
					1,
					"insert",
					{
						"characters": ">str:"
					},
					"BQAAAIgbAAAAAAAAiRsAAAAAAAAAAAAAiRsAAAAAAACKGwAAAAAAAAAAAACKGwAAAAAAAIsbAAAAAAAAAAAAAIsbAAAAAAAAjBsAAAAAAAAAAAAAjBsAAAAAAACNGwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiBsAAAAAAACIGwAAAAAAAAAAAAAAAPC/"
				],
				[
					634,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AwAAAI0bAAAAAAAAjhsAAAAAAAAAAAAAjhsAAAAAAACSGwAAAAAAAAAAAACSGwAAAAAAAJYbAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjRsAAAAAAACNGwAAAAAAAAAAAAAAAPC/"
				],
				[
					635,
					1,
					"insert",
					{
						"characters": "return"
					},
					"BgAAAJYbAAAAAAAAlxsAAAAAAAAAAAAAlxsAAAAAAACYGwAAAAAAAAAAAACYGwAAAAAAAJkbAAAAAAAAAAAAAJkbAAAAAAAAmhsAAAAAAAAAAAAAmhsAAAAAAACbGwAAAAAAAAAAAACbGwAAAAAAAJwbAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlhsAAAAAAACWGwAAAAAAAAAAAAAAAPC/"
				],
				[
					636,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAJwbAAAAAAAAnRsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnBsAAAAAAACcGwAAAAAAAAAAAAAAAPC/"
				],
				[
					637,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAAJ0bAAAAAAAAnxsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnRsAAAAAAACdGwAAAAAAAAAAAAAAAPC/"
				],
				[
					638,
					1,
					"insert",
					{
						"characters": "<>"
					},
					"AgAAAJ4bAAAAAAAAnxsAAAAAAAAAAAAAnxsAAAAAAACgGwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnhsAAAAAAACeGwAAAAAAAAAAAAAAAPC/"
				],
				[
					640,
					1,
					"insert",
					{
						"characters": "Barcke"
					},
					"BgAAAJ8bAAAAAAAAoBsAAAAAAAAAAAAAoBsAAAAAAAChGwAAAAAAAAAAAAChGwAAAAAAAKIbAAAAAAAAAAAAAKIbAAAAAAAAoxsAAAAAAAAAAAAAoxsAAAAAAACkGwAAAAAAAAAAAACkGwAAAAAAAKUbAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnxsAAAAAAACfGwAAAAAAAAAAAAAAAPC/"
				],
				[
					641,
					2,
					"left_delete",
					null,
					"AgAAAKQbAAAAAAAApBsAAAAAAAABAAAAZaMbAAAAAAAAoxsAAAAAAAABAAAAaw",
					"AQAAAAAAAAABAAAApRsAAAAAAAClGwAAAAAAAAAAAAAAAPC/"
				],
				[
					642,
					1,
					"insert",
					{
						"characters": "heck"
					},
					"BAAAAKMbAAAAAAAApBsAAAAAAAAAAAAApBsAAAAAAAClGwAAAAAAAAAAAAClGwAAAAAAAKYbAAAAAAAAAAAAAKYbAAAAAAAApxsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAoxsAAAAAAACjGwAAAAAAAAAAAAAAAPC/"
				],
				[
					644,
					1,
					"left_delete",
					null,
					"AQAAAKIbAAAAAAAAohsAAAAAAAABAAAAYw",
					"AQAAAAAAAAABAAAAoxsAAAAAAACjGwAAAAAAAAAAAAAAAPC/"
				],
				[
					645,
					1,
					"insert",
					{
						"characters": "C"
					},
					"AQAAAKIbAAAAAAAAoxsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAohsAAAAAAACiGwAAAAAAAAAAAAAAAPC/"
				],
				[
					648,
					1,
					"insert",
					{
						"characters": " at"
					},
					"AwAAAKcbAAAAAAAAqBsAAAAAAAAAAAAAqBsAAAAAAACpGwAAAAAAAAAAAACpGwAAAAAAAKobAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApxsAAAAAAACnGwAAAAAAAAAAAAAAAPC/"
				],
				[
					649,
					1,
					"insert",
					{
						"characters": " bar"
					},
					"BAAAAKobAAAAAAAAqxsAAAAAAAAAAAAAqxsAAAAAAACsGwAAAAAAAAAAAACsGwAAAAAAAK0bAAAAAAAAAAAAAK0bAAAAAAAArhsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqhsAAAAAAACqGwAAAAAAAAAAAAAAAPC/"
				],
				[
					650,
					1,
					"insert",
					{
						"characters": " {}"
					},
					"AwAAAK4bAAAAAAAArxsAAAAAAAAAAAAArxsAAAAAAACwGwAAAAAAAAAAAACwGwAAAAAAALEbAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArhsAAAAAAACuGwAAAAAAAAAAAAAAAPC/"
				],
				[
					652,
					1,
					"insert",
					{
						"characters": "f"
					},
					"AQAAAJ0bAAAAAAAAnhsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnRsAAAAAAACdGwAAAAAAAAAAAAAAAPC/"
				],
				[
					655,
					1,
					"insert",
					{
						"characters": "self.bar_nr"
					},
					"CwAAALEbAAAAAAAAshsAAAAAAAAAAAAAshsAAAAAAACzGwAAAAAAAAAAAACzGwAAAAAAALQbAAAAAAAAAAAAALQbAAAAAAAAtRsAAAAAAAAAAAAAtRsAAAAAAAC2GwAAAAAAAAAAAAC2GwAAAAAAALcbAAAAAAAAAAAAALcbAAAAAAAAuBsAAAAAAAAAAAAAuBsAAAAAAAC5GwAAAAAAAAAAAAC5GwAAAAAAALobAAAAAAAAAAAAALobAAAAAAAAuxsAAAAAAAAAAAAAuxsAAAAAAAC8GwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsRsAAAAAAACxGwAAAAAAAAAAAAAAAPC/"
				],
				[
					658,
					1,
					"yapf_document",
					null,
					"",
					"AQAAAAAAAAABAAAAvxsAAAAAAAC/GwAAAAAAAP///////+9/"
				]
			]
		},
		{
			"file": "/media/levitanus/RAID/gits/ReaScore/rea_score/primitives.py",
			"settings":
			{
				"buffer_size": 12851,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					351,
					1,
					"insert",
					{
						"characters": "float"
					},
					"DAAAAEMTAAAAAAAARBMAAAAAAAAAAAAARBMAAAAAAABEEwAAAAAAAAgAAABGcmFjdGlvbjkTAAAAAAAAOhMAAAAAAAAAAAAAOhMAAAAAAAA6EwAAAAAAAAgAAABGcmFjdGlvbj0TAAAAAAAAPhMAAAAAAAAAAAAAOhMAAAAAAAA7EwAAAAAAAAAAAAA/EwAAAAAAAEATAAAAAAAAAAAAADsTAAAAAAAAPBMAAAAAAAAAAAAAQRMAAAAAAABCEwAAAAAAAAAAAAA8EwAAAAAAAD0TAAAAAAAAAAAAAEMTAAAAAAAARBMAAAAAAAAAAAAAPRMAAAAAAAA+EwAAAAAAAAAAAAA",
					"AQAAAAAAAAACAAAAORMAAAAAAABBEwAAAAAAAAAAAAAAAPC/QxMAAAAAAABLEwAAAAAAAAAAAAAAAPC/"
				],
				[
					353,
					1,
					"yapf_document",
					null,
					"",
					"AQAAAAAAAAACAAAAPhMAAAAAAAA+EwAAAAAAAAAAAAAAAPC/RRMAAAAAAABFEwAAAAAAAAAAAAAAAPC/"
				],
				[
					362,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"BQAAAPgbAAAAAAAA+RsAAAAAAAAAAAAA+RsAAAAAAAABHAAAAAAAAAAAAAABHAAAAAAAAAIcAAAAAAAAAAAAAAIcAAAAAAAAChwAAAAAAAAAAAAA+RsAAAAAAAD5GwAAAAAAAAgAAAAgICAgICAgIA",
					"AQAAAAAAAAABAAAA+BsAAAAAAAD4GwAAAAAAAAAAAAAAAPC/"
				],
				[
					363,
					1,
					"left_delete",
					null,
					"AQAAAP4bAAAAAAAA/hsAAAAAAAAEAAAAICAgIA",
					"AQAAAAAAAAABAAAAAhwAAAAAAAACHAAAAAAAAAAAAAAAAPC/"
				],
				[
					364,
					1,
					"insert",
					{
						"characters": "def"
					},
					"AwAAAP4bAAAAAAAA/xsAAAAAAAAAAAAA/xsAAAAAAAAAHAAAAAAAAAAAAAAAHAAAAAAAAAEcAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/hsAAAAAAAD+GwAAAAAAAAAAAAAAAPC/"
				],
				[
					365,
					1,
					"insert",
					{
						"characters": " from_fract"
					},
					"CwAAAAEcAAAAAAAAAhwAAAAAAAAAAAAAAhwAAAAAAAADHAAAAAAAAAAAAAADHAAAAAAAAAQcAAAAAAAAAAAAAAQcAAAAAAAABRwAAAAAAAAAAAAABRwAAAAAAAAGHAAAAAAAAAAAAAAGHAAAAAAAAAccAAAAAAAAAAAAAAccAAAAAAAACBwAAAAAAAAAAAAACBwAAAAAAAAJHAAAAAAAAAAAAAAJHAAAAAAAAAocAAAAAAAAAAAAAAocAAAAAAAACxwAAAAAAAAAAAAACxwAAAAAAAAMHAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAARwAAAAAAAABHAAAAAAAAAAAAAAAAPC/"
				],
				[
					366,
					1,
					"insert",
					{
						"characters": "ion"
					},
					"AwAAAAwcAAAAAAAADRwAAAAAAAAAAAAADRwAAAAAAAAOHAAAAAAAAAAAAAAOHAAAAAAAAA8cAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADBwAAAAAAAAMHAAAAAAAAAAAAAAAAPC/"
				],
				[
					367,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAA8cAAAAAAAAERwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADxwAAAAAAAAPHAAAAAAAAAAAAAAAAPC/"
				],
				[
					369,
					1,
					"reindent",
					null,
					"AQAAAPkbAAAAAAAAARwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+RsAAAAAAAD5GwAAAAAAAAAAAAAAAGZA"
				],
				[
					370,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AwAAAAEcAAAAAAAAAhwAAAAAAAAAAAAAAhwAAAAAAAAKHAAAAAAAAAAAAAD5GwAAAAAAAPkbAAAAAAAACAAAACAgICAgICAg",
					"AQAAAAAAAAABAAAAARwAAAAAAAABHAAAAAAAAAAAAAAAAPC/"
				],
				[
					371,
					1,
					"left_delete",
					null,
					"AQAAAP4bAAAAAAAA/hsAAAAAAAAEAAAAICAgIA",
					"AQAAAAAAAAABAAAAAhwAAAAAAAACHAAAAAAAAAAAAAAAAPC/"
				],
				[
					372,
					1,
					"insert",
					{
						"characters": "@stat"
					},
					"BQAAAP4bAAAAAAAA/xsAAAAAAAAAAAAA/xsAAAAAAAAAHAAAAAAAAAAAAAAAHAAAAAAAAAEcAAAAAAAAAAAAAAEcAAAAAAAAAhwAAAAAAAAAAAAAAhwAAAAAAAADHAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/hsAAAAAAAD+GwAAAAAAAAAAAAAAAPC/"
				],
				[
					374,
					1,
					"insert_completion",
					{
						"completion": "staticmethod$0",
						"format": "snippet",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "staticmethod"
					},
					"AgAAAP8bAAAAAAAA/xsAAAAAAAAEAAAAc3RhdP8bAAAAAAAACxwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAxwAAAAAAAADHAAAAAAAAAAAAAAAAPC/"
				],
				[
					378,
					1,
					"insert",
					{
						"characters": "frac:F"
					},
					"BgAAACIcAAAAAAAAIxwAAAAAAAAAAAAAIxwAAAAAAAAkHAAAAAAAAAAAAAAkHAAAAAAAACUcAAAAAAAAAAAAACUcAAAAAAAAJhwAAAAAAAAAAAAAJhwAAAAAAAAnHAAAAAAAAAAAAAAnHAAAAAAAACgcAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIhwAAAAAAAAiHAAAAAAAAAAAAAAAAPC/"
				],
				[
					379,
					1,
					"insert",
					{
						"characters": "rac"
					},
					"AwAAACgcAAAAAAAAKRwAAAAAAAAAAAAAKRwAAAAAAAAqHAAAAAAAAAAAAAAqHAAAAAAAACscAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKBwAAAAAAAAoHAAAAAAAAAAAAAAAAPC/"
				],
				[
					389,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion_item {\"session_name\":\"LSP-pyright\",\"item\":{\"label\":\"fraction\",\"data\":{\"workspacePath\":\"/home/levitanus/gits/ReaScore\",\"filePath\":\"/media/levitanus/RAID/gits/ReaScore/rea_score/primitives.py\",\"symbolLabel\":\"fraction\",\"position\":{\"character\":31,\"line\":219}},\"kind\":10,\"sortText\":\"09.9999.fraction\"}}",
						"format": "command",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "fraction"
					},
					"AgAAACccAAAAAAAAJxwAAAAAAAAEAAAARnJhYyccAAAAAAAALxwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKxwAAAAAAAArHAAAAAAAAAAAAAAAAPC/"
				],
				[
					391,
					1,
					"insert",
					{
						"characters": " ->"
					},
					"AwAAADAcAAAAAAAAMRwAAAAAAAAAAAAAMRwAAAAAAAAyHAAAAAAAAAAAAAAyHAAAAAAAADMcAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMBwAAAAAAAAwHAAAAAAAAP///////+9/"
				],
				[
					392,
					1,
					"insert",
					{
						"characters": " Length:"
					},
					"CAAAADMcAAAAAAAANBwAAAAAAAAAAAAANBwAAAAAAAA1HAAAAAAAAAAAAAA1HAAAAAAAADYcAAAAAAAAAAAAADYcAAAAAAAANxwAAAAAAAAAAAAANxwAAAAAAAA4HAAAAAAAAAAAAAA4HAAAAAAAADkcAAAAAAAAAAAAADkcAAAAAAAAOhwAAAAAAAAAAAAAOhwAAAAAAAA7HAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMxwAAAAAAAAzHAAAAAAAAAAAAAAAAPC/"
				],
				[
					395,
					1,
					"insert_snippet",
					{
						"contents": "'${0:$SELECTION}'"
					},
					"AgAAADQcAAAAAAAANBwAAAAAAAAGAAAATGVuZ3RoNBwAAAAAAAA8HAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOhwAAAAAAAA0HAAAAAAAAAAAAAAAAPC/"
				],
				[
					397,
					1,
					"insert",
					{
						"characters": "\nreturn"
					},
					"CQAAAD0cAAAAAAAAPhwAAAAAAAAAAAAAPhwAAAAAAABCHAAAAAAAAAAAAABCHAAAAAAAAEYcAAAAAAAAAAAAAEYcAAAAAAAARxwAAAAAAAAAAAAARxwAAAAAAABIHAAAAAAAAAAAAABIHAAAAAAAAEkcAAAAAAAAAAAAAEkcAAAAAAAAShwAAAAAAAAAAAAAShwAAAAAAABLHAAAAAAAAAAAAABLHAAAAAAAAEwcAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPRwAAAAAAAA9HAAAAAAAAP///////+9/"
				],
				[
					398,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAEwcAAAAAAAATRwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATBwAAAAAAABMHAAAAAAAAAAAAAAAAPC/"
				],
				[
					399,
					1,
					"insert",
					{
						"characters": "float"
					},
					"BQAAAE0cAAAAAAAAThwAAAAAAAAAAAAAThwAAAAAAABPHAAAAAAAAAAAAABPHAAAAAAAAFAcAAAAAAAAAAAAAFAcAAAAAAAAURwAAAAAAAAAAAAAURwAAAAAAABSHAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATRwAAAAAAABNHAAAAAAAAAAAAAAAAPC/"
				],
				[
					400,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAFIcAAAAAAAAVBwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUhwAAAAAAABSHAAAAAAAAAAAAAAAAPC/"
				],
				[
					401,
					1,
					"insert",
					{
						"characters": "frac"
					},
					"BAAAAFMcAAAAAAAAVBwAAAAAAAAAAAAAVBwAAAAAAABVHAAAAAAAAAAAAABVHAAAAAAAAFYcAAAAAAAAAAAAAFYcAAAAAAAAVxwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUxwAAAAAAABTHAAAAAAAAAAAAAAAAPC/"
				],
				[
					403,
					1,
					"insert",
					{
						"characters": "*4"
					},
					"AgAAAFgcAAAAAAAAWRwAAAAAAAAAAAAAWRwAAAAAAABaHAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWBwAAAAAAABYHAAAAAAAAP///////+9/"
				],
				[
					405,
					1,
					"yapf_document",
					null,
					"",
					"AQAAAAAAAAABAAAAWhwAAAAAAABaHAAAAAAAAAAAAAAAAPC/"
				],
				[
					416,
					1,
					"insert_snippet",
					{
						"contents": "(${0:$SELECTION})"
					},
					"AgAAAE4cAAAAAAAAThwAAAAAAAAPAAAAZmxvYXQoZnJhYykgKiA0ThwAAAAAAABfHAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAThwAAAAAAABdHAAAAAAAAAAAAAAAAPC/"
				],
				[
					418,
					1,
					"insert",
					{
						"characters": "Length"
					},
					"BgAAAE4cAAAAAAAATxwAAAAAAAAAAAAATxwAAAAAAABQHAAAAAAAAAAAAABQHAAAAAAAAFEcAAAAAAAAAAAAAFEcAAAAAAAAUhwAAAAAAAAAAAAAUhwAAAAAAABTHAAAAAAAAAAAAABTHAAAAAAAAFQcAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAThwAAAAAAABOHAAAAAAAAAAAAAAAAPC/"
				],
				[
					420,
					1,
					"yapf_document",
					null,
					"",
					"AQAAAAAAAAABAAAAVBwAAAAAAABUHAAAAAAAAAAAAAAAAPC/"
				],
				[
					428,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"BQAAAJQQAAAAAAAAlRAAAAAAAAAAAAAAlRAAAAAAAACdEAAAAAAAAAAAAACdEAAAAAAAAJ4QAAAAAAAAAAAAAJ4QAAAAAAAAphAAAAAAAAAAAAAAlRAAAAAAAACVEAAAAAAAAAgAAAAgICAgICAgIA",
					"AQAAAAAAAAABAAAAlBAAAAAAAACUEAAAAAAAAAAAAAAAAPC/"
				],
				[
					429,
					1,
					"left_delete",
					null,
					"AQAAAJoQAAAAAAAAmhAAAAAAAAAEAAAAICAgIA",
					"AQAAAAAAAAABAAAAnhAAAAAAAACeEAAAAAAAAAAAAAAAAPC/"
				],
				[
					430,
					1,
					"paste",
					null,
					"AQAAAJoQAAAAAAAAAREAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmhAAAAAAAACaEAAAAAAAAAAAAAAAAPC/"
				],
				[
					441,
					1,
					"insert",
					{
						"characters": "Position"
					},
					"EgAAAOoQAAAAAAAA6xAAAAAAAAAAAAAA6xAAAAAAAADrEAAAAAAAAAYAAABMZW5ndGjSEAAAAAAAANMQAAAAAAAAAAAAANMQAAAAAAAA0xAAAAAAAAAGAAAATGVuZ3Ro5hAAAAAAAADnEAAAAAAAAAAAAADTEAAAAAAAANQQAAAAAAAAAAAAAOgQAAAAAAAA6RAAAAAAAAAAAAAA1BAAAAAAAADVEAAAAAAAAAAAAADqEAAAAAAAAOsQAAAAAAAAAAAAANUQAAAAAAAA1hAAAAAAAAAAAAAA7BAAAAAAAADtEAAAAAAAAAAAAADWEAAAAAAAANcQAAAAAAAAAAAAAO4QAAAAAAAA7xAAAAAAAAAAAAAA1xAAAAAAAADYEAAAAAAAAAAAAADwEAAAAAAAAPEQAAAAAAAAAAAAANgQAAAAAAAA2RAAAAAAAAAAAAAA8hAAAAAAAADzEAAAAAAAAAAAAADZEAAAAAAAANoQAAAAAAAAAAAAAA",
					"AQAAAAAAAAACAAAA0hAAAAAAAADYEAAAAAAAAAAAAAAAAPC/6hAAAAAAAADwEAAAAAAAAAAAAAAAAPC/"
				],
				[
					443,
					1,
					"yapf_document",
					null,
					"",
					"AQAAAAAAAAACAAAA2hAAAAAAAADaEAAAAAAAAAAAAAAAAPC/9BAAAAAAAAD0EAAAAAAAAAAAAAAAAPC/"
				],
				[
					459,
					1,
					"right_delete",
					null,
					"AgAAAJkcAAAAAAAAmRwAAAAAAAABAAAAZsQQAAAAAAAAxBAAAAAAAAABAAAAZg",
					"AQAAAAAAAAACAAAAxBAAAAAAAADEEAAAAAAAAAAAAAAAAPC/mRwAAAAAAACZHAAAAAAAAAAAAAAAAPC/"
				],
				[
					460,
					1,
					"insert",
					{
						"characters": "F"
					},
					"AgAAAJgcAAAAAAAAmRwAAAAAAAAAAAAAxBAAAAAAAADFEAAAAAAAAAAAAAA",
					"AQAAAAAAAAACAAAAxBAAAAAAAADEEAAAAAAAAAAAAAAAAPC/mBwAAAAAAACYHAAAAAAAAAAAAAAAAPC/"
				],
				[
					462,
					1,
					"yapf_document",
					null,
					"",
					"AQAAAAAAAAACAAAAxRAAAAAAAADFEAAAAAAAAAAAAAAAAPC/mhwAAAAAAACaHAAAAAAAAAAAAAAAAPC/"
				],
				[
					474,
					1,
					"insert_snippet",
					{
						"contents": "[${0:$SELECTION}]"
					},
					"BAAAAMQQAAAAAAAAxBAAAAAAAAAIAAAARnJhY3Rpb27EEAAAAAAAAM4QAAAAAAAAAAAAAJscAAAAAAAAmxwAAAAAAAAIAAAARnJhY3Rpb26bHAAAAAAAAKUcAAAAAAAAAAAAAA",
					"AQAAAAAAAAACAAAAxBAAAAAAAADMEAAAAAAAAAAAAAAAAPC/mRwAAAAAAAChHAAAAAAAAAAAAAAAAPC/"
				],
				[
					476,
					1,
					"insert",
					{
						"characters": "Union"
					},
					"CgAAAJscAAAAAAAAnBwAAAAAAAAAAAAAxBAAAAAAAADFEAAAAAAAAAAAAACdHAAAAAAAAJ4cAAAAAAAAAAAAAMUQAAAAAAAAxhAAAAAAAAAAAAAAnxwAAAAAAACgHAAAAAAAAAAAAADGEAAAAAAAAMcQAAAAAAAAAAAAAKEcAAAAAAAAohwAAAAAAAAAAAAAxxAAAAAAAADIEAAAAAAAAAAAAACjHAAAAAAAAKQcAAAAAAAAAAAAAMgQAAAAAAAAyRAAAAAAAAAAAAAA",
					"AQAAAAAAAAACAAAAxBAAAAAAAADEEAAAAAAAAAAAAAAAAPC/mxwAAAAAAACbHAAAAAAAAAAAAAAAAPC/"
				],
				[
					477,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion_item {\"session_name\":\"LSP-pyright\",\"item\":{\"additionalTextEdits\":[],\"textEdit\":{\"range\":{\"end\":{\"character\":33,\"line\":128},\"start\":{\"character\":28,\"line\":128}},\"newText\":\"ty.Union\"},\"label\":\"Union\",\"detail\":\"Auto-import\",\"data\":{\"workspacePath\":\"/home/levitanus/gits/ReaScore\",\"filePath\":\"/media/levitanus/RAID/gits/ReaScore/rea_score/primitives.py\",\"symbolLabel\":\"Union\",\"autoImportText\":\"```\\nfrom typing import Union\\n```\",\"position\":{\"character\":33,\"line\":128}},\"documentation\":{\"value\":\"```\\nfrom typing import Union\\n```\",\"kind\":\"markdown\"},\"kind\":7,\"sortText\":\"12.9999.Union\"}}",
						"format": "command",
						"keep_prefix": true,
						"must_insert": false,
						"query_change_id":
						[
							364,
							476,
							10
						],
						"trigger": "Union"
					},
					"BAAAAKAcAAAAAAAAoBwAAAAAAAAFAAAAVW5pb27EEAAAAAAAAMQQAAAAAAAABQAAAFVuaW9umxwAAAAAAACjHAAAAAAAAAAAAADEEAAAAAAAAMwQAAAAAAAAAAAAAA",
					"AQAAAAAAAAACAAAAyRAAAAAAAADJEAAAAAAAAAAAAAAAAPC/pRwAAAAAAAClHAAAAAAAAAAAAAAAAPC/"
				],
				[
					479,
					1,
					"insert",
					{
						"characters": ",int"
					},
					"CAAAALQcAAAAAAAAtRwAAAAAAAAAAAAA1RAAAAAAAADWEAAAAAAAAAAAAAC2HAAAAAAAALccAAAAAAAAAAAAANYQAAAAAAAA1xAAAAAAAAAAAAAAuBwAAAAAAAC5HAAAAAAAAAAAAADXEAAAAAAAANgQAAAAAAAAAAAAALocAAAAAAAAuxwAAAAAAAAAAAAA2BAAAAAAAADZEAAAAAAAAAAAAAA",
					"AQAAAAAAAAACAAAA1RAAAAAAAADVEAAAAAAAAAAAAAAAAPC/tBwAAAAAAAC0HAAAAAAAAAAAAAAAAPC/"
				],
				[
					481,
					1,
					"yapf_document",
					null,
					"",
					"AQAAAAAAAAACAAAA2RAAAAAAAADZEAAAAAAAAAAAAAAAAPC/vBwAAAAAAAC8HAAAAAAAAAAAAAAAAPC/"
				],
				[
					494,
					1,
					"insert",
					{
						"characters": "float"
					},
					"DAAAALscAAAAAAAAvBwAAAAAAAAAAAAAvBwAAAAAAAC8HAAAAAAAAAMAAABpbnTXEAAAAAAAANgQAAAAAAAAAAAAANgQAAAAAAAA2BAAAAAAAAADAAAAaW50uhwAAAAAAAC7HAAAAAAAAAAAAADYEAAAAAAAANkQAAAAAAAAAAAAALwcAAAAAAAAvRwAAAAAAAAAAAAA2RAAAAAAAADaEAAAAAAAAAAAAAC+HAAAAAAAAL8cAAAAAAAAAAAAANoQAAAAAAAA2xAAAAAAAAAAAAAAwBwAAAAAAADBHAAAAAAAAAAAAADbEAAAAAAAANwQAAAAAAAAAAAAAA",
					"AQAAAAAAAAACAAAA1xAAAAAAAADaEAAAAAAAAAAAAAAAAPC/uxwAAAAAAAC+HAAAAAAAAAAAAAAAAPC/"
				],
				[
					496,
					1,
					"yapf_document",
					null,
					"",
					"AQAAAAAAAAACAAAA3BAAAAAAAADcEAAAAAAAAAAAAAAAAPC/whwAAAAAAADCHAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "/media/levitanus/RAID/gits/ReaScore/rea_score/lily_convert.py",
			"settings":
			{
				"buffer_size": 4547,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					10,
					1,
					"insert",
					{
						"characters": "warnings"
					},
					"CQAAACQAAAAAAAAAJQAAAAAAAAAAAAAAJQAAAAAAAAAlAAAAAAAAAAcAAABsb2dnaW5nJQAAAAAAAAAmAAAAAAAAAAAAAAAmAAAAAAAAACcAAAAAAAAAAAAAACcAAAAAAAAAKAAAAAAAAAAAAAAAKAAAAAAAAAApAAAAAAAAAAAAAAApAAAAAAAAACoAAAAAAAAAAAAAACoAAAAAAAAAKwAAAAAAAAAAAAAAKwAAAAAAAAAsAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAkAAAAAAAAACsAAAAAAAAAAAAAAAAA8L8"
				],
				[
					16,
					1,
					"yapf_document",
					null,
					"AQAAAAAAAAAAAAAAwREAAAAAAADFEQAAZnJvbSBmcmFjdGlvbnMgaW1wb3J0IEZyYWN0aW9uCmZyb20gd2FybmluZ3MgaW1wb3J0IHdhcm4KZnJvbSB0eXBpbmcgaW1wb3J0IERpY3QsIExpc3QsIE5ld1R5cGUsIE9wdGlvbmFsLCBUdXBsZSwgVW5pb24KaW1wb3J0IHJlCgpmcm9tIC5kb20gaW1wb3J0IFZvaWNlLCBldmVudHNfZnJvbV90YWtlLCBzcGxpdF9ieV92b2ljZQpmcm9tIC5wcmltaXRpdmVzIGltcG9ydCBDaG9yZCwgRXZlbnQsIEtleSwgTGVuZ3RoLCBQaXRjaCwgUG9zaXRpb24sIFNjYWxlCgppbXBvcnQgcmVhcHkgYXMgcnByCmltcG9ydCBhYmphZAoKS0VZID0gS2V5KCdmaXMnLCBTY2FsZS5tYWpvcikKCgpkZWYgcmVuZGVyX3N0YWZmKHZvaWNlczogRGljdFtpbnQsIFZvaWNlXSkgLT4gc3RyOgogICAgc3RhZmYgPSAiIiJcXG5ldyBTdGFmZiA8PHt2b2ljZXN9Pj4iIiIKICAgIHJlbmRlcmVkX3ZvaWNlcyA9IFtdCiAgICBmb3IgaW5kZXgsIHZvaWNlIGluIHZvaWNlcy5pdGVtcygpOgogICAgICAgIHJlbmRlcmVkX3ZvaWNlcy5hcHBlbmQocmVuZGVyX3ZvaWNlKHZvaWNlLCBpbmRleCkpCiAgICByZXR1cm4gc3RhZmYuZm9ybWF0KHZvaWNlcz0nXG4nLmpvaW4ocmVuZGVyZWRfdm9pY2VzKSkKCgpkZWYgcmVuZGVyX3ZvaWNlKAogICAgdm9pY2U6IFZvaWNlLAogICAgaW5kZXg6IE9wdGlvbmFsW2ludF0gPSBOb25lLAogICAgbmFtZTogT3B0aW9uYWxbc3RyXSA9IE5vbmUKKSAtPiBzdHI6CiAgICB2b2ljZS5zb3J0KCkKICAgIHZvaWNlID0gdm9pY2Uud2l0aF9yZXN0cygpCiAgICBhcmdzID0ge30KICAgIGlmIG5hbWU6CiAgICAgICAgaWYgaW5kZXg6CiAgICAgICAgICAgIG5hbWUgPSBmJ3tuYW1lfWluZGV4JwogICAgICAgIGFyZ3NbJ25hbWUnXSA9IG5hbWUKICAgIG91dCA9IFtdCiAgICBmb3IgZXZlbnQgaW4gdm9pY2UuZXZlbnRzLnZhbHVlcygpOgogICAgICAgIGlmIGlzaW5zdGFuY2UoZXZlbnQsIENob3JkKToKICAgICAgICAgICAgb3V0LmFwcGVuZChyZW5kZXJfY2hvcmQoZXZlbnQpKQogICAgICAgIGVsaWYgaXNpbnN0YW5jZShldmVudCwgRXZlbnQpOgogICAgICAgICAgICBvdXQuYXBwZW5kKHJlbmRlcl9ldmVudChldmVudCkpCiAgICAgICAgZWxzZToKICAgICAgICAgICAgcmFpc2UgVHlwZUVycm9yKGV2ZW50KQogICAga2V5ID0gS0VZLmx5X3JlbmRlcigpCiAgICByZXR1cm4gZiJcXG5ldyBWb2ljZSB7e3trZXl9IHsnICcuam9pbihvdXQpfX19IgoKCmRlZiByZW5kZXJfZXZlbnQoZXZlbnQ6IEV2ZW50KSAtPiBzdHI6CiAgICBzdHJpbmcgPSAie3ByZWFtYnVsYX17cGl0Y2h9e2xlbmd0aH17bm90YXRpb25zfXt0aWV9e3RpZWR9IgogICAgaWYgZXZlbnQubGVuZ3RoID09IDA6CiAgICAgICAgd2FybihmJ1plcm8ta2VuZ3RoIGV2ZW50OiB7ZXZlbnR9LCByZXR1cm5pbmcgbnVsbCcpCiAgICAgICAgcmV0dXJuICcnCiAgICBsZW5ndGgsIHRpZWQgPSByZW5kZXJfbGVuZ3RoKAogICAgICAgIGV2ZW50Lmxlbmd0aCwgcmVzdD0oZXZlbnQucGl0Y2gubWlkaV9waXRjaCBpcyBOb25lKQogICAgKQogICAgcGl0Y2gsIHRpZSA9IHJlbmRlcl9waXRjaChldmVudC5waXRjaCkKICAgIGlmIGV2ZW50Lmxlbmd0aC5mdWxsX2JhcjoKICAgICAgICBwaXRjaCA9IHJlLnN1YigncicsICdSJywgcGl0Y2gpCiAgICAjIGlmIHRpZWQgYW5kIHRpZToKICAgICMgICAgIHRpZSA9ICcnCiAgICByZXR1cm4gc3RyaW5nLmZvcm1hdCgKICAgICAgICBwcmVhbWJ1bGE9cmVuZGVyX3ByZWFtYnVsYShldmVudCksCiAgICAgICAgcGl0Y2g9cGl0Y2gsCiAgICAgICAgbGVuZ3RoPWxlbmd0aCwKICAgICAgICBub3RhdGlvbnM9JycsCiAgICAgICAgdGllPXRpZSwKICAgICAgICB0aWVkPXRpZWQKICAgICkKCgpkZWYgcmVuZGVyX2Nob3JkKGNob3JkOiBDaG9yZCkgLT4gc3RyOgogICAgc3RyaW5nID0gIntwcmVhbWJ1bGF9PHtwaXRjaGVzfT57bGVuZ3RofXtub3RhdGlvbnN9e3RpZX17dGllZH0iCiAgICBwaXRjaGVzID0gW10KICAgIGZvciBwaXRjaCBpbiBjaG9yZC5waXRjaGVzOgogICAgICAgIHBpdGNoZXMuYXBwZW5kKCcnLmpvaW4ocmVuZGVyX3BpdGNoKHBpdGNoKSkpCiAgICBsZW5ndGgsIHRpZWQgPSByZW5kZXJfbGVuZ3RoKGNob3JkLmxlbmd0aCkKICAgIGlmIHRpZWQ6CiAgICAgICAgdGllID0gJ34nCiAgICBlbHNlOgogICAgICAgIHRpZSA9ICcnCiAgICByZXR1cm4gc3RyaW5nLmZvcm1hdCgKICAgICAgICBwcmVhbWJ1bGE9cmVuZGVyX3ByZWFtYnVsYShjaG9yZCksCiAgICAgICAgcGl0Y2hlcz0nICcuam9pbihwaXRjaGVzKSwKICAgICAgICBsZW5ndGg9bGVuZ3RoLAogICAgICAgIG5vdGF0aW9ucz0nJywKICAgICAgICB0aWU9dGllLAogICAgICAgIHRpZWQ9dGllZAogICAgKQoKCmRlZiByZW5kZXJfcHJlYW1idWxhKGV2ZW50OiBFdmVudCkgLT4gc3RyOgogICAgIyBvdXQgPSAnJwogICAgIyBmb3IgZWxtIGluIGV2ZW50LnByZWFtYnVsYToKICAgICMgICAgIG91dCArPSBlbG0ubHlfcmVuZGVyKCkKICAgICMgcmV0dXJuIG91dAogICAgcmV0dXJuICcnLmpvaW4oZWxtLmx5X3JlbmRlcigpIGZvciBlbG0gaW4gZXZlbnQucHJlYW1idWxhKQoKCmRlZiByZW5kZXJfbGVuZ3RoKGxlbmd0aDogTGVuZ3RoLCByZXN0OiBib29sID0gRmFsc2UpIC0+IFR1cGxlW3N0ciwgc3RyXToKICAgIHRpZWQgPSAnJwogICAgdGllID0gJ34gJwogICAgaWYgcmVzdDoKICAgICAgICB0aWUgPSAnIHInCiAgICBmb3IgaWR4LCBsdGggaW4gZW51bWVyYXRlKHJldmVyc2VkKGxlbmd0aC5ub3JtYWxpemVkKGxlbmd0aC5mcmFjdGlvbikpKToKICAgICAgICBpZiBpZHggPT0gMDoKICAgICAgICAgICAgaWYgbHRoID4gMToKICAgICAgICAgICAgICAgIGZfbHRoID0gJzEnCiAgICAgICAgICAgICAgICB0aWVkICs9IGZyYWN0aW9uX3RvX2xlbmd0aChsdGggLSAxKQogICAgICAgICAgICBlbHNlOgogICAgICAgICAgICAgICAgZl9sdGggPSBmcmFjdGlvbl90b19sZW5ndGgobHRoKQogICAgICAgIGVsc2U6CiAgICAgICAgICAgIHRpZWQgKz0gdGllICsgZnJhY3Rpb25fdG9fbGVuZ3RoKGx0aCkKICAgIHJldHVybiBmX2x0aCwgdGllZAoKCmNsYXNzIEZyYWNFcnJvcihWYWx1ZUVycm9yKToKICAgIC4uLgoKCmRlZiBmcmFjdGlvbl90b19sZW5ndGgoZnJhYzogRnJhY3Rpb24pIC0+IHN0cjoKICAgIG51bSA9ICcnCiAgICBpZiBmcmFjLm51bWVyYXRvciA9PSAzOgogICAgICAgIG51bSA9ICcuJwogICAgICAgIGZyYWMgPSBmcmFjIC8gMyAqIDIKICAgICAgICBkZW5vbSA9IHN0cihmcmFjLmRlbm9taW5hdG9yKQogICAgZWxpZiBmcmFjLmRlbm9taW5hdG9yID09IDEgYW5kIGZyYWMubnVtZXJhdG9yID4gMToKICAgICAgICBkZW5vbSA9ICd+Jy5qb2luKFsnMSddICogZnJhYy5udW1lcmF0b3IpCiAgICBlbGlmIGZyYWMubnVtZXJhdG9yID09IDE6CiAgICAgICAgZGVub20gPSBzdHIoZnJhYy5kZW5vbWluYXRvcikKICAgIGVsc2U6CiAgICAgICAgcmFpc2UgRnJhY0Vycm9yKGYibm8gcmlnaHQgY29uZGl0aW9uIHtmcmFjfSIpCiAgICAjIHByaW50KGZyYWMpCiAgICByZXR1cm4gZGVub20gKyBudW0KCgpkZWYgcmVuZGVyX3BpdGNoKHBpdGNoOiBQaXRjaCkgLT4gVHVwbGVbc3RyLCBzdHJdOgogICAgc3RyaW5nID0gcGl0Y2gubmFtZWRfcGl0Y2goS0VZKQogICAgc3RyaW5nID0gcmUuc3ViKCfima8nLCAnaXMnLCBzdHJpbmcpCiAgICBzdHJpbmcgPSByZS5zdWIoJ+KZrScsICdlcycsIHN0cmluZykKICAgIGlmIG0gOj0gcmUubWF0Y2gocicoLispKFxkKScsIHN0cmluZyk6CiAgICAgICAgbmFtZSwgb2N0YXZlID0gbS5ncm91cHMoKQogICAgICAgIGRpZmYgPSBpbnQob2N0YXZlKSAtIDMKICAgICAgICBpZiBkaWZmID4gMDoKICAgICAgICAgICAgb2N0YXZlID0gIiciICogZGlmZgogICAgICAgIGVsaWYgZGlmZiA8IDA6CiAgICAgICAgICAgIG9jdGF2ZSA9ICIsIiAqIC1kaWZmCiAgICAgICAgZWxzZToKICAgICAgICAgICAgb2N0YXZlID0gJycKICAgIGVsc2U6CiAgICAgICAgbmFtZSA9IHBpdGNoLm5hbWVkX3BpdGNoKEtFWSkKICAgICAgICBvY3RhdmUgPSAnJwogICAgaWYgcGl0Y2gudGllOgogICAgICAgIHRpZSA9ICd+JwogICAgZWxzZToKICAgICAgICB0aWUgPSAnJwogICAgcmV0dXJuIG5hbWUubG93ZXIoKSArIG9jdGF2ZSwgdGllCgoKZGVmIGFueV90b19saWx5KG9iajogVW5pb25bVm9pY2UsIHJwci5UYWtlXSkgLT4gc3RyOgogICAgaWYgaXNpbnN0YW5jZShvYmosIHJwci5UYWtlKToKICAgICAgICByZXR1cm4gcmVuZGVyX3N0YWZmKHNwbGl0X2J5X3ZvaWNlKGV2ZW50c19mcm9tX3Rha2Uob2JqKSkpCiAgICBpZiBpc2luc3RhbmNlKG9iaiwgVm9pY2UpOgogICAgICAgIHJldHVybiByZW5kZXJfdm9pY2Uob2JqKQogICAgcmFpc2UgVHlwZUVycm9yKCJBY3R1YWxseSBub3QgbGl0ZXJhbGx5IGFueSEiKQoKCmlmIF9fbmFtZV9fID09ICdfX21haW5fXyc6CiAgICB3aXRoIHJwci5pbnNpZGVfcmVhcGVyKCk6CiAgICAgICAgcHJpbnQoYW55X3RvX2xpbHkocnByLlByb2plY3QoKS5zZWxlY3RlZF9pdGVtc1swXS5hY3RpdmVfdGFrZSkpCg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA4AAAAAAAAADgAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3,
					1,
					"toggle_comment",
					{
						"block": false
					},
					"AQAAABsBAAAAAAAAHQEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJwEAAAAAAAAnAQAAAAAAAAAAAAAAAPC/"
				],
				[
					5,
					1,
					"yapf_document",
					null,
					"AQAAAAAAAAAAAAAAwxEAAAAAAADHEQAAZnJvbSBmcmFjdGlvbnMgaW1wb3J0IEZyYWN0aW9uCmZyb20gd2FybmluZ3MgaW1wb3J0IHdhcm4KZnJvbSB0eXBpbmcgaW1wb3J0IERpY3QsIExpc3QsIE5ld1R5cGUsIE9wdGlvbmFsLCBUdXBsZSwgVW5pb24KaW1wb3J0IHJlCgpmcm9tIC5kb20gaW1wb3J0IFZvaWNlLCBldmVudHNfZnJvbV90YWtlLCBzcGxpdF9ieV92b2ljZQpmcm9tIC5wcmltaXRpdmVzIGltcG9ydCBDaG9yZCwgRXZlbnQsIEtleSwgTGVuZ3RoLCBQaXRjaCwgUG9zaXRpb24sIFNjYWxlCgppbXBvcnQgcmVhcHkgYXMgcnByCiMgaW1wb3J0IGFiamFkCgpLRVkgPSBLZXkoJ2ZpcycsIFNjYWxlLm1ham9yKQoKCmRlZiByZW5kZXJfc3RhZmYodm9pY2VzOiBEaWN0W2ludCwgVm9pY2VdKSAtPiBzdHI6CiAgICBzdGFmZiA9ICIiIlxcbmV3IFN0YWZmIDw8e3ZvaWNlc30+PiIiIgogICAgcmVuZGVyZWRfdm9pY2VzID0gW10KICAgIGZvciBpbmRleCwgdm9pY2UgaW4gdm9pY2VzLml0ZW1zKCk6CiAgICAgICAgcmVuZGVyZWRfdm9pY2VzLmFwcGVuZChyZW5kZXJfdm9pY2Uodm9pY2UsIGluZGV4KSkKICAgIHJldHVybiBzdGFmZi5mb3JtYXQodm9pY2VzPSdcbicuam9pbihyZW5kZXJlZF92b2ljZXMpKQoKCmRlZiByZW5kZXJfdm9pY2UoCiAgICB2b2ljZTogVm9pY2UsCiAgICBpbmRleDogT3B0aW9uYWxbaW50XSA9IE5vbmUsCiAgICBuYW1lOiBPcHRpb25hbFtzdHJdID0gTm9uZQopIC0+IHN0cjoKICAgIHZvaWNlLnNvcnQoKQogICAgdm9pY2UgPSB2b2ljZS53aXRoX3Jlc3RzKCkKICAgIGFyZ3MgPSB7fQogICAgaWYgbmFtZToKICAgICAgICBpZiBpbmRleDoKICAgICAgICAgICAgbmFtZSA9IGYne25hbWV9aW5kZXgnCiAgICAgICAgYXJnc1snbmFtZSddID0gbmFtZQogICAgb3V0ID0gW10KICAgIGZvciBldmVudCBpbiB2b2ljZS5ldmVudHMudmFsdWVzKCk6CiAgICAgICAgaWYgaXNpbnN0YW5jZShldmVudCwgQ2hvcmQpOgogICAgICAgICAgICBvdXQuYXBwZW5kKHJlbmRlcl9jaG9yZChldmVudCkpCiAgICAgICAgZWxpZiBpc2luc3RhbmNlKGV2ZW50LCBFdmVudCk6CiAgICAgICAgICAgIG91dC5hcHBlbmQocmVuZGVyX2V2ZW50KGV2ZW50KSkKICAgICAgICBlbHNlOgogICAgICAgICAgICByYWlzZSBUeXBlRXJyb3IoZXZlbnQpCiAgICBrZXkgPSBLRVkubHlfcmVuZGVyKCkKICAgIHJldHVybiBmIlxcbmV3IFZvaWNlIHt7e2tleX0geycgJy5qb2luKG91dCl9fX0iCgoKZGVmIHJlbmRlcl9ldmVudChldmVudDogRXZlbnQpIC0+IHN0cjoKICAgIHN0cmluZyA9ICJ7cHJlYW1idWxhfXtwaXRjaH17bGVuZ3RofXtub3RhdGlvbnN9e3RpZX17dGllZH0iCiAgICBpZiBldmVudC5sZW5ndGggPT0gMDoKICAgICAgICB3YXJuKGYnWmVyby1rZW5ndGggZXZlbnQ6IHtldmVudH0sIHJldHVybmluZyBudWxsJykKICAgICAgICByZXR1cm4gJycKICAgIGxlbmd0aCwgdGllZCA9IHJlbmRlcl9sZW5ndGgoCiAgICAgICAgZXZlbnQubGVuZ3RoLCByZXN0PShldmVudC5waXRjaC5taWRpX3BpdGNoIGlzIE5vbmUpCiAgICApCiAgICBwaXRjaCwgdGllID0gcmVuZGVyX3BpdGNoKGV2ZW50LnBpdGNoKQogICAgaWYgZXZlbnQubGVuZ3RoLmZ1bGxfYmFyOgogICAgICAgIHBpdGNoID0gcmUuc3ViKCdyJywgJ1InLCBwaXRjaCkKICAgICMgaWYgdGllZCBhbmQgdGllOgogICAgIyAgICAgdGllID0gJycKICAgIHJldHVybiBzdHJpbmcuZm9ybWF0KAogICAgICAgIHByZWFtYnVsYT1yZW5kZXJfcHJlYW1idWxhKGV2ZW50KSwKICAgICAgICBwaXRjaD1waXRjaCwKICAgICAgICBsZW5ndGg9bGVuZ3RoLAogICAgICAgIG5vdGF0aW9ucz0nJywKICAgICAgICB0aWU9dGllLAogICAgICAgIHRpZWQ9dGllZAogICAgKQoKCmRlZiByZW5kZXJfY2hvcmQoY2hvcmQ6IENob3JkKSAtPiBzdHI6CiAgICBzdHJpbmcgPSAie3ByZWFtYnVsYX08e3BpdGNoZXN9PntsZW5ndGh9e25vdGF0aW9uc317dGllfXt0aWVkfSIKICAgIHBpdGNoZXMgPSBbXQogICAgZm9yIHBpdGNoIGluIGNob3JkLnBpdGNoZXM6CiAgICAgICAgcGl0Y2hlcy5hcHBlbmQoJycuam9pbihyZW5kZXJfcGl0Y2gocGl0Y2gpKSkKICAgIGxlbmd0aCwgdGllZCA9IHJlbmRlcl9sZW5ndGgoY2hvcmQubGVuZ3RoKQogICAgaWYgdGllZDoKICAgICAgICB0aWUgPSAnficKICAgIGVsc2U6CiAgICAgICAgdGllID0gJycKICAgIHJldHVybiBzdHJpbmcuZm9ybWF0KAogICAgICAgIHByZWFtYnVsYT1yZW5kZXJfcHJlYW1idWxhKGNob3JkKSwKICAgICAgICBwaXRjaGVzPScgJy5qb2luKHBpdGNoZXMpLAogICAgICAgIGxlbmd0aD1sZW5ndGgsCiAgICAgICAgbm90YXRpb25zPScnLAogICAgICAgIHRpZT10aWUsCiAgICAgICAgdGllZD10aWVkCiAgICApCgoKZGVmIHJlbmRlcl9wcmVhbWJ1bGEoZXZlbnQ6IEV2ZW50KSAtPiBzdHI6CiAgICAjIG91dCA9ICcnCiAgICAjIGZvciBlbG0gaW4gZXZlbnQucHJlYW1idWxhOgogICAgIyAgICAgb3V0ICs9IGVsbS5seV9yZW5kZXIoKQogICAgIyByZXR1cm4gb3V0CiAgICByZXR1cm4gJycuam9pbihlbG0ubHlfcmVuZGVyKCkgZm9yIGVsbSBpbiBldmVudC5wcmVhbWJ1bGEpCgoKZGVmIHJlbmRlcl9sZW5ndGgobGVuZ3RoOiBMZW5ndGgsIHJlc3Q6IGJvb2wgPSBGYWxzZSkgLT4gVHVwbGVbc3RyLCBzdHJdOgogICAgdGllZCA9ICcnCiAgICB0aWUgPSAnfiAnCiAgICBpZiByZXN0OgogICAgICAgIHRpZSA9ICcgcicKICAgIGZvciBpZHgsIGx0aCBpbiBlbnVtZXJhdGUocmV2ZXJzZWQobGVuZ3RoLm5vcm1hbGl6ZWQobGVuZ3RoLmZyYWN0aW9uKSkpOgogICAgICAgIGlmIGlkeCA9PSAwOgogICAgICAgICAgICBpZiBsdGggPiAxOgogICAgICAgICAgICAgICAgZl9sdGggPSAnMScKICAgICAgICAgICAgICAgIHRpZWQgKz0gZnJhY3Rpb25fdG9fbGVuZ3RoKGx0aCAtIDEpCiAgICAgICAgICAgIGVsc2U6CiAgICAgICAgICAgICAgICBmX2x0aCA9IGZyYWN0aW9uX3RvX2xlbmd0aChsdGgpCiAgICAgICAgZWxzZToKICAgICAgICAgICAgdGllZCArPSB0aWUgKyBmcmFjdGlvbl90b19sZW5ndGgobHRoKQogICAgcmV0dXJuIGZfbHRoLCB0aWVkCgoKY2xhc3MgRnJhY0Vycm9yKFZhbHVlRXJyb3IpOgogICAgLi4uCgoKZGVmIGZyYWN0aW9uX3RvX2xlbmd0aChmcmFjOiBGcmFjdGlvbikgLT4gc3RyOgogICAgbnVtID0gJycKICAgIGlmIGZyYWMubnVtZXJhdG9yID09IDM6CiAgICAgICAgbnVtID0gJy4nCiAgICAgICAgZnJhYyA9IGZyYWMgLyAzICogMgogICAgICAgIGRlbm9tID0gc3RyKGZyYWMuZGVub21pbmF0b3IpCiAgICBlbGlmIGZyYWMuZGVub21pbmF0b3IgPT0gMSBhbmQgZnJhYy5udW1lcmF0b3IgPiAxOgogICAgICAgIGRlbm9tID0gJ34nLmpvaW4oWycxJ10gKiBmcmFjLm51bWVyYXRvcikKICAgIGVsaWYgZnJhYy5udW1lcmF0b3IgPT0gMToKICAgICAgICBkZW5vbSA9IHN0cihmcmFjLmRlbm9taW5hdG9yKQogICAgZWxzZToKICAgICAgICByYWlzZSBGcmFjRXJyb3IoZiJubyByaWdodCBjb25kaXRpb24ge2ZyYWN9IikKICAgICMgcHJpbnQoZnJhYykKICAgIHJldHVybiBkZW5vbSArIG51bQoKCmRlZiByZW5kZXJfcGl0Y2gocGl0Y2g6IFBpdGNoKSAtPiBUdXBsZVtzdHIsIHN0cl06CiAgICBzdHJpbmcgPSBwaXRjaC5uYW1lZF9waXRjaChLRVkpCiAgICBzdHJpbmcgPSByZS5zdWIoJ+KZrycsICdpcycsIHN0cmluZykKICAgIHN0cmluZyA9IHJlLnN1Yign4pmtJywgJ2VzJywgc3RyaW5nKQogICAgaWYgbSA6PSByZS5tYXRjaChyJyguKykoXGQpJywgc3RyaW5nKToKICAgICAgICBuYW1lLCBvY3RhdmUgPSBtLmdyb3VwcygpCiAgICAgICAgZGlmZiA9IGludChvY3RhdmUpIC0gMwogICAgICAgIGlmIGRpZmYgPiAwOgogICAgICAgICAgICBvY3RhdmUgPSAiJyIgKiBkaWZmCiAgICAgICAgZWxpZiBkaWZmIDwgMDoKICAgICAgICAgICAgb2N0YXZlID0gIiwiICogLWRpZmYKICAgICAgICBlbHNlOgogICAgICAgICAgICBvY3RhdmUgPSAnJwogICAgZWxzZToKICAgICAgICBuYW1lID0gcGl0Y2gubmFtZWRfcGl0Y2goS0VZKQogICAgICAgIG9jdGF2ZSA9ICcnCiAgICBpZiBwaXRjaC50aWU6CiAgICAgICAgdGllID0gJ34nCiAgICBlbHNlOgogICAgICAgIHRpZSA9ICcnCiAgICByZXR1cm4gbmFtZS5sb3dlcigpICsgb2N0YXZlLCB0aWUKCgpkZWYgYW55X3RvX2xpbHkob2JqOiBVbmlvbltWb2ljZSwgcnByLlRha2VdKSAtPiBzdHI6CiAgICBpZiBpc2luc3RhbmNlKG9iaiwgcnByLlRha2UpOgogICAgICAgIHJldHVybiByZW5kZXJfc3RhZmYoc3BsaXRfYnlfdm9pY2UoZXZlbnRzX2Zyb21fdGFrZShvYmopKSkKICAgIGlmIGlzaW5zdGFuY2Uob2JqLCBWb2ljZSk6CiAgICAgICAgcmV0dXJuIHJlbmRlcl92b2ljZShvYmopCiAgICByYWlzZSBUeXBlRXJyb3IoIkFjdHVhbGx5IG5vdCBsaXRlcmFsbHkgYW55ISIpCgoKaWYgX19uYW1lX18gPT0gJ19fbWFpbl9fJzoKICAgIHdpdGggcnByLmluc2lkZV9yZWFwZXIoKToKICAgICAgICBwcmludChhbnlfdG9fbGlseShycHIuUHJvamVjdCgpLnNlbGVjdGVkX2l0ZW1zWzBdLmFjdGl2ZV90YWtlKSkK",
					"AQAAAAAAAAABAAAAKQEAAAAAAAApAQAAAAAAAAAAAAAAAPC/"
				]
			]
		}
	],
	"build_system": "Packages/MagicPython/settings/sublime/Python.sublime-build",
	"build_system_choices":
	[
		[
			[
				[
					"Anaconda Python Builder",
					""
				],
				[
					"Packages/MagicPython/settings/sublime/Python.sublime-build",
					""
				],
				[
					"Packages/MagicPython/settings/sublime/Python.sublime-build",
					"Syntax Check"
				],
				[
					"Packages/SublimeREPL/sublimerepl_build_system_hack.sublime-build",
					""
				],
				[
					"Packages/User/python3_my.sublime-build",
					""
				]
			],
			[
				"Anaconda Python Builder",
				""
			]
		],
		[
			[
				[
					"Packages/MagicPython/settings/sublime/Python.sublime-build",
					""
				],
				[
					"Packages/MagicPython/settings/sublime/Python.sublime-build",
					"Syntax Check"
				],
				[
					"Packages/SublimeREPL/sublimerepl_build_system_hack.sublime-build",
					""
				],
				[
					"Packages/User/python3_my.sublime-build",
					""
				]
			],
			[
				"Packages/MagicPython/settings/sublime/Python.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				]
			],
			[
				"Packages/Python/Python.sublime-build",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"enab",
				"Package Control: Enable Package"
			],
			[
				"disa",
				"Package Control: Disable Package"
			],
			[
				"enable",
				"LSP: Enable Language Server in Project"
			],
			[
				"ena",
				"Package Control: Enable Package"
			],
			[
				"dis",
				"Package Control: Disable Package"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"",
				"Anaconda: Goto object assignment"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"isor",
				"isort: sort imports"
			],
			[
				"prewi",
				"Markdown Preview: Preview in Browser"
			],
			[
				"mar",
				"Markdown Preview: Preview in Browser"
			],
			[
				"previw",
				"Markdown Preview: Preview in Browser"
			],
			[
				"mark",
				"Markdown Preview: Preview in Browser"
			],
			[
				"Package Control: inst",
				"Package Control: Install Package"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"remo",
				"Package Control: Remove Package"
			],
			[
				"jed",
				"SublimeJedi: Show Signature"
			],
			[
				"Package Control: instal",
				"Package Control: Install Package"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 157.0,
		"history":
		[
			"exit()",
			"isort_sort_imports",
			"import urllib.request,os,hashlib; h = '6f4c264a24d933ce70df5dedcf1dcaee' + 'ebe013ee18cced0ef93d5f746d80ef60'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by) "
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/levitanus/gits/ReaScore",
		"/home/levitanus/gits/ReaScore/rea_score",
		"/home/levitanus/gits/ReaScore/rea_score/reascripts",
		"/home/levitanus/gits/ReaScore/tests"
	],
	"file_history":
	[
		"/home/levitanus/gits/ReaScore/tests/test_primitives.py",
		"/home/levitanus/gits/ReaScore/tests/test_scale.py",
		"/home/levitanus/.local/lib/python3.9/site-packages/librosa/core/convert.py",
		"/home/levitanus/.local/lib/python3.9/site-packages/librosa/core/notation.py",
		"/media/levitanus/RAID/gits/ReaScore/rea_score/dom.py",
		"/home/levitanus/gits/ReaScore/rea_score/reascripts/ReaScore_view_score.py",
		"/home/levitanus/gits/ReaScore/rea_score/lily_export.py",
		"/home/levitanus/gits/ReaScore/rea_score/lily_convert.py",
		"/home/levitanus/gits/ReaScore/rea_score/inspector.py",
		"/home/levitanus/gits/ReaScore/rea_score/dom.py",
		"/home/levitanus/gits/ReaScore/setup.py",
		"/home/levitanus/gits/ReaScore/tests/test_lily_render.py",
		"/home/levitanus/gits/ReaScore/py.typed",
		"/home/levitanus/gits/ReaScore/primitives.py",
		"/home/levitanus/gits/ReaScore/dom.py",
		"/home/levitanus/gits/ReaScore/lily_convert.py",
		"/home/levitanus/gits/ReaScore/lily_export.py",
		"/home/levitanus/gits/ReaScore/inspector.py",
		"/home/levitanus/gits/ReaScore/ReaScore_view_score.py",
		"/home/levitanus/gits/ReaScore/simple_test.py",
		"/home/levitanus/gits/ReaScore/ReaScore_render_selected_track.py",
		"/home/levitanus/gits/ReaScore/ReaScore.sublime-project",
		"/home/levitanus/gits/ReaScore/test_primitives.py",
		"/home/levitanus/gits/ReaScore/test_lily_render.py",
		"/home/levitanus/gits/ReaScore/test.ly",
		"/media/levitanus/RaidNew/fonogr/концерт Тихон/верни мне музыку/Piccolo (test).ly",
		"/media/levitanus/RAID/gits/ReaScore/lily_convert.py",
		"/media/levitanus/RAID/gits/ReaScore/dom.py",
		"/media/levitanus/RAID/gits/ReaScore/lily_export.py",
		"/media/levitanus/RAID/gits/reapy/reapy/core/__init__.py",
		"/media/levitanus/RAID/gits/reapy/reapy/core/project/__init__.py",
		"/media/levitanus/RAID/gits/reapy/reapy/core/project/project.py",
		"/media/levitanus/RAID/gits/reapy/reapy/__init__.py",
		"/media/levitanus/RAID/gits/reapy/reapy/core/track/track.py",
		"/home/levitanus/.config/REAPER/Scripts/ReaTeam Extensions/API/ReaImGui_Demo.lua",
		"/home/levitanus/.config/REAPER/Scripts/ReaTeam Extensions/API/imgui_python.py",
		"/home/levitanus/.config/REAPER/UserPlugins/imgui_python.py",
		"/home/levitanus/gits/ReaExtensions/rea_extensions/lilypond_old.py",
		"/home/levitanus/gits/ReaScore/.ropeproject/config.py",
		"/home/levitanus/gits/ReaScore/test_abjad.py",
		"/home/levitanus/gits/ReaExtensions/rea_extensions/lilypond.py",
		"/home/levitanus/gits/reapy/reapy/core/project/project.py",
		"/home/levitanus/gits/ReaScore/export.py",
		"/media/levitanus/RAID/gits/reapy/reapy/core/envelope.py",
		"/home/levitanus/gits/reapy/reapy/core/track/send.py",
		"/home/levitanus/gits/reapy/reapy/core/reaper/reaper.py",
		"/media/levitanus/RAID/gits/reapy/reapy/core/item/midi_event.py",
		"/home/levitanus/gits/reapy/reapy/core/reapy_object.py",
		"/home/levitanus/gits/MyBigNote/my_big_note/staff.py",
		"/home/levitanus/gits/MyBigNote/my_big_note/midi_prefs.py",
		"/home/levitanus/gits/MyBigNote/my_big_note/midi_in.py",
		"/home/levitanus/gits/ReaExtensions/rea_extensions/test.ly",
		"/home/levitanus/gits/ReaExtensions/rea_extensions/musicxml.py",
		"/home/levitanus/gits/ReaExtensions/tests/test.py",
		"/home/levitanus/gits/ReaExtensions/rea_extensions/music_dom.py",
		"/home/levitanus/gits/ReaExtensions/rea_extensions/music_fractures.py",
		"/media/levitanus/RAID/gits/reapy/reapy/core/item/take.py",
		"/media/levitanus/RAID/gits/reapy/reapy/core/reaper/__init__.py",
		"/home/levitanus/.local/lib/python3.9/site-packages/abjad/__init__.py",
		"/usr/lib/python3.9/fractions.py",
		"/home/levitanus/gits/ReaExtensions/rea_extensions/test.py",
		"/usr/lib/python3.9/pathlib.py",
		"/home/levitanus/gits/ReaExtensions/rea_extensions/lilypond.ly",
		"/home/levitanus/gits/ReaExtensions/rea_extensions/lily_export.py",
		"/home/levitanus/gits/reapy/reapy/tools/_inside_reaper.pyi",
		"/home/levitanus/gits/ReaExtensions/rea_extensions/imgui.py",
		"/home/levitanus/gits/reapy/reapy/core/track/track.py",
		"/home/levitanus/gits/reapy/reapy/tools/_inside_reaper.py",
		"/home/levitanus/gits/lilypond/python/langdefs.py",
		"/home/levitanus/gits/ReaExtensions/tests/test_lilypond_dom.py",
		"/home/levitanus/gits/ReaExtensions/tests/test2.py",
		"/home/levitanus/gits/reasession/reasession/connections/jack_backend.py",
		"/home/levitanus/.config/sublime-text-3/Packages/Anaconda/Anaconda.sublime-settings",
		"/home/levitanus/gits/ReaExtensions/rea_extensions/tablet_tracker.py",
		"/home/levitanus/.config/REAPER/Data/Reaticulate.reabank",
		"/media/levitanus/Files/distrib/UVI Falcon/.txt",
		"/media/levitanus/Files/games/Kerbal Space Program Russian/gameinfo",
		"/home/levitanus/Загрузки/temp/benchmark/pabellon_barcelona/readme.txt",
		"/media/levitanus/RaidNew/fonogr/концерт Тихон/Синяя вечность/Синяя вечность.RPP",
		"/home/levitanus/Загрузки/temp/amdgpu-pro-16.40-348864/Packages",
		"/home/levitanus/Загрузки/temp/LinVst-4.7/LinVst-4.7-drag-drop/Readme",
		"/home/levitanus/.local/share/applications/Tablet xyz midi controller.desktop",
		"/home/levitanus/Загрузки/temp/LinVst-4.7/ReadMe",
		"/home/levitanus/Загрузки/temp/benchmark/classroom/ReadMe.txt",
		"/home/levitanus/Загрузки/temp/benchmark/fishy_cat/readme.txt",
		"/home/levitanus/Загрузки/LinVst-master/pluginterfaces/LICENSE.txt",
		"/home/levitanus/Загрузки/temp/amdgpu-pro-16.40-348864/Release",
		"/home/levitanus/gits/reasession/reasession/master.py",
		"/home/levitanus/gits/reasession/reasession/slaves.py",
		"/home/levitanus/gits/reasession/reasession/slave.py",
		"/home/levitanus/gits/reasession/setup.py",
		"/home/levitanus/gits/ReaExtensions/reaextensions.sublime-project",
		"/home/levitanus/Загрузки/temp/cgkit-2.0.0/README.txt",
		"/home/levitanus/Загрузки/temp/cgkit-2.0.0/supportlib/SConstruct",
		"/home/levitanus/.local/lib/python3.9/site-packages/cgkit1-1.2.7.dist-info/METADATA",
		"/home/levitanus/.local/lib/python3.9/site-packages/cgkit1-1.2.7.dist-info/RECORD",
		"/home/levitanus/.local/lib/python3.9/site-packages/cgkit1-1.2.7.dist-info/top_level.txt",
		"/home/levitanus/.local/lib/python3.9/site-packages/cgkitinfo.py",
		"/home/levitanus/.local/lib/python3.9/site-packages/cgkit1-1.2.7.dist-info/INSTALLER",
		"/home/levitanus/gits/ReaExtensions/rea_extensions/musicexp.py",
		"/home/levitanus/gits/ReaExtensions/JSFX/KAWAI note-off generator",
		"/home/levitanus/gits/ReaExtensions/rea_extensions/utilities.py",
		"/home/levitanus/gits/ReaExtensions/rea_extensions/lilypond_dom.py",
		"/home/levitanus/gits/ReaExtensions/rea_extensions/lilylib.py",
		"/usr/lib/python3.9/optparse.py",
		"/home/levitanus/gits/ReaExtensions/test_lilypond_dom.py",
		"/home/levitanus/gits/ReaExtensions/setup.py",
		"/home/levitanus/.cache/sublime-text-3/Package Storage/LSP-pyright/14.17.6/language-server/node_modules/pyright/dist/typeshed-fallback/stdlib/abc.pyi",
		"/home/levitanus/.config/sublime-text-3/Packages/User/Anaconda.sublime-settings",
		"/home/levitanus/.config/sublime-text-3/Packages/MagicPython/misc/scopes",
		"/home/levitanus/gits/ReaExtensions/rea_extensions/test_python_syntax.py",
		"/media/levitanus/RAID/gits/ReaExtensions/rea_extensions/lilypond.py",
		"/home/levitanus/gits/reapy/reapy/core/fx/fx.pyi",
		"/home/levitanus/gits/reapy/reapy/core/fx/fx_param.pyi",
		"/home/levitanus/gits/reapy/setup.py",
		"/media/levitanus/RAID/gits/reapy/reapy_boost/config/resource_path.py",
		"/media/levitanus/RAID/gits/reapy/reapy_boost/tools/network/machines.py",
		"/media/levitanus/RAID/gits/reapy/reapy_boost/__init__.py",
		"/home/levitanus/.config/sublime-text-3/Packages/Python Improved/PythonImproved.tmLanguage",
		"/home/levitanus/.config/sublime-text-3/Packages/User/reabank.sublime-syntax",
		"/home/levitanus/.config/sublime-text-3/Packages/User/LevitanusPythonic.sublime-color-scheme",
		"/home/levitanus/gits/MusicStyleMap/Roboto_Mono/README.txt",
		"/home/levitanus/.config/sublime-text-3/Packages/ChromodynamicsSolarized.tmTheme",
		"/home/levitanus/Загрузки/temp/python_syntax.png",
		"/home/levitanus/Загрузки/temp/syntax.txt",
		"/home/levitanus/Загрузки/temp/--dpi.txt",
		"/home/levitanus/gits/ReaExtensions/test.py",
		"/home/levitanus/.local/lib/python3.9/site-packages/quickly/dom/lily.py"
	],
	"find":
	{
		"height": 27.0
	},
	"find_in_files":
	{
		"height": 101.0,
		"where_history":
		[
			"D:\\gits\\reapy\\reapy"
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"pr.Accidental",
			"pr",
			"return",
			"accidental",
			"Accidental",
			"is'",
			"is",
			"es",
			"1",
			"_accidentals",
			"path",
			"wind",
			"show",
			"popu",
			"reaper",
			"end",
			"then",
			"open",
			"reaper.ImGui_",
			"reaper",
			"end",
			"function",
			"ImGui_",
			"local",
			"font",
			"barchek",
			"round",
			"chord",
			"(?!\\n)",
			"split",
			"chord",
			"fracture_to_length",
			"events",
			"any_",
			"input",
			"print",
			"ev.copy()",
			"copy(ev)",
			"container",
			"tie",
			"left",
			"tempo",
			" in quarter notes",
			"Length",
			"  # type:ignore",
			"  # type:ignore\n            time,",
			"float",
			"property",
			"return",
			"-> 'reapy.FX'",
			"if",
			"self",
			"seconds",
			"time",
			"voices[key]",
			"Position, Event",
			"@property\n    def fraction",
			"\n    # denominator: int\n",
			"#",
			"b",
			"#",
			"__str__",
			"other",
			"self.midi_pitch is None",
			"self.midi_pitch // 24",
			"None",
			"''",
			"pos1",
			")\n",
			"Fraction(",
			"'Fractured'",
			"pr.Fraction",
			"length",
			"'",
			":",
			"'=",
			"abjad",
			"tempo",
			"mod",
			"time",
			"fix",
			"cc",
			"g=",
			"cc:20",
			"C",
			"gliss",
			"glissando",
			"stacc",
			"0=",
			"sustain",
			"Brass",
			"=",
			"without clip",
			"full",
			"print ",
			"}",
			"{",
			"Domra",
			"domra",
			"identifier",
			"__call__",
			"predicate",
			"c",
			"Interval",
			"pitch):",
			"utilities",
			"interpret_alter_element",
			"e(\"",
			"=",
			"_loglevels",
			"prefix",
			"a",
			"{{",
			"more_string",
			"true",
			"reapy_boost",
			"reapy.",
			"config",
			"python",
			"parameter.function",
			"paramete",
			"keyword.operator.assignment",
			"example-c",
			"index",
			"meta.",
			"function-call",
			"argu",
			"variable"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"♭",
			"utils",
			"reapy_boost.",
			"cyan",
			"magenta",
			"yellow",
			"red",
			"magenta",
			"orange",
			"base3",
			"base2",
			"var(base1)",
			"base2",
			"$1",
			"Length\\($1",
			"ValuesFilledType"
		],
		"reverse": false,
		"scrollbar_highlights": true,
		"show_context": true,
		"use_buffer2": true,
		"use_gitignore": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
				{
					"buffer": 0,
					"file": "rea_score/reascripts/ReaScore_render_selected_track.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 209,
						"regions":
						{
						},
						"selection":
						[
							[
								54,
								54
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": ".",
									"selector": "source.python - string - comment - constant.numeric"
								},
								{
									"characters": ".[",
									"selector": "meta.tag, source - comment - string.quoted.double.block - string.quoted.single.block - string.unquoted.heredoc",
									"server": "LSP-pyright"
								}
							],
							"lsp_active": true,
							"lsp_hover_provider_count": 2,
							"lsp_uri": "file:///home/levitanus/gits/ReaScore/rea_score/reascripts/ReaScore_render_selected_track.py",
							"show_definitions": false,
							"syntax": "Packages/MagicPython/grammars/MagicPython.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "tests/test_dom.py",
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1299,
						"regions":
						{
						},
						"selection":
						[
							[
								659,
								659
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": ".",
									"selector": "source.python - string - comment - constant.numeric"
								}
							],
							"lsp_active": true,
							"lsp_hover_provider_count": 2,
							"lsp_uri": "file:///home/levitanus/gits/ReaScore/tests/test_dom.py",
							"show_definitions": false,
							"syntax": "Packages/MagicPython/grammars/MagicPython.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 720.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "tests/test_primitives.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3719,
						"regions":
						{
						},
						"selection":
						[
							[
								1129,
								1129
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": ".",
									"selector": "source.python - string - comment - constant.numeric"
								},
								{
									"characters": ".[",
									"selector": "meta.tag, source - comment - string.quoted.double.block - string.quoted.single.block - string.unquoted.heredoc",
									"server": "LSP-pyright"
								}
							],
							"lsp_active": true,
							"lsp_hover_provider_count": 1,
							"lsp_uri": "file:///home/levitanus/gits/ReaScore/tests/test_primitives.py",
							"show_definitions": false,
							"syntax": "Packages/MagicPython/grammars/MagicPython.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 538.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "tests/simple_test.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 931,
						"regions":
						{
						},
						"selection":
						[
							[
								2,
								931
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": ".",
									"selector": "source.python - string - comment - constant.numeric"
								},
								{
									"characters": ".[",
									"selector": "meta.tag, source - comment - string.quoted.double.block - string.quoted.single.block - string.unquoted.heredoc",
									"server": "LSP-pyright"
								}
							],
							"lsp_active": true,
							"lsp_hover_provider_count": 1,
							"lsp_uri": "file:///home/levitanus/gits/ReaScore/tests/simple_test.py",
							"show_definitions": false,
							"syntax": "Packages/MagicPython/grammars/MagicPython.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		},
		{
			"sheets":
			[
				{
					"buffer": 4,
					"file": "rea_score/scale.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8027,
						"regions":
						{
						},
						"selection":
						[
							[
								6251,
								6251
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": ".",
									"selector": "source.python - string - comment - constant.numeric"
								},
								{
									"characters": ".[",
									"selector": "meta.tag, source - comment - string.quoted.double.block - string.quoted.single.block - string.unquoted.heredoc",
									"server": "LSP-pyright"
								}
							],
							"lsp_active": true,
							"lsp_hover_provider_count": 3,
							"lsp_uri": "file:///home/levitanus/gits/ReaScore/rea_score/scale.py",
							"show_definitions": false,
							"syntax": "Packages/MagicPython/grammars/MagicPython.tmLanguage",
							"tab_size": 4
						},
						"translation.x": 0.0,
						"translation.y": 2713.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "/media/levitanus/RAID/gits/ReaScore/rea_score/inspector.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3770,
						"regions":
						{
						},
						"selection":
						[
							[
								132,
								132
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": ".",
									"selector": "source.python - string - comment - constant.numeric"
								},
								{
									"characters": ".[",
									"selector": "meta.tag, source - comment - string.quoted.double.block - string.quoted.single.block - string.unquoted.heredoc",
									"server": "LSP-pyright"
								}
							],
							"lsp_active": true,
							"lsp_hover_provider_count": 2,
							"lsp_uri": "file:///media/levitanus/RAID/gits/ReaScore/rea_score/inspector.py",
							"show_definitions": false,
							"syntax": "Packages/MagicPython/grammars/MagicPython.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "/media/levitanus/RAID/gits/ReaScore/rea_score/dom.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7445,
						"regions":
						{
						},
						"selection":
						[
							[
								7103,
								7103
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": ".",
									"selector": "source.python - string - comment - constant.numeric"
								},
								{
									"characters": ".[",
									"selector": "meta.tag, source - comment - string.quoted.double.block - string.quoted.single.block - string.unquoted.heredoc",
									"server": "LSP-pyright"
								}
							],
							"lsp_active": true,
							"lsp_hover_provider_count": 2,
							"lsp_uri": "file:///media/levitanus/RAID/gits/ReaScore/rea_score/dom.py",
							"show_definitions": false,
							"syntax": "Packages/MagicPython/grammars/MagicPython.tmLanguage",
							"tab_size": 4
						},
						"translation.x": 0.0,
						"translation.y": 2419.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "/media/levitanus/RAID/gits/ReaScore/rea_score/primitives.py",
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 12851,
						"regions":
						{
						},
						"selection":
						[
							[
								11416,
								11416
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": ".",
									"selector": "source.python - string - comment - constant.numeric"
								},
								{
									"characters": ".[",
									"selector": "meta.tag, source - comment - string.quoted.double.block - string.quoted.single.block - string.unquoted.heredoc",
									"server": "LSP-pyright"
								}
							],
							"lsp_active": true,
							"lsp_hover_provider_count": 2,
							"lsp_uri": "file:///media/levitanus/RAID/gits/ReaScore/rea_score/primitives.py",
							"show_definitions": false,
							"syntax": "Packages/MagicPython/grammars/MagicPython.tmLanguage",
							"tab_size": 4
						},
						"translation.x": 0.0,
						"translation.y": 1690.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "/media/levitanus/RAID/gits/ReaScore/rea_score/lily_convert.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4547,
						"regions":
						{
						},
						"selection":
						[
							[
								297,
								297
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": ".",
									"selector": "source.python - string - comment - constant.numeric"
								},
								{
									"characters": ".[",
									"selector": "meta.tag, source - comment - string.quoted.double.block - string.quoted.single.block - string.unquoted.heredoc",
									"server": "LSP-pyright"
								}
							],
							"lsp_active": true,
							"lsp_hover_provider_count": 2,
							"lsp_uri": "file:///media/levitanus/RAID/gits/ReaScore/rea_score/lily_convert.py",
							"show_definitions": false,
							"syntax": "Packages/MagicPython/grammars/MagicPython.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 277.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 27.0
	},
	"input":
	{
		"height": 51.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			]
		],
		"cols":
		[
			0.0,
			0.5,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.SublimeLinter":
	{
		"height": 129.0
	},
	"output.SublimeLinter Messages":
	{
		"height": 126.0
	},
	"output.anaconda_documentation":
	{
		"height": 240.0
	},
	"output.autopep8":
	{
		"height": 156.0
	},
	"output.diagnostics":
	{
		"height": 110.0
	},
	"output.exec":
	{
		"height": 206.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.language servers":
	{
		"height": 0.0
	},
	"output.mdpopups":
	{
		"height": 0.0
	},
	"output.references":
	{
		"height": 110.0
	},
	"pinned_build_system": "Packages/User/python3_my.sublime-build",
	"project": "ReaScore.sublime-project",
	"replace":
	{
		"height": 50.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 516.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"~/gits/sample_editor/sample_editor.sublime-project"
			]
		],
		"width": 392.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 281.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
